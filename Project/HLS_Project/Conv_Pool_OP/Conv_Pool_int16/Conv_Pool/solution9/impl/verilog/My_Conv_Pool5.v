// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module My_Conv_Pool5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_buffer_0_0_address0,
        input_buffer_0_0_ce0,
        input_buffer_0_0_q0,
        input_buffer_0_0_address1,
        input_buffer_0_0_ce1,
        input_buffer_0_0_q1,
        input_buffer_0_1_address0,
        input_buffer_0_1_ce0,
        input_buffer_0_1_q0,
        input_buffer_0_1_address1,
        input_buffer_0_1_ce1,
        input_buffer_0_1_q1,
        input_buffer_1_0_address0,
        input_buffer_1_0_ce0,
        input_buffer_1_0_q0,
        input_buffer_1_0_address1,
        input_buffer_1_0_ce1,
        input_buffer_1_0_q1,
        input_buffer_1_1_address0,
        input_buffer_1_1_ce0,
        input_buffer_1_1_q0,
        input_buffer_1_1_address1,
        input_buffer_1_1_ce1,
        input_buffer_1_1_q1,
        input_buffer_2_0_address0,
        input_buffer_2_0_ce0,
        input_buffer_2_0_q0,
        input_buffer_2_0_address1,
        input_buffer_2_0_ce1,
        input_buffer_2_0_q1,
        input_buffer_2_1_address0,
        input_buffer_2_1_ce0,
        input_buffer_2_1_q0,
        input_buffer_2_1_address1,
        input_buffer_2_1_ce1,
        input_buffer_2_1_q1,
        input_buffer_3_0_address0,
        input_buffer_3_0_ce0,
        input_buffer_3_0_q0,
        input_buffer_3_0_address1,
        input_buffer_3_0_ce1,
        input_buffer_3_0_q1,
        input_buffer_3_1_address0,
        input_buffer_3_1_ce0,
        input_buffer_3_1_q0,
        input_buffer_3_1_address1,
        input_buffer_3_1_ce1,
        input_buffer_3_1_q1,
        output_buffer_0_address1,
        output_buffer_0_ce1,
        output_buffer_0_we1,
        output_buffer_0_d1,
        output_buffer_1_address1,
        output_buffer_1_ce1,
        output_buffer_1_we1,
        output_buffer_1_d1,
        output_buffer_2_address1,
        output_buffer_2_ce1,
        output_buffer_2_we1,
        output_buffer_2_d1,
        output_buffer_3_address1,
        output_buffer_3_ce1,
        output_buffer_3_we1,
        output_buffer_3_d1,
        Kx,
        Ky
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] input_buffer_0_0_address0;
output   input_buffer_0_0_ce0;
input  [15:0] input_buffer_0_0_q0;
output  [8:0] input_buffer_0_0_address1;
output   input_buffer_0_0_ce1;
input  [15:0] input_buffer_0_0_q1;
output  [8:0] input_buffer_0_1_address0;
output   input_buffer_0_1_ce0;
input  [15:0] input_buffer_0_1_q0;
output  [8:0] input_buffer_0_1_address1;
output   input_buffer_0_1_ce1;
input  [15:0] input_buffer_0_1_q1;
output  [8:0] input_buffer_1_0_address0;
output   input_buffer_1_0_ce0;
input  [15:0] input_buffer_1_0_q0;
output  [8:0] input_buffer_1_0_address1;
output   input_buffer_1_0_ce1;
input  [15:0] input_buffer_1_0_q1;
output  [8:0] input_buffer_1_1_address0;
output   input_buffer_1_1_ce0;
input  [15:0] input_buffer_1_1_q0;
output  [8:0] input_buffer_1_1_address1;
output   input_buffer_1_1_ce1;
input  [15:0] input_buffer_1_1_q1;
output  [8:0] input_buffer_2_0_address0;
output   input_buffer_2_0_ce0;
input  [15:0] input_buffer_2_0_q0;
output  [8:0] input_buffer_2_0_address1;
output   input_buffer_2_0_ce1;
input  [15:0] input_buffer_2_0_q1;
output  [8:0] input_buffer_2_1_address0;
output   input_buffer_2_1_ce0;
input  [15:0] input_buffer_2_1_q0;
output  [8:0] input_buffer_2_1_address1;
output   input_buffer_2_1_ce1;
input  [15:0] input_buffer_2_1_q1;
output  [8:0] input_buffer_3_0_address0;
output   input_buffer_3_0_ce0;
input  [15:0] input_buffer_3_0_q0;
output  [8:0] input_buffer_3_0_address1;
output   input_buffer_3_0_ce1;
input  [15:0] input_buffer_3_0_q1;
output  [8:0] input_buffer_3_1_address0;
output   input_buffer_3_1_ce0;
input  [15:0] input_buffer_3_1_q0;
output  [8:0] input_buffer_3_1_address1;
output   input_buffer_3_1_ce1;
input  [15:0] input_buffer_3_1_q1;
output  [8:0] output_buffer_0_address1;
output   output_buffer_0_ce1;
output  [3:0] output_buffer_0_we1;
output  [31:0] output_buffer_0_d1;
output  [8:0] output_buffer_1_address1;
output   output_buffer_1_ce1;
output  [3:0] output_buffer_1_we1;
output  [31:0] output_buffer_1_d1;
output  [8:0] output_buffer_2_address1;
output   output_buffer_2_ce1;
output  [3:0] output_buffer_2_we1;
output  [31:0] output_buffer_2_d1;
output  [8:0] output_buffer_3_address1;
output   output_buffer_3_ce1;
output  [3:0] output_buffer_3_we1;
output  [31:0] output_buffer_3_d1;
input  [4:0] Kx;
input  [9:0] Ky;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] input_buffer_0_0_address0;
reg input_buffer_0_0_ce0;
reg[8:0] input_buffer_0_0_address1;
reg input_buffer_0_0_ce1;
reg[8:0] input_buffer_0_1_address0;
reg input_buffer_0_1_ce0;
reg[8:0] input_buffer_0_1_address1;
reg input_buffer_0_1_ce1;
reg[8:0] input_buffer_1_0_address0;
reg input_buffer_1_0_ce0;
reg[8:0] input_buffer_1_0_address1;
reg input_buffer_1_0_ce1;
reg[8:0] input_buffer_1_1_address0;
reg input_buffer_1_1_ce0;
reg[8:0] input_buffer_1_1_address1;
reg input_buffer_1_1_ce1;
reg[8:0] input_buffer_2_0_address0;
reg input_buffer_2_0_ce0;
reg[8:0] input_buffer_2_0_address1;
reg input_buffer_2_0_ce1;
reg[8:0] input_buffer_2_1_address0;
reg input_buffer_2_1_ce0;
reg[8:0] input_buffer_2_1_address1;
reg input_buffer_2_1_ce1;
reg[8:0] input_buffer_3_0_address0;
reg input_buffer_3_0_ce0;
reg[8:0] input_buffer_3_0_address1;
reg input_buffer_3_0_ce1;
reg[8:0] input_buffer_3_1_address0;
reg input_buffer_3_1_ce0;
reg[8:0] input_buffer_3_1_address1;
reg input_buffer_3_1_ce1;
reg output_buffer_0_ce1;
reg[3:0] output_buffer_0_we1;
reg output_buffer_1_ce1;
reg[3:0] output_buffer_1_we1;
reg output_buffer_2_ce1;
reg[3:0] output_buffer_2_we1;
reg output_buffer_3_ce1;
reg[3:0] output_buffer_3_we1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln107_fu_927_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] do_init_reg_538;
reg   [0:0] icmp_ln109225_reg_582;
reg   [0:0] icmp_ln111224_reg_597;
reg   [4:0] p_cast_cast222_reg_611;
reg   [3:0] zext_ln109221_reg_625;
reg   [3:0] j220_reg_639;
reg   [7:0] indvar_flatten218_reg_653;
reg   [2:0] cout217_reg_667;
reg   [9:0] indvar_flatten26216_reg_681;
reg  signed [13:0] zext_ln107_phi_reg_695;
reg  signed [4:0] Kx249_phi_reg_707;
reg   [4:0] zext_ln111223_reg_720;
wire   [2:0] cout_fu_753_p3;
reg   [2:0] cout_reg_1483;
reg   [2:0] cout_reg_1483_pp0_iter1_reg;
wire   [1:0] trunc_ln107_fu_761_p1;
reg   [1:0] trunc_ln107_reg_1492;
reg   [1:0] trunc_ln107_reg_1492_pp0_iter1_reg;
reg   [1:0] trunc_ln107_reg_1492_pp0_iter2_reg;
reg   [1:0] trunc_ln107_reg_1492_pp0_iter3_reg;
wire   [0:0] and_ln107_fu_779_p2;
reg   [0:0] and_ln107_reg_1496;
wire   [3:0] i_fu_805_p3;
reg   [3:0] i_reg_1501;
reg   [3:0] i_reg_1501_pp0_iter1_reg;
reg   [3:0] i_reg_1501_pp0_iter2_reg;
reg   [3:0] i_reg_1501_pp0_iter3_reg;
wire   [4:0] select_ln109_2_fu_823_p3;
reg   [4:0] select_ln109_2_reg_1508;
wire   [4:0] p_mid13_fu_831_p2;
reg   [4:0] p_mid13_reg_1514;
wire   [9:0] trunc_ln112_fu_847_p1;
reg   [9:0] trunc_ln112_reg_1519;
wire   [0:0] trunc_ln112_1_fu_851_p1;
reg   [0:0] trunc_ln112_1_reg_1524;
reg   [0:0] trunc_ln112_1_reg_1524_pp0_iter1_reg;
reg   [8:0] lshr_ln_reg_1544;
wire   [0:0] trunc_ln121_fu_865_p1;
reg   [0:0] trunc_ln121_reg_1550;
reg   [0:0] trunc_ln121_reg_1550_pp0_iter1_reg;
reg   [0:0] trunc_ln121_reg_1550_pp0_iter2_reg;
reg   [0:0] trunc_ln121_reg_1550_pp0_iter3_reg;
reg   [2:0] lshr_ln2_reg_1559;
reg   [2:0] lshr_ln2_reg_1559_pp0_iter1_reg;
reg   [2:0] lshr_ln2_reg_1559_pp0_iter2_reg;
reg   [2:0] lshr_ln2_reg_1559_pp0_iter3_reg;
wire   [9:0] add_ln107_1_fu_879_p2;
reg   [9:0] add_ln107_1_reg_1564;
wire   [3:0] j_fu_885_p2;
reg   [3:0] j_reg_1569;
wire   [7:0] select_ln109_4_fu_897_p3;
reg   [7:0] select_ln109_4_reg_1574;
wire   [4:0] empty_fu_909_p2;
reg   [4:0] empty_reg_1579;
wire   [0:0] icmp_ln111_fu_915_p2;
reg   [0:0] icmp_ln111_reg_1585;
wire   [0:0] icmp_ln109_fu_921_p2;
reg   [0:0] icmp_ln109_reg_1590;
reg   [0:0] icmp_ln107_reg_1595;
reg   [0:0] icmp_ln107_reg_1595_pp0_iter1_reg;
reg   [0:0] icmp_ln107_reg_1595_pp0_iter2_reg;
reg   [0:0] icmp_ln107_reg_1595_pp0_iter3_reg;
wire   [4:0] empty_389_fu_1066_p2;
reg   [4:0] empty_389_reg_1759;
reg    ap_enable_reg_pp0_iter1;
wire   [15:0] tmp1_fu_1107_p6;
reg   [15:0] tmp1_reg_1764;
wire   [15:0] tmp2_fu_1156_p6;
reg   [15:0] tmp2_reg_1770;
wire   [15:0] tmp3_fu_1205_p6;
reg   [15:0] tmp3_reg_1776;
wire   [15:0] tmp4_fu_1254_p6;
reg   [15:0] tmp4_reg_1782;
wire   [15:0] select_ln121_fu_1293_p3;
reg   [15:0] select_ln121_reg_1788;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] ap_phi_mux_do_init_phi_fu_542_p6;
wire    ap_block_pp0_stage0;
reg   [0:0] ap_phi_mux_icmp_ln109225_phi_fu_586_p6;
reg   [0:0] ap_phi_mux_icmp_ln111224_phi_fu_601_p6;
reg   [4:0] ap_phi_mux_p_cast_cast222_phi_fu_615_p6;
reg   [3:0] ap_phi_mux_zext_ln109221_phi_fu_629_p6;
reg   [3:0] ap_phi_mux_j220_phi_fu_643_p6;
reg   [7:0] ap_phi_mux_indvar_flatten218_phi_fu_657_p6;
reg   [2:0] ap_phi_mux_cout217_phi_fu_671_p6;
reg   [9:0] ap_phi_mux_indvar_flatten26216_phi_fu_685_p6;
reg  signed [13:0] ap_phi_mux_zext_ln107_phi_phi_fu_699_p4;
wire   [13:0] zext_ln107_fu_734_p1;
wire  signed [13:0] ap_phi_reg_pp0_iter0_zext_ln107_phi_reg_695;
reg  signed [4:0] ap_phi_mux_Kx249_phi_phi_fu_711_p4;
wire  signed [4:0] ap_phi_reg_pp0_iter0_Kx249_phi_reg_707;
reg   [4:0] ap_phi_mux_zext_ln111223_phi_fu_724_p6;
wire   [63:0] zext_ln112_1_fu_986_p1;
wire   [63:0] zext_ln114_1_fu_1003_p1;
wire   [63:0] zext_ln113_fu_1036_p1;
wire   [63:0] zext_ln115_fu_1054_p1;
wire   [63:0] zext_ln121_3_fu_1345_p1;
wire   [3:0] shl_ln121_7_fu_1378_p2;
wire   [3:0] shl_ln121_5_fu_1410_p2;
wire   [3:0] shl_ln121_3_fu_1442_p2;
wire   [3:0] shl_ln121_1_fu_1474_p2;
wire   [2:0] add_ln107_fu_739_p2;
wire   [0:0] xor_ln107_fu_773_p2;
wire   [3:0] select_ln107_fu_745_p3;
wire   [0:0] or_ln109_fu_791_p2;
wire   [3:0] add_ln109_fu_785_p2;
wire   [3:0] p_mid1_fu_817_p0;
wire   [4:0] p_mid1_fu_817_p2;
wire   [4:0] select_ln107_2_fu_765_p3;
wire   [3:0] select_ln109_fu_797_p3;
wire   [3:0] mul_ln112_fu_841_p0;
wire   [13:0] mul_ln112_fu_841_p2;
wire   [7:0] add_ln109_1_fu_891_p2;
wire   [3:0] empty_fu_909_p0;
wire   [8:0] p_shl1_fu_944_p3;
wire   [8:0] zext_ln112_fu_941_p1;
wire   [4:0] select_ln107_3_fu_933_p3;
wire   [4:0] select_ln109_3_fu_957_p3;
wire   [8:0] p_shl_fu_967_p3;
wire   [8:0] zext_ln114_fu_963_p1;
wire   [8:0] sub_ln112_fu_951_p2;
wire   [8:0] add_ln112_fu_981_p2;
wire   [8:0] sub_ln114_fu_975_p2;
wire   [8:0] add_ln114_fu_998_p2;
wire   [9:0] add_ln113_fu_1015_p2;
wire   [8:0] lshr_ln1_fu_1020_p4;
wire   [8:0] add_ln113_1_fu_1030_p2;
wire   [8:0] add_ln115_fu_1048_p2;
wire   [15:0] tmp_fu_1071_p4;
wire   [15:0] tmp_s_fu_1080_p4;
wire   [15:0] tmp_13_fu_1089_p4;
wire   [15:0] tmp_14_fu_1098_p4;
wire   [15:0] tmp_15_fu_1120_p4;
wire   [15:0] tmp_16_fu_1129_p4;
wire   [15:0] tmp_17_fu_1138_p4;
wire   [15:0] tmp_18_fu_1147_p4;
wire   [15:0] tmp_19_fu_1169_p4;
wire   [15:0] tmp_20_fu_1178_p4;
wire   [15:0] tmp_21_fu_1187_p4;
wire   [15:0] tmp_22_fu_1196_p4;
wire   [15:0] tmp_23_fu_1218_p4;
wire   [15:0] tmp_24_fu_1227_p4;
wire   [15:0] tmp_25_fu_1236_p4;
wire   [15:0] tmp_26_fu_1245_p4;
wire   [0:0] icmp_ln1695_fu_1267_p2;
wire   [0:0] icmp_ln1695_32_fu_1277_p2;
wire   [15:0] max1_fu_1271_p3;
wire   [15:0] max2_fu_1281_p3;
wire   [0:0] icmp_ln1695_33_fu_1287_p2;
wire   [7:0] tmp_5_fu_1301_p3;
wire   [4:0] tmp_6_fu_1312_p3;
wire   [8:0] zext_ln121_fu_1308_p1;
wire   [8:0] zext_ln121_1_fu_1319_p1;
wire   [8:0] sub_ln121_fu_1323_p2;
wire   [8:0] zext_ln121_2_fu_1336_p1;
wire   [8:0] add_ln121_fu_1339_p2;
wire   [4:0] shl_ln_fu_1329_p3;
wire   [31:0] zext_ln121_14_fu_1357_p1;
wire   [31:0] zext_ln121_13_fu_1353_p1;
wire   [1:0] udiv228_cast_cast_fu_1367_p3;
wire   [3:0] zext_ln121_15_fu_1374_p1;
wire   [31:0] zext_ln121_11_fu_1389_p1;
wire   [31:0] zext_ln121_10_fu_1385_p1;
wire   [1:0] udiv226_cast_cast_fu_1399_p3;
wire   [3:0] zext_ln121_12_fu_1406_p1;
wire   [31:0] zext_ln121_8_fu_1421_p1;
wire   [31:0] zext_ln121_7_fu_1417_p1;
wire   [1:0] udiv_cast_cast_fu_1431_p3;
wire   [3:0] zext_ln121_9_fu_1438_p1;
wire   [31:0] zext_ln121_5_fu_1453_p1;
wire   [31:0] zext_ln121_4_fu_1449_p1;
wire   [1:0] udiv230_cast_cast_fu_1463_p3;
wire   [3:0] zext_ln121_6_fu_1470_p1;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to3;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [4:0] empty_fu_909_p00;
wire   [13:0] mul_ln112_fu_841_p00;
wire   [4:0] p_mid1_fu_817_p00;
reg    ap_condition_42;
reg    ap_condition_341;
reg    ap_condition_932;
reg    ap_condition_936;
reg    ap_condition_940;
reg    ap_condition_944;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

My_Conv_mul_4ns_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_4ns_5s_5_1_1_U742(
    .din0(p_mid1_fu_817_p0),
    .din1(ap_phi_mux_Kx249_phi_phi_fu_711_p4),
    .dout(p_mid1_fu_817_p2)
);

My_Conv_mul_4ns_14s_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mul_4ns_14s_14_1_1_U743(
    .din0(mul_ln112_fu_841_p0),
    .din1(ap_phi_mux_zext_ln107_phi_phi_fu_699_p4),
    .dout(mul_ln112_fu_841_p2)
);

My_Conv_mul_4ns_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_4ns_5s_5_1_1_U744(
    .din0(empty_fu_909_p0),
    .din1(ap_phi_mux_Kx249_phi_phi_fu_711_p4),
    .dout(empty_fu_909_p2)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U745(
    .din0(input_buffer_0_0_q1),
    .din1(input_buffer_0_1_q1),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_fu_1071_p4)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U746(
    .din0(input_buffer_1_0_q1),
    .din1(input_buffer_1_1_q1),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_s_fu_1080_p4)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U747(
    .din0(input_buffer_2_0_q1),
    .din1(input_buffer_2_1_q1),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_13_fu_1089_p4)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U748(
    .din0(input_buffer_3_0_q1),
    .din1(input_buffer_3_1_q1),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_14_fu_1098_p4)
);

My_Conv_mux_43_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_43_16_1_1_U749(
    .din0(tmp_fu_1071_p4),
    .din1(tmp_s_fu_1080_p4),
    .din2(tmp_13_fu_1089_p4),
    .din3(tmp_14_fu_1098_p4),
    .din4(cout_reg_1483_pp0_iter1_reg),
    .dout(tmp1_fu_1107_p6)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U750(
    .din0(input_buffer_0_1_q1),
    .din1(input_buffer_0_0_q1),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_15_fu_1120_p4)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U751(
    .din0(input_buffer_1_1_q1),
    .din1(input_buffer_1_0_q1),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_16_fu_1129_p4)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U752(
    .din0(input_buffer_2_1_q1),
    .din1(input_buffer_2_0_q1),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_17_fu_1138_p4)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U753(
    .din0(input_buffer_3_1_q1),
    .din1(input_buffer_3_0_q1),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_18_fu_1147_p4)
);

My_Conv_mux_43_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_43_16_1_1_U754(
    .din0(tmp_15_fu_1120_p4),
    .din1(tmp_16_fu_1129_p4),
    .din2(tmp_17_fu_1138_p4),
    .din3(tmp_18_fu_1147_p4),
    .din4(cout_reg_1483_pp0_iter1_reg),
    .dout(tmp2_fu_1156_p6)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U755(
    .din0(input_buffer_0_0_q0),
    .din1(input_buffer_0_1_q0),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_19_fu_1169_p4)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U756(
    .din0(input_buffer_1_0_q0),
    .din1(input_buffer_1_1_q0),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_20_fu_1178_p4)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U757(
    .din0(input_buffer_2_0_q0),
    .din1(input_buffer_2_1_q0),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_21_fu_1187_p4)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U758(
    .din0(input_buffer_3_0_q0),
    .din1(input_buffer_3_1_q0),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_22_fu_1196_p4)
);

My_Conv_mux_43_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_43_16_1_1_U759(
    .din0(tmp_19_fu_1169_p4),
    .din1(tmp_20_fu_1178_p4),
    .din2(tmp_21_fu_1187_p4),
    .din3(tmp_22_fu_1196_p4),
    .din4(cout_reg_1483_pp0_iter1_reg),
    .dout(tmp3_fu_1205_p6)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U760(
    .din0(input_buffer_0_1_q0),
    .din1(input_buffer_0_0_q0),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_23_fu_1218_p4)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U761(
    .din0(input_buffer_1_1_q0),
    .din1(input_buffer_1_0_q0),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_24_fu_1227_p4)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U762(
    .din0(input_buffer_2_1_q0),
    .din1(input_buffer_2_0_q0),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_25_fu_1236_p4)
);

My_Conv_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U763(
    .din0(input_buffer_3_1_q0),
    .din1(input_buffer_3_0_q0),
    .din2(trunc_ln112_1_reg_1524_pp0_iter1_reg),
    .dout(tmp_26_fu_1245_p4)
);

My_Conv_mux_43_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_43_16_1_1_U764(
    .din0(tmp_23_fu_1218_p4),
    .din1(tmp_24_fu_1227_p4),
    .din2(tmp_25_fu_1236_p4),
    .din3(tmp_26_fu_1245_p4),
    .din4(cout_reg_1483_pp0_iter1_reg),
    .dout(tmp4_fu_1254_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_542_p6 == 1'd0)) begin
            Kx249_phi_reg_707 <= Kx249_phi_reg_707;
        end else if ((ap_phi_mux_do_init_phi_fu_542_p6 == 1'd1)) begin
            Kx249_phi_reg_707 <= Kx;
        end else if ((1'b1 == 1'b1)) begin
            Kx249_phi_reg_707 <= ap_phi_reg_pp0_iter0_Kx249_phi_reg_707;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cout217_reg_667 <= cout_reg_1483;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        cout217_reg_667 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        do_init_reg_538 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        do_init_reg_538 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln109225_reg_582 <= icmp_ln109_reg_1590;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        icmp_ln109225_reg_582 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln111224_reg_597 <= icmp_ln111_reg_1585;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        icmp_ln111224_reg_597 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten218_reg_653 <= select_ln109_4_reg_1574;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        indvar_flatten218_reg_653 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten26216_reg_681 <= add_ln107_1_reg_1564;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        indvar_flatten26216_reg_681 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j220_reg_639 <= j_reg_1569;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        j220_reg_639 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_cast_cast222_reg_611 <= empty_reg_1579;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        p_cast_cast222_reg_611 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_42)) begin
        if ((ap_phi_mux_do_init_phi_fu_542_p6 == 1'd0)) begin
            zext_ln107_phi_reg_695 <= zext_ln107_phi_reg_695;
        end else if ((ap_phi_mux_do_init_phi_fu_542_p6 == 1'd1)) begin
            zext_ln107_phi_reg_695 <= zext_ln107_fu_734_p1;
        end else if ((1'b1 == 1'b1)) begin
            zext_ln107_phi_reg_695 <= ap_phi_reg_pp0_iter0_zext_ln107_phi_reg_695;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln109221_reg_625 <= i_reg_1501;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln107_reg_1595 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        zext_ln109221_reg_625 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln107_reg_1595_pp0_iter1_reg == 1'd0))) begin
        zext_ln111223_reg_720 <= empty_389_reg_1759;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln107_reg_1595_pp0_iter1_reg == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        zext_ln111223_reg_720 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln107_1_reg_1564 <= add_ln107_1_fu_879_p2;
        cout_reg_1483 <= cout_fu_753_p3;
        empty_reg_1579 <= empty_fu_909_p2;
        i_reg_1501 <= i_fu_805_p3;
        icmp_ln109_reg_1590 <= icmp_ln109_fu_921_p2;
        icmp_ln111_reg_1585 <= icmp_ln111_fu_915_p2;
        j_reg_1569 <= j_fu_885_p2;
        select_ln109_4_reg_1574 <= select_ln109_4_fu_897_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln107_reg_1496 <= and_ln107_fu_779_p2;
        cout_reg_1483_pp0_iter1_reg <= cout_reg_1483;
        i_reg_1501_pp0_iter1_reg <= i_reg_1501;
        icmp_ln107_reg_1595 <= icmp_ln107_fu_927_p2;
        icmp_ln107_reg_1595_pp0_iter1_reg <= icmp_ln107_reg_1595;
        lshr_ln2_reg_1559 <= {{select_ln109_fu_797_p3[3:1]}};
        lshr_ln2_reg_1559_pp0_iter1_reg <= lshr_ln2_reg_1559;
        lshr_ln_reg_1544 <= {{mul_ln112_fu_841_p2[9:1]}};
        p_mid13_reg_1514 <= p_mid13_fu_831_p2;
        select_ln109_2_reg_1508 <= select_ln109_2_fu_823_p3;
        trunc_ln107_reg_1492 <= trunc_ln107_fu_761_p1;
        trunc_ln107_reg_1492_pp0_iter1_reg <= trunc_ln107_reg_1492;
        trunc_ln112_1_reg_1524 <= trunc_ln112_1_fu_851_p1;
        trunc_ln112_1_reg_1524_pp0_iter1_reg <= trunc_ln112_1_reg_1524;
        trunc_ln112_reg_1519 <= trunc_ln112_fu_847_p1;
        trunc_ln121_reg_1550 <= trunc_ln121_fu_865_p1;
        trunc_ln121_reg_1550_pp0_iter1_reg <= trunc_ln121_reg_1550;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_389_reg_1759 <= empty_389_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_reg_1501_pp0_iter2_reg <= i_reg_1501_pp0_iter1_reg;
        i_reg_1501_pp0_iter3_reg <= i_reg_1501_pp0_iter2_reg;
        icmp_ln107_reg_1595_pp0_iter2_reg <= icmp_ln107_reg_1595_pp0_iter1_reg;
        icmp_ln107_reg_1595_pp0_iter3_reg <= icmp_ln107_reg_1595_pp0_iter2_reg;
        lshr_ln2_reg_1559_pp0_iter2_reg <= lshr_ln2_reg_1559_pp0_iter1_reg;
        lshr_ln2_reg_1559_pp0_iter3_reg <= lshr_ln2_reg_1559_pp0_iter2_reg;
        select_ln121_reg_1788 <= select_ln121_fu_1293_p3;
        tmp1_reg_1764 <= tmp1_fu_1107_p6;
        tmp2_reg_1770 <= tmp2_fu_1156_p6;
        tmp3_reg_1776 <= tmp3_fu_1205_p6;
        tmp4_reg_1782 <= tmp4_fu_1254_p6;
        trunc_ln107_reg_1492_pp0_iter2_reg <= trunc_ln107_reg_1492_pp0_iter1_reg;
        trunc_ln107_reg_1492_pp0_iter3_reg <= trunc_ln107_reg_1492_pp0_iter2_reg;
        trunc_ln121_reg_1550_pp0_iter2_reg <= trunc_ln121_reg_1550_pp0_iter1_reg;
        trunc_ln121_reg_1550_pp0_iter3_reg <= trunc_ln121_reg_1550_pp0_iter2_reg;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln107_reg_1595_pp0_iter3_reg == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_542_p6 == 1'd0)) begin
        ap_phi_mux_Kx249_phi_phi_fu_711_p4 = Kx249_phi_reg_707;
    end else if ((ap_phi_mux_do_init_phi_fu_542_p6 == 1'd1)) begin
        ap_phi_mux_Kx249_phi_phi_fu_711_p4 = Kx;
    end else begin
        ap_phi_mux_Kx249_phi_phi_fu_711_p4 = ap_phi_reg_pp0_iter0_Kx249_phi_reg_707;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_341)) begin
        if ((icmp_ln107_reg_1595 == 1'd1)) begin
            ap_phi_mux_cout217_phi_fu_671_p6 = 3'd0;
        end else if ((icmp_ln107_reg_1595 == 1'd0)) begin
            ap_phi_mux_cout217_phi_fu_671_p6 = cout_reg_1483;
        end else begin
            ap_phi_mux_cout217_phi_fu_671_p6 = cout217_reg_667;
        end
    end else begin
        ap_phi_mux_cout217_phi_fu_671_p6 = cout217_reg_667;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_341)) begin
        if ((icmp_ln107_reg_1595 == 1'd1)) begin
            ap_phi_mux_do_init_phi_fu_542_p6 = 1'd1;
        end else if ((icmp_ln107_reg_1595 == 1'd0)) begin
            ap_phi_mux_do_init_phi_fu_542_p6 = 1'd0;
        end else begin
            ap_phi_mux_do_init_phi_fu_542_p6 = do_init_reg_538;
        end
    end else begin
        ap_phi_mux_do_init_phi_fu_542_p6 = do_init_reg_538;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_341)) begin
        if ((icmp_ln107_reg_1595 == 1'd1)) begin
            ap_phi_mux_icmp_ln109225_phi_fu_586_p6 = 1'd0;
        end else if ((icmp_ln107_reg_1595 == 1'd0)) begin
            ap_phi_mux_icmp_ln109225_phi_fu_586_p6 = icmp_ln109_reg_1590;
        end else begin
            ap_phi_mux_icmp_ln109225_phi_fu_586_p6 = icmp_ln109225_reg_582;
        end
    end else begin
        ap_phi_mux_icmp_ln109225_phi_fu_586_p6 = icmp_ln109225_reg_582;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_341)) begin
        if ((icmp_ln107_reg_1595 == 1'd1)) begin
            ap_phi_mux_icmp_ln111224_phi_fu_601_p6 = 1'd0;
        end else if ((icmp_ln107_reg_1595 == 1'd0)) begin
            ap_phi_mux_icmp_ln111224_phi_fu_601_p6 = icmp_ln111_reg_1585;
        end else begin
            ap_phi_mux_icmp_ln111224_phi_fu_601_p6 = icmp_ln111224_reg_597;
        end
    end else begin
        ap_phi_mux_icmp_ln111224_phi_fu_601_p6 = icmp_ln111224_reg_597;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_341)) begin
        if ((icmp_ln107_reg_1595 == 1'd1)) begin
            ap_phi_mux_indvar_flatten218_phi_fu_657_p6 = 8'd0;
        end else if ((icmp_ln107_reg_1595 == 1'd0)) begin
            ap_phi_mux_indvar_flatten218_phi_fu_657_p6 = select_ln109_4_reg_1574;
        end else begin
            ap_phi_mux_indvar_flatten218_phi_fu_657_p6 = indvar_flatten218_reg_653;
        end
    end else begin
        ap_phi_mux_indvar_flatten218_phi_fu_657_p6 = indvar_flatten218_reg_653;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_341)) begin
        if ((icmp_ln107_reg_1595 == 1'd1)) begin
            ap_phi_mux_indvar_flatten26216_phi_fu_685_p6 = 10'd0;
        end else if ((icmp_ln107_reg_1595 == 1'd0)) begin
            ap_phi_mux_indvar_flatten26216_phi_fu_685_p6 = add_ln107_1_reg_1564;
        end else begin
            ap_phi_mux_indvar_flatten26216_phi_fu_685_p6 = indvar_flatten26216_reg_681;
        end
    end else begin
        ap_phi_mux_indvar_flatten26216_phi_fu_685_p6 = indvar_flatten26216_reg_681;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_341)) begin
        if ((icmp_ln107_reg_1595 == 1'd1)) begin
            ap_phi_mux_j220_phi_fu_643_p6 = 4'd0;
        end else if ((icmp_ln107_reg_1595 == 1'd0)) begin
            ap_phi_mux_j220_phi_fu_643_p6 = j_reg_1569;
        end else begin
            ap_phi_mux_j220_phi_fu_643_p6 = j220_reg_639;
        end
    end else begin
        ap_phi_mux_j220_phi_fu_643_p6 = j220_reg_639;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_341)) begin
        if ((icmp_ln107_reg_1595 == 1'd1)) begin
            ap_phi_mux_p_cast_cast222_phi_fu_615_p6 = 5'd0;
        end else if ((icmp_ln107_reg_1595 == 1'd0)) begin
            ap_phi_mux_p_cast_cast222_phi_fu_615_p6 = empty_reg_1579;
        end else begin
            ap_phi_mux_p_cast_cast222_phi_fu_615_p6 = p_cast_cast222_reg_611;
        end
    end else begin
        ap_phi_mux_p_cast_cast222_phi_fu_615_p6 = p_cast_cast222_reg_611;
    end
end

always @ (*) begin
    if ((ap_phi_mux_do_init_phi_fu_542_p6 == 1'd0)) begin
        ap_phi_mux_zext_ln107_phi_phi_fu_699_p4 = zext_ln107_phi_reg_695;
    end else if ((ap_phi_mux_do_init_phi_fu_542_p6 == 1'd1)) begin
        ap_phi_mux_zext_ln107_phi_phi_fu_699_p4 = zext_ln107_fu_734_p1;
    end else begin
        ap_phi_mux_zext_ln107_phi_phi_fu_699_p4 = ap_phi_reg_pp0_iter0_zext_ln107_phi_reg_695;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_341)) begin
        if ((icmp_ln107_reg_1595 == 1'd1)) begin
            ap_phi_mux_zext_ln109221_phi_fu_629_p6 = 4'd0;
        end else if ((icmp_ln107_reg_1595 == 1'd0)) begin
            ap_phi_mux_zext_ln109221_phi_fu_629_p6 = i_reg_1501;
        end else begin
            ap_phi_mux_zext_ln109221_phi_fu_629_p6 = zext_ln109221_reg_625;
        end
    end else begin
        ap_phi_mux_zext_ln109221_phi_fu_629_p6 = zext_ln109221_reg_625;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((icmp_ln107_reg_1595_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_zext_ln111223_phi_fu_724_p6 = 5'd1;
        end else if ((icmp_ln107_reg_1595_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_zext_ln111223_phi_fu_724_p6 = empty_389_reg_1759;
        end else begin
            ap_phi_mux_zext_ln111223_phi_fu_724_p6 = zext_ln111223_reg_720;
        end
    end else begin
        ap_phi_mux_zext_ln111223_phi_fu_724_p6 = zext_ln111223_reg_720;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln107_fu_927_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to3 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_932)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_0_0_address0 = zext_ln115_fu_1054_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_0_0_address0 = zext_ln114_1_fu_1003_p1;
        end else begin
            input_buffer_0_0_address0 = 'bx;
        end
    end else begin
        input_buffer_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_932)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_0_0_address1 = zext_ln113_fu_1036_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_0_0_address1 = zext_ln112_1_fu_986_p1;
        end else begin
            input_buffer_0_0_address1 = 'bx;
        end
    end else begin
        input_buffer_0_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd0)))) begin
        input_buffer_0_0_ce0 = 1'b1;
    end else begin
        input_buffer_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd0)))) begin
        input_buffer_0_0_ce1 = 1'b1;
    end else begin
        input_buffer_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_932)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_0_1_address0 = zext_ln115_fu_1054_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_0_1_address0 = zext_ln114_1_fu_1003_p1;
        end else begin
            input_buffer_0_1_address0 = 'bx;
        end
    end else begin
        input_buffer_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_932)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_0_1_address1 = zext_ln113_fu_1036_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_0_1_address1 = zext_ln112_1_fu_986_p1;
        end else begin
            input_buffer_0_1_address1 = 'bx;
        end
    end else begin
        input_buffer_0_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd0)))) begin
        input_buffer_0_1_ce0 = 1'b1;
    end else begin
        input_buffer_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd0)))) begin
        input_buffer_0_1_ce1 = 1'b1;
    end else begin
        input_buffer_0_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_936)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_1_0_address0 = zext_ln115_fu_1054_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_1_0_address0 = zext_ln114_1_fu_1003_p1;
        end else begin
            input_buffer_1_0_address0 = 'bx;
        end
    end else begin
        input_buffer_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_936)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_1_0_address1 = zext_ln113_fu_1036_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_1_0_address1 = zext_ln112_1_fu_986_p1;
        end else begin
            input_buffer_1_0_address1 = 'bx;
        end
    end else begin
        input_buffer_1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd1)) | (~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd1)))) begin
        input_buffer_1_0_ce0 = 1'b1;
    end else begin
        input_buffer_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd1)) | (~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd1)))) begin
        input_buffer_1_0_ce1 = 1'b1;
    end else begin
        input_buffer_1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_936)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_1_1_address0 = zext_ln115_fu_1054_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_1_1_address0 = zext_ln114_1_fu_1003_p1;
        end else begin
            input_buffer_1_1_address0 = 'bx;
        end
    end else begin
        input_buffer_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_936)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_1_1_address1 = zext_ln113_fu_1036_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_1_1_address1 = zext_ln112_1_fu_986_p1;
        end else begin
            input_buffer_1_1_address1 = 'bx;
        end
    end else begin
        input_buffer_1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd1)) | (~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd1)))) begin
        input_buffer_1_1_ce0 = 1'b1;
    end else begin
        input_buffer_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd1)) | (~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd1)))) begin
        input_buffer_1_1_ce1 = 1'b1;
    end else begin
        input_buffer_1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_940)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_2_0_address0 = zext_ln115_fu_1054_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_2_0_address0 = zext_ln114_1_fu_1003_p1;
        end else begin
            input_buffer_2_0_address0 = 'bx;
        end
    end else begin
        input_buffer_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_940)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_2_0_address1 = zext_ln113_fu_1036_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_2_0_address1 = zext_ln112_1_fu_986_p1;
        end else begin
            input_buffer_2_0_address1 = 'bx;
        end
    end else begin
        input_buffer_2_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd2)) | (~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd2)))) begin
        input_buffer_2_0_ce0 = 1'b1;
    end else begin
        input_buffer_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd2)) | (~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd2)))) begin
        input_buffer_2_0_ce1 = 1'b1;
    end else begin
        input_buffer_2_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_940)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_2_1_address0 = zext_ln115_fu_1054_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_2_1_address0 = zext_ln114_1_fu_1003_p1;
        end else begin
            input_buffer_2_1_address0 = 'bx;
        end
    end else begin
        input_buffer_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_940)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_2_1_address1 = zext_ln113_fu_1036_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_2_1_address1 = zext_ln112_1_fu_986_p1;
        end else begin
            input_buffer_2_1_address1 = 'bx;
        end
    end else begin
        input_buffer_2_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd2)) | (~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd2)))) begin
        input_buffer_2_1_ce0 = 1'b1;
    end else begin
        input_buffer_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd2)) | (~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd2)))) begin
        input_buffer_2_1_ce1 = 1'b1;
    end else begin
        input_buffer_2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_944)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_3_0_address0 = zext_ln115_fu_1054_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_3_0_address0 = zext_ln114_1_fu_1003_p1;
        end else begin
            input_buffer_3_0_address0 = 'bx;
        end
    end else begin
        input_buffer_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_944)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_3_0_address1 = zext_ln113_fu_1036_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_3_0_address1 = zext_ln112_1_fu_986_p1;
        end else begin
            input_buffer_3_0_address1 = 'bx;
        end
    end else begin
        input_buffer_3_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(cout_reg_1483 == 3'd2) & ~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd3)) | (~(cout_reg_1483 == 3'd2) & ~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd3)))) begin
        input_buffer_3_0_ce0 = 1'b1;
    end else begin
        input_buffer_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(cout_reg_1483 == 3'd2) & ~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd3)) | (~(cout_reg_1483 == 3'd2) & ~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd3)))) begin
        input_buffer_3_0_ce1 = 1'b1;
    end else begin
        input_buffer_3_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_944)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_3_1_address0 = zext_ln115_fu_1054_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_3_1_address0 = zext_ln114_1_fu_1003_p1;
        end else begin
            input_buffer_3_1_address0 = 'bx;
        end
    end else begin
        input_buffer_3_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_944)) begin
        if ((trunc_ln112_1_reg_1524 == 1'd0)) begin
            input_buffer_3_1_address1 = zext_ln113_fu_1036_p1;
        end else if ((trunc_ln112_1_reg_1524 == 1'd1)) begin
            input_buffer_3_1_address1 = zext_ln112_1_fu_986_p1;
        end else begin
            input_buffer_3_1_address1 = 'bx;
        end
    end else begin
        input_buffer_3_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((~(cout_reg_1483 == 3'd2) & ~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd3)) | (~(cout_reg_1483 == 3'd2) & ~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd3)))) begin
        input_buffer_3_1_ce0 = 1'b1;
    end else begin
        input_buffer_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(cout_reg_1483 == 3'd2) & ~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd3)) | (~(cout_reg_1483 == 3'd2) & ~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln112_1_reg_1524 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd3)))) begin
        input_buffer_3_1_ce1 = 1'b1;
    end else begin
        input_buffer_3_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_buffer_0_ce1 = 1'b1;
    end else begin
        output_buffer_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln107_reg_1492_pp0_iter3_reg == 2'd0))) begin
        output_buffer_0_we1 = shl_ln121_3_fu_1442_p2;
    end else begin
        output_buffer_0_we1 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_buffer_1_ce1 = 1'b1;
    end else begin
        output_buffer_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln107_reg_1492_pp0_iter3_reg == 2'd1))) begin
        output_buffer_1_we1 = shl_ln121_5_fu_1410_p2;
    end else begin
        output_buffer_1_we1 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_buffer_2_ce1 = 1'b1;
    end else begin
        output_buffer_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln107_reg_1492_pp0_iter3_reg == 2'd2))) begin
        output_buffer_2_we1 = shl_ln121_7_fu_1378_p2;
    end else begin
        output_buffer_2_we1 = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        output_buffer_3_ce1 = 1'b1;
    end else begin
        output_buffer_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln107_reg_1492_pp0_iter3_reg == 2'd3))) begin
        output_buffer_3_we1 = shl_ln121_1_fu_1474_p2;
    end else begin
        output_buffer_3_we1 = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln107_1_fu_879_p2 = (ap_phi_mux_indvar_flatten26216_phi_fu_685_p6 + 10'd1);

assign add_ln107_fu_739_p2 = (ap_phi_mux_cout217_phi_fu_671_p6 + 3'd1);

assign add_ln109_1_fu_891_p2 = (ap_phi_mux_indvar_flatten218_phi_fu_657_p6 + 8'd1);

assign add_ln109_fu_785_p2 = (select_ln107_fu_745_p3 + 4'd1);

assign add_ln112_fu_981_p2 = (sub_ln112_fu_951_p2 + lshr_ln_reg_1544);

assign add_ln113_1_fu_1030_p2 = (sub_ln112_fu_951_p2 + lshr_ln1_fu_1020_p4);

assign add_ln113_fu_1015_p2 = (trunc_ln112_reg_1519 + 10'd1);

assign add_ln114_fu_998_p2 = (sub_ln114_fu_975_p2 + lshr_ln_reg_1544);

assign add_ln115_fu_1048_p2 = (sub_ln114_fu_975_p2 + lshr_ln1_fu_1020_p4);

assign add_ln121_fu_1339_p2 = (sub_ln121_fu_1323_p2 + zext_ln121_2_fu_1336_p1);

assign and_ln107_fu_779_p2 = (xor_ln107_fu_773_p2 & ap_phi_mux_icmp_ln111224_phi_fu_601_p6);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_341 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_42 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_932 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd0));
end

always @ (*) begin
    ap_condition_936 = (~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd1));
end

always @ (*) begin
    ap_condition_940 = (~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd2));
end

always @ (*) begin
    ap_condition_944 = (~(cout_reg_1483 == 3'd2) & ~(cout_reg_1483 == 3'd1) & ~(cout_reg_1483 == 3'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cout_reg_1483 == 3'd3));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_Kx249_phi_reg_707 = 'bx;

assign ap_phi_reg_pp0_iter0_zext_ln107_phi_reg_695 = 'bx;

assign cout_fu_753_p3 = ((ap_phi_mux_icmp_ln109225_phi_fu_586_p6[0:0] == 1'b1) ? add_ln107_fu_739_p2 : ap_phi_mux_cout217_phi_fu_671_p6);

assign empty_389_fu_1066_p2 = (empty_reg_1579 + 5'd1);

assign empty_fu_909_p0 = empty_fu_909_p00;

assign empty_fu_909_p00 = i_fu_805_p3;

assign i_fu_805_p3 = ((and_ln107_fu_779_p2[0:0] == 1'b1) ? add_ln109_fu_785_p2 : select_ln107_fu_745_p3);

assign icmp_ln107_fu_927_p2 = ((ap_phi_mux_indvar_flatten26216_phi_fu_685_p6 == 10'd783) ? 1'b1 : 1'b0);

assign icmp_ln109_fu_921_p2 = ((select_ln109_4_fu_897_p3 == 8'd196) ? 1'b1 : 1'b0);

assign icmp_ln111_fu_915_p2 = ((j_fu_885_p2 == 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln1695_32_fu_1277_p2 = (($signed(tmp3_reg_1776) > $signed(tmp4_reg_1782)) ? 1'b1 : 1'b0);

assign icmp_ln1695_33_fu_1287_p2 = (($signed(max1_fu_1271_p3) > $signed(max2_fu_1281_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1695_fu_1267_p2 = (($signed(tmp1_reg_1764) > $signed(tmp2_reg_1770)) ? 1'b1 : 1'b0);

assign j_fu_885_p2 = (select_ln109_fu_797_p3 + 4'd1);

assign lshr_ln1_fu_1020_p4 = {{add_ln113_fu_1015_p2[9:1]}};

assign max1_fu_1271_p3 = ((icmp_ln1695_fu_1267_p2[0:0] == 1'b1) ? tmp1_reg_1764 : tmp2_reg_1770);

assign max2_fu_1281_p3 = ((icmp_ln1695_32_fu_1277_p2[0:0] == 1'b1) ? tmp3_reg_1776 : tmp4_reg_1782);

assign mul_ln112_fu_841_p0 = mul_ln112_fu_841_p00;

assign mul_ln112_fu_841_p00 = select_ln109_fu_797_p3;

assign or_ln109_fu_791_p2 = (ap_phi_mux_icmp_ln109225_phi_fu_586_p6 | and_ln107_fu_779_p2);

assign output_buffer_0_address1 = zext_ln121_3_fu_1345_p1;

assign output_buffer_0_d1 = zext_ln121_8_fu_1421_p1 << zext_ln121_7_fu_1417_p1;

assign output_buffer_1_address1 = zext_ln121_3_fu_1345_p1;

assign output_buffer_1_d1 = zext_ln121_11_fu_1389_p1 << zext_ln121_10_fu_1385_p1;

assign output_buffer_2_address1 = zext_ln121_3_fu_1345_p1;

assign output_buffer_2_d1 = zext_ln121_14_fu_1357_p1 << zext_ln121_13_fu_1353_p1;

assign output_buffer_3_address1 = zext_ln121_3_fu_1345_p1;

assign output_buffer_3_d1 = zext_ln121_5_fu_1453_p1 << zext_ln121_4_fu_1449_p1;

assign p_mid13_fu_831_p2 = (p_mid1_fu_817_p2 + 5'd1);

assign p_mid1_fu_817_p0 = p_mid1_fu_817_p00;

assign p_mid1_fu_817_p00 = add_ln109_fu_785_p2;

assign p_shl1_fu_944_p3 = {{select_ln109_2_reg_1508}, {4'd0}};

assign p_shl_fu_967_p3 = {{select_ln109_3_fu_957_p3}, {4'd0}};

assign select_ln107_2_fu_765_p3 = ((ap_phi_mux_icmp_ln109225_phi_fu_586_p6[0:0] == 1'b1) ? 5'd0 : ap_phi_mux_p_cast_cast222_phi_fu_615_p6);

assign select_ln107_3_fu_933_p3 = ((icmp_ln109225_reg_582[0:0] == 1'b1) ? 5'd1 : ap_phi_mux_zext_ln111223_phi_fu_724_p6);

assign select_ln107_fu_745_p3 = ((ap_phi_mux_icmp_ln109225_phi_fu_586_p6[0:0] == 1'b1) ? 4'd0 : ap_phi_mux_zext_ln109221_phi_fu_629_p6);

assign select_ln109_2_fu_823_p3 = ((and_ln107_fu_779_p2[0:0] == 1'b1) ? p_mid1_fu_817_p2 : select_ln107_2_fu_765_p3);

assign select_ln109_3_fu_957_p3 = ((and_ln107_reg_1496[0:0] == 1'b1) ? p_mid13_reg_1514 : select_ln107_3_fu_933_p3);

assign select_ln109_4_fu_897_p3 = ((ap_phi_mux_icmp_ln109225_phi_fu_586_p6[0:0] == 1'b1) ? 8'd1 : add_ln109_1_fu_891_p2);

assign select_ln109_fu_797_p3 = ((or_ln109_fu_791_p2[0:0] == 1'b1) ? 4'd0 : ap_phi_mux_j220_phi_fu_643_p6);

assign select_ln121_fu_1293_p3 = ((icmp_ln1695_33_fu_1287_p2[0:0] == 1'b1) ? max1_fu_1271_p3 : max2_fu_1281_p3);

assign shl_ln121_1_fu_1474_p2 = 4'd3 << zext_ln121_6_fu_1470_p1;

assign shl_ln121_3_fu_1442_p2 = 4'd3 << zext_ln121_9_fu_1438_p1;

assign shl_ln121_5_fu_1410_p2 = 4'd3 << zext_ln121_12_fu_1406_p1;

assign shl_ln121_7_fu_1378_p2 = 4'd3 << zext_ln121_15_fu_1374_p1;

assign shl_ln_fu_1329_p3 = {{trunc_ln121_reg_1550_pp0_iter3_reg}, {4'd0}};

assign sub_ln112_fu_951_p2 = (p_shl1_fu_944_p3 - zext_ln112_fu_941_p1);

assign sub_ln114_fu_975_p2 = (p_shl_fu_967_p3 - zext_ln114_fu_963_p1);

assign sub_ln121_fu_1323_p2 = (zext_ln121_fu_1308_p1 - zext_ln121_1_fu_1319_p1);

assign tmp_5_fu_1301_p3 = {{i_reg_1501_pp0_iter3_reg}, {4'd0}};

assign tmp_6_fu_1312_p3 = {{i_reg_1501_pp0_iter3_reg}, {1'd0}};

assign trunc_ln107_fu_761_p1 = cout_fu_753_p3[1:0];

assign trunc_ln112_1_fu_851_p1 = mul_ln112_fu_841_p2[0:0];

assign trunc_ln112_fu_847_p1 = mul_ln112_fu_841_p2[9:0];

assign trunc_ln121_fu_865_p1 = select_ln109_fu_797_p3[0:0];

assign udiv226_cast_cast_fu_1399_p3 = {{trunc_ln121_reg_1550_pp0_iter3_reg}, {1'd0}};

assign udiv228_cast_cast_fu_1367_p3 = {{trunc_ln121_reg_1550_pp0_iter3_reg}, {1'd0}};

assign udiv230_cast_cast_fu_1463_p3 = {{trunc_ln121_reg_1550_pp0_iter3_reg}, {1'd0}};

assign udiv_cast_cast_fu_1431_p3 = {{trunc_ln121_reg_1550_pp0_iter3_reg}, {1'd0}};

assign xor_ln107_fu_773_p2 = (ap_phi_mux_icmp_ln109225_phi_fu_586_p6 ^ 1'd1);

assign zext_ln107_fu_734_p1 = Ky;

assign zext_ln112_1_fu_986_p1 = add_ln112_fu_981_p2;

assign zext_ln112_fu_941_p1 = select_ln109_2_reg_1508;

assign zext_ln113_fu_1036_p1 = add_ln113_1_fu_1030_p2;

assign zext_ln114_1_fu_1003_p1 = add_ln114_fu_998_p2;

assign zext_ln114_fu_963_p1 = select_ln109_3_fu_957_p3;

assign zext_ln115_fu_1054_p1 = add_ln115_fu_1048_p2;

assign zext_ln121_10_fu_1385_p1 = shl_ln_fu_1329_p3;

assign zext_ln121_11_fu_1389_p1 = select_ln121_reg_1788;

assign zext_ln121_12_fu_1406_p1 = udiv226_cast_cast_fu_1399_p3;

assign zext_ln121_13_fu_1353_p1 = shl_ln_fu_1329_p3;

assign zext_ln121_14_fu_1357_p1 = select_ln121_reg_1788;

assign zext_ln121_15_fu_1374_p1 = udiv228_cast_cast_fu_1367_p3;

assign zext_ln121_1_fu_1319_p1 = tmp_6_fu_1312_p3;

assign zext_ln121_2_fu_1336_p1 = lshr_ln2_reg_1559_pp0_iter3_reg;

assign zext_ln121_3_fu_1345_p1 = add_ln121_fu_1339_p2;

assign zext_ln121_4_fu_1449_p1 = shl_ln_fu_1329_p3;

assign zext_ln121_5_fu_1453_p1 = select_ln121_reg_1788;

assign zext_ln121_6_fu_1470_p1 = udiv230_cast_cast_fu_1463_p3;

assign zext_ln121_7_fu_1417_p1 = shl_ln_fu_1329_p3;

assign zext_ln121_8_fu_1421_p1 = select_ln121_reg_1788;

assign zext_ln121_9_fu_1438_p1 = udiv_cast_cast_fu_1431_p3;

assign zext_ln121_fu_1308_p1 = tmp_5_fu_1301_p3;

endmodule //My_Conv_Pool5
