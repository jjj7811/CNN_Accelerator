-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity My_Conv_Pool5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_buffer_0_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_0_0_ce0 : OUT STD_LOGIC;
    input_buffer_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_0_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_0_0_ce1 : OUT STD_LOGIC;
    input_buffer_0_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_0_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_0_1_ce0 : OUT STD_LOGIC;
    input_buffer_0_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_0_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_0_1_ce1 : OUT STD_LOGIC;
    input_buffer_0_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_1_0_ce0 : OUT STD_LOGIC;
    input_buffer_1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_1_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_1_0_ce1 : OUT STD_LOGIC;
    input_buffer_1_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_1_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_1_1_ce0 : OUT STD_LOGIC;
    input_buffer_1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_1_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_1_1_ce1 : OUT STD_LOGIC;
    input_buffer_1_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_2_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_2_0_ce0 : OUT STD_LOGIC;
    input_buffer_2_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_2_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_2_0_ce1 : OUT STD_LOGIC;
    input_buffer_2_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_2_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_2_1_ce0 : OUT STD_LOGIC;
    input_buffer_2_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_2_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_2_1_ce1 : OUT STD_LOGIC;
    input_buffer_2_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_3_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_3_0_ce0 : OUT STD_LOGIC;
    input_buffer_3_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_3_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_3_0_ce1 : OUT STD_LOGIC;
    input_buffer_3_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_3_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_3_1_ce0 : OUT STD_LOGIC;
    input_buffer_3_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_buffer_3_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_buffer_3_1_ce1 : OUT STD_LOGIC;
    input_buffer_3_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_buffer_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    output_buffer_0_ce1 : OUT STD_LOGIC;
    output_buffer_0_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_buffer_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    output_buffer_1_ce1 : OUT STD_LOGIC;
    output_buffer_1_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_buffer_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_2_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    output_buffer_2_ce1 : OUT STD_LOGIC;
    output_buffer_2_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_buffer_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_buffer_3_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    output_buffer_3_ce1 : OUT STD_LOGIC;
    output_buffer_3_we1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_buffer_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Kx : IN STD_LOGIC_VECTOR (4 downto 0);
    Ky : IN STD_LOGIC_VECTOR (9 downto 0) );
end;


architecture behav of My_Conv_Pool5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv8_C4 : STD_LOGIC_VECTOR (7 downto 0) := "11000100";
    constant ap_const_lv10_30F : STD_LOGIC_VECTOR (9 downto 0) := "1100001111";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln107_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal do_init_reg_538 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109225_reg_582 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111224_reg_597 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_cast_cast222_reg_611 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln109221_reg_625 : STD_LOGIC_VECTOR (3 downto 0);
    signal j220_reg_639 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten218_reg_653 : STD_LOGIC_VECTOR (7 downto 0);
    signal cout217_reg_667 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten26216_reg_681 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln107_phi_reg_695 : STD_LOGIC_VECTOR (13 downto 0);
    signal Kx249_phi_reg_707 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln111223_reg_720 : STD_LOGIC_VECTOR (4 downto 0);
    signal cout_fu_753_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal cout_reg_1483 : STD_LOGIC_VECTOR (2 downto 0);
    signal cout_reg_1483_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln107_fu_761_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln107_reg_1492 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln107_reg_1492_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln107_reg_1492_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln107_reg_1492_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln107_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1496 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_805_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_1501 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_1501_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_1501_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_1501_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_2_fu_823_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln109_2_reg_1508 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid13_fu_831_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid13_reg_1514 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln112_fu_847_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln112_reg_1519 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln112_1_fu_851_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln112_1_reg_1524 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln112_1_reg_1524_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln_reg_1544 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln121_fu_865_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln121_reg_1550 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln121_reg_1550_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln121_reg_1550_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln121_reg_1550_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln2_reg_1559 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln2_reg_1559_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln2_reg_1559_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln2_reg_1559_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln107_1_fu_879_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln107_1_reg_1564 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_fu_885_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_reg_1569 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_4_fu_897_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln109_4_reg_1574 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_fu_909_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_reg_1579 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln111_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_1585 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_1590 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_1595 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_1595_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_1595_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_1595_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_389_fu_1066_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_389_reg_1759 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp1_fu_1107_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_reg_1764 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_fu_1156_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_reg_1770 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_1205_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_reg_1776 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_1254_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_reg_1782 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln121_fu_1293_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln121_reg_1788 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_phi_mux_do_init_phi_fu_542_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_icmp_ln109225_phi_fu_586_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_icmp_ln111224_phi_fu_601_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_cast_cast222_phi_fu_615_p6 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_zext_ln109221_phi_fu_629_p6 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_j220_phi_fu_643_p6 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_indvar_flatten218_phi_fu_657_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_cout217_phi_fu_671_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_indvar_flatten26216_phi_fu_685_p6 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_zext_ln107_phi_phi_fu_699_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln107_fu_734_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_reg_pp0_iter0_zext_ln107_phi_reg_695 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_mux_Kx249_phi_phi_fu_711_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter0_Kx249_phi_reg_707 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_zext_ln111223_phi_fu_724_p6 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln112_1_fu_986_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_1_fu_1003_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln113_fu_1036_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln115_fu_1054_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_3_fu_1345_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln121_7_fu_1378_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln121_5_fu_1410_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln121_3_fu_1442_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln121_1_fu_1474_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln107_fu_739_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln107_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln107_fu_745_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln109_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln109_fu_785_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_mid1_fu_817_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_mid1_fu_817_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln107_2_fu_765_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln109_fu_797_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln112_fu_841_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln112_fu_841_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln109_1_fu_891_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_fu_909_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl1_fu_944_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln112_fu_941_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln107_3_fu_933_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln109_3_fu_957_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl_fu_967_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln114_fu_963_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln112_fu_951_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln112_fu_981_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln114_fu_975_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln114_fu_998_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln113_fu_1015_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln1_fu_1020_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln113_1_fu_1030_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln115_fu_1048_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_1071_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_1080_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_1089_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_1098_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_1120_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_1129_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_1138_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_fu_1147_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_1169_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_fu_1178_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_fu_1187_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_fu_1196_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_fu_1218_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_fu_1227_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_fu_1236_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_fu_1245_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1695_fu_1267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1695_32_fu_1277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max1_fu_1271_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal max2_fu_1281_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1695_33_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_1301_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_1312_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln121_fu_1308_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln121_1_fu_1319_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln121_fu_1323_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln121_2_fu_1336_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln121_fu_1339_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln_fu_1329_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln121_14_fu_1357_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln121_13_fu_1353_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal udiv228_cast_cast_fu_1367_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln121_15_fu_1374_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln121_11_fu_1389_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln121_10_fu_1385_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal udiv226_cast_cast_fu_1399_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln121_12_fu_1406_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln121_8_fu_1421_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln121_7_fu_1417_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal udiv_cast_cast_fu_1431_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln121_9_fu_1438_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln121_5_fu_1453_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln121_4_fu_1449_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal udiv230_cast_cast_fu_1463_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln121_6_fu_1470_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal empty_fu_909_p00 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln112_fu_841_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_mid1_fu_817_p00 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_condition_42 : BOOLEAN;
    signal ap_condition_341 : BOOLEAN;
    signal ap_condition_932 : BOOLEAN;
    signal ap_condition_936 : BOOLEAN;
    signal ap_condition_940 : BOOLEAN;
    signal ap_condition_944 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component My_Conv_mul_4ns_5s_5_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component My_Conv_mul_4ns_14s_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component My_Conv_mux_21_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component My_Conv_mux_43_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    mul_4ns_5s_5_1_1_U742 : component My_Conv_mul_4ns_5s_5_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => p_mid1_fu_817_p0,
        din1 => ap_phi_mux_Kx249_phi_phi_fu_711_p4,
        dout => p_mid1_fu_817_p2);

    mul_4ns_14s_14_1_1_U743 : component My_Conv_mul_4ns_14s_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 14,
        dout_WIDTH => 14)
    port map (
        din0 => mul_ln112_fu_841_p0,
        din1 => ap_phi_mux_zext_ln107_phi_phi_fu_699_p4,
        dout => mul_ln112_fu_841_p2);

    mul_4ns_5s_5_1_1_U744 : component My_Conv_mul_4ns_5s_5_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => empty_fu_909_p0,
        din1 => ap_phi_mux_Kx249_phi_phi_fu_711_p4,
        dout => empty_fu_909_p2);

    mux_21_16_1_1_U745 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_0_0_q1,
        din1 => input_buffer_0_1_q1,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_fu_1071_p4);

    mux_21_16_1_1_U746 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_1_0_q1,
        din1 => input_buffer_1_1_q1,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_s_fu_1080_p4);

    mux_21_16_1_1_U747 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_2_0_q1,
        din1 => input_buffer_2_1_q1,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_13_fu_1089_p4);

    mux_21_16_1_1_U748 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_3_0_q1,
        din1 => input_buffer_3_1_q1,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_14_fu_1098_p4);

    mux_43_16_1_1_U749 : component My_Conv_mux_43_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_fu_1071_p4,
        din1 => tmp_s_fu_1080_p4,
        din2 => tmp_13_fu_1089_p4,
        din3 => tmp_14_fu_1098_p4,
        din4 => cout_reg_1483_pp0_iter1_reg,
        dout => tmp1_fu_1107_p6);

    mux_21_16_1_1_U750 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_0_1_q1,
        din1 => input_buffer_0_0_q1,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_15_fu_1120_p4);

    mux_21_16_1_1_U751 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_1_1_q1,
        din1 => input_buffer_1_0_q1,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_16_fu_1129_p4);

    mux_21_16_1_1_U752 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_2_1_q1,
        din1 => input_buffer_2_0_q1,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_17_fu_1138_p4);

    mux_21_16_1_1_U753 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_3_1_q1,
        din1 => input_buffer_3_0_q1,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_18_fu_1147_p4);

    mux_43_16_1_1_U754 : component My_Conv_mux_43_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_15_fu_1120_p4,
        din1 => tmp_16_fu_1129_p4,
        din2 => tmp_17_fu_1138_p4,
        din3 => tmp_18_fu_1147_p4,
        din4 => cout_reg_1483_pp0_iter1_reg,
        dout => tmp2_fu_1156_p6);

    mux_21_16_1_1_U755 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_0_0_q0,
        din1 => input_buffer_0_1_q0,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_19_fu_1169_p4);

    mux_21_16_1_1_U756 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_1_0_q0,
        din1 => input_buffer_1_1_q0,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_20_fu_1178_p4);

    mux_21_16_1_1_U757 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_2_0_q0,
        din1 => input_buffer_2_1_q0,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_21_fu_1187_p4);

    mux_21_16_1_1_U758 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_3_0_q0,
        din1 => input_buffer_3_1_q0,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_22_fu_1196_p4);

    mux_43_16_1_1_U759 : component My_Conv_mux_43_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_19_fu_1169_p4,
        din1 => tmp_20_fu_1178_p4,
        din2 => tmp_21_fu_1187_p4,
        din3 => tmp_22_fu_1196_p4,
        din4 => cout_reg_1483_pp0_iter1_reg,
        dout => tmp3_fu_1205_p6);

    mux_21_16_1_1_U760 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_0_1_q0,
        din1 => input_buffer_0_0_q0,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_23_fu_1218_p4);

    mux_21_16_1_1_U761 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_1_1_q0,
        din1 => input_buffer_1_0_q0,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_24_fu_1227_p4);

    mux_21_16_1_1_U762 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_2_1_q0,
        din1 => input_buffer_2_0_q0,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_25_fu_1236_p4);

    mux_21_16_1_1_U763 : component My_Conv_mux_21_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 1,
        dout_WIDTH => 16)
    port map (
        din0 => input_buffer_3_1_q0,
        din1 => input_buffer_3_0_q0,
        din2 => trunc_ln112_1_reg_1524_pp0_iter1_reg,
        dout => tmp_26_fu_1245_p4);

    mux_43_16_1_1_U764 : component My_Conv_mux_43_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_23_fu_1218_p4,
        din1 => tmp_24_fu_1227_p4,
        din2 => tmp_25_fu_1236_p4,
        din3 => tmp_26_fu_1245_p4,
        din4 => cout_reg_1483_pp0_iter1_reg,
        dout => tmp4_fu_1254_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    Kx249_phi_reg_707_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_42)) then
                if ((ap_phi_mux_do_init_phi_fu_542_p6 = ap_const_lv1_0)) then 
                    Kx249_phi_reg_707 <= Kx249_phi_reg_707;
                elsif ((ap_phi_mux_do_init_phi_fu_542_p6 = ap_const_lv1_1)) then 
                    Kx249_phi_reg_707 <= Kx;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    Kx249_phi_reg_707 <= ap_phi_reg_pp0_iter0_Kx249_phi_reg_707;
                end if;
            end if; 
        end if;
    end process;

    cout217_reg_667_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                cout217_reg_667 <= cout_reg_1483;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                cout217_reg_667 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    do_init_reg_538_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                do_init_reg_538 <= ap_const_lv1_0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                do_init_reg_538 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    icmp_ln109225_reg_582_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                icmp_ln109225_reg_582 <= icmp_ln109_reg_1590;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                icmp_ln109225_reg_582 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    icmp_ln111224_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                icmp_ln111224_reg_597 <= icmp_ln111_reg_1585;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                icmp_ln111224_reg_597 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    indvar_flatten218_reg_653_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten218_reg_653 <= select_ln109_4_reg_1574;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                indvar_flatten218_reg_653 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_flatten26216_reg_681_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten26216_reg_681 <= add_ln107_1_reg_1564;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                indvar_flatten26216_reg_681 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    j220_reg_639_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j220_reg_639 <= j_reg_1569;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                j220_reg_639 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    p_cast_cast222_reg_611_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                p_cast_cast222_reg_611 <= empty_reg_1579;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                p_cast_cast222_reg_611 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    zext_ln107_phi_reg_695_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_42)) then
                if ((ap_phi_mux_do_init_phi_fu_542_p6 = ap_const_lv1_0)) then 
                    zext_ln107_phi_reg_695 <= zext_ln107_phi_reg_695;
                elsif ((ap_phi_mux_do_init_phi_fu_542_p6 = ap_const_lv1_1)) then 
                    zext_ln107_phi_reg_695 <= zext_ln107_fu_734_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    zext_ln107_phi_reg_695 <= ap_phi_reg_pp0_iter0_zext_ln107_phi_reg_695;
                end if;
            end if; 
        end if;
    end process;

    zext_ln109221_reg_625_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                zext_ln109221_reg_625 <= i_reg_1501;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln107_reg_1595 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                zext_ln109221_reg_625 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    zext_ln111223_reg_720_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln107_reg_1595_pp0_iter1_reg = ap_const_lv1_0))) then 
                zext_ln111223_reg_720 <= empty_389_reg_1759;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln107_reg_1595_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                zext_ln111223_reg_720 <= ap_const_lv5_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln107_1_reg_1564 <= add_ln107_1_fu_879_p2;
                cout_reg_1483 <= cout_fu_753_p3;
                empty_reg_1579 <= empty_fu_909_p2;
                i_reg_1501 <= i_fu_805_p3;
                icmp_ln109_reg_1590 <= icmp_ln109_fu_921_p2;
                icmp_ln111_reg_1585 <= icmp_ln111_fu_915_p2;
                j_reg_1569 <= j_fu_885_p2;
                select_ln109_4_reg_1574 <= select_ln109_4_fu_897_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln107_reg_1496 <= and_ln107_fu_779_p2;
                cout_reg_1483_pp0_iter1_reg <= cout_reg_1483;
                i_reg_1501_pp0_iter1_reg <= i_reg_1501;
                icmp_ln107_reg_1595 <= icmp_ln107_fu_927_p2;
                icmp_ln107_reg_1595_pp0_iter1_reg <= icmp_ln107_reg_1595;
                lshr_ln2_reg_1559 <= select_ln109_fu_797_p3(3 downto 1);
                lshr_ln2_reg_1559_pp0_iter1_reg <= lshr_ln2_reg_1559;
                lshr_ln_reg_1544 <= mul_ln112_fu_841_p2(9 downto 1);
                p_mid13_reg_1514 <= p_mid13_fu_831_p2;
                select_ln109_2_reg_1508 <= select_ln109_2_fu_823_p3;
                trunc_ln107_reg_1492 <= trunc_ln107_fu_761_p1;
                trunc_ln107_reg_1492_pp0_iter1_reg <= trunc_ln107_reg_1492;
                trunc_ln112_1_reg_1524 <= trunc_ln112_1_fu_851_p1;
                trunc_ln112_1_reg_1524_pp0_iter1_reg <= trunc_ln112_1_reg_1524;
                trunc_ln112_reg_1519 <= trunc_ln112_fu_847_p1;
                trunc_ln121_reg_1550 <= trunc_ln121_fu_865_p1;
                trunc_ln121_reg_1550_pp0_iter1_reg <= trunc_ln121_reg_1550;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_389_reg_1759 <= empty_389_fu_1066_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                i_reg_1501_pp0_iter2_reg <= i_reg_1501_pp0_iter1_reg;
                i_reg_1501_pp0_iter3_reg <= i_reg_1501_pp0_iter2_reg;
                icmp_ln107_reg_1595_pp0_iter2_reg <= icmp_ln107_reg_1595_pp0_iter1_reg;
                icmp_ln107_reg_1595_pp0_iter3_reg <= icmp_ln107_reg_1595_pp0_iter2_reg;
                lshr_ln2_reg_1559_pp0_iter2_reg <= lshr_ln2_reg_1559_pp0_iter1_reg;
                lshr_ln2_reg_1559_pp0_iter3_reg <= lshr_ln2_reg_1559_pp0_iter2_reg;
                select_ln121_reg_1788 <= select_ln121_fu_1293_p3;
                tmp1_reg_1764 <= tmp1_fu_1107_p6;
                tmp2_reg_1770 <= tmp2_fu_1156_p6;
                tmp3_reg_1776 <= tmp3_fu_1205_p6;
                tmp4_reg_1782 <= tmp4_fu_1254_p6;
                trunc_ln107_reg_1492_pp0_iter2_reg <= trunc_ln107_reg_1492_pp0_iter1_reg;
                trunc_ln107_reg_1492_pp0_iter3_reg <= trunc_ln107_reg_1492_pp0_iter2_reg;
                trunc_ln121_reg_1550_pp0_iter2_reg <= trunc_ln121_reg_1550_pp0_iter1_reg;
                trunc_ln121_reg_1550_pp0_iter3_reg <= trunc_ln121_reg_1550_pp0_iter2_reg;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln107_1_fu_879_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten26216_phi_fu_685_p6) + unsigned(ap_const_lv10_1));
    add_ln107_fu_739_p2 <= std_logic_vector(unsigned(ap_phi_mux_cout217_phi_fu_671_p6) + unsigned(ap_const_lv3_1));
    add_ln109_1_fu_891_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten218_phi_fu_657_p6) + unsigned(ap_const_lv8_1));
    add_ln109_fu_785_p2 <= std_logic_vector(unsigned(select_ln107_fu_745_p3) + unsigned(ap_const_lv4_1));
    add_ln112_fu_981_p2 <= std_logic_vector(unsigned(sub_ln112_fu_951_p2) + unsigned(lshr_ln_reg_1544));
    add_ln113_1_fu_1030_p2 <= std_logic_vector(unsigned(sub_ln112_fu_951_p2) + unsigned(lshr_ln1_fu_1020_p4));
    add_ln113_fu_1015_p2 <= std_logic_vector(unsigned(trunc_ln112_reg_1519) + unsigned(ap_const_lv10_1));
    add_ln114_fu_998_p2 <= std_logic_vector(unsigned(sub_ln114_fu_975_p2) + unsigned(lshr_ln_reg_1544));
    add_ln115_fu_1048_p2 <= std_logic_vector(unsigned(sub_ln114_fu_975_p2) + unsigned(lshr_ln1_fu_1020_p4));
    add_ln121_fu_1339_p2 <= std_logic_vector(unsigned(sub_ln121_fu_1323_p2) + unsigned(zext_ln121_2_fu_1336_p1));
    and_ln107_fu_779_p2 <= (xor_ln107_fu_773_p2 and ap_phi_mux_icmp_ln111224_phi_fu_601_p6);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_341_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_341 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_42_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_42 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_932_assign_proc : process(ap_CS_fsm_pp0_stage0, cout_reg_1483, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_932 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_0));
    end process;


    ap_condition_936_assign_proc : process(ap_CS_fsm_pp0_stage0, cout_reg_1483, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_936 <= (not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_1));
    end process;


    ap_condition_940_assign_proc : process(ap_CS_fsm_pp0_stage0, cout_reg_1483, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_940 <= (not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_2));
    end process;


    ap_condition_944_assign_proc : process(ap_CS_fsm_pp0_stage0, cout_reg_1483, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_944 <= (not((cout_reg_1483 = ap_const_lv3_2)) and not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_3));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_block_pp0_stage0_11001, icmp_ln107_reg_1595_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln107_reg_1595_pp0_iter3_reg = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_Kx249_phi_phi_fu_711_p4_assign_proc : process(Kx, Kx249_phi_reg_707, ap_phi_mux_do_init_phi_fu_542_p6, ap_phi_reg_pp0_iter0_Kx249_phi_reg_707)
    begin
        if ((ap_phi_mux_do_init_phi_fu_542_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_Kx249_phi_phi_fu_711_p4 <= Kx249_phi_reg_707;
        elsif ((ap_phi_mux_do_init_phi_fu_542_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_Kx249_phi_phi_fu_711_p4 <= Kx;
        else 
            ap_phi_mux_Kx249_phi_phi_fu_711_p4 <= ap_phi_reg_pp0_iter0_Kx249_phi_reg_707;
        end if; 
    end process;


    ap_phi_mux_cout217_phi_fu_671_p6_assign_proc : process(cout217_reg_667, cout_reg_1483, icmp_ln107_reg_1595, ap_condition_341)
    begin
        if ((ap_const_boolean_1 = ap_condition_341)) then
            if ((icmp_ln107_reg_1595 = ap_const_lv1_1)) then 
                ap_phi_mux_cout217_phi_fu_671_p6 <= ap_const_lv3_0;
            elsif ((icmp_ln107_reg_1595 = ap_const_lv1_0)) then 
                ap_phi_mux_cout217_phi_fu_671_p6 <= cout_reg_1483;
            else 
                ap_phi_mux_cout217_phi_fu_671_p6 <= cout217_reg_667;
            end if;
        else 
            ap_phi_mux_cout217_phi_fu_671_p6 <= cout217_reg_667;
        end if; 
    end process;


    ap_phi_mux_do_init_phi_fu_542_p6_assign_proc : process(do_init_reg_538, icmp_ln107_reg_1595, ap_condition_341)
    begin
        if ((ap_const_boolean_1 = ap_condition_341)) then
            if ((icmp_ln107_reg_1595 = ap_const_lv1_1)) then 
                ap_phi_mux_do_init_phi_fu_542_p6 <= ap_const_lv1_1;
            elsif ((icmp_ln107_reg_1595 = ap_const_lv1_0)) then 
                ap_phi_mux_do_init_phi_fu_542_p6 <= ap_const_lv1_0;
            else 
                ap_phi_mux_do_init_phi_fu_542_p6 <= do_init_reg_538;
            end if;
        else 
            ap_phi_mux_do_init_phi_fu_542_p6 <= do_init_reg_538;
        end if; 
    end process;


    ap_phi_mux_icmp_ln109225_phi_fu_586_p6_assign_proc : process(icmp_ln109225_reg_582, icmp_ln109_reg_1590, icmp_ln107_reg_1595, ap_condition_341)
    begin
        if ((ap_const_boolean_1 = ap_condition_341)) then
            if ((icmp_ln107_reg_1595 = ap_const_lv1_1)) then 
                ap_phi_mux_icmp_ln109225_phi_fu_586_p6 <= ap_const_lv1_0;
            elsif ((icmp_ln107_reg_1595 = ap_const_lv1_0)) then 
                ap_phi_mux_icmp_ln109225_phi_fu_586_p6 <= icmp_ln109_reg_1590;
            else 
                ap_phi_mux_icmp_ln109225_phi_fu_586_p6 <= icmp_ln109225_reg_582;
            end if;
        else 
            ap_phi_mux_icmp_ln109225_phi_fu_586_p6 <= icmp_ln109225_reg_582;
        end if; 
    end process;


    ap_phi_mux_icmp_ln111224_phi_fu_601_p6_assign_proc : process(icmp_ln111224_reg_597, icmp_ln111_reg_1585, icmp_ln107_reg_1595, ap_condition_341)
    begin
        if ((ap_const_boolean_1 = ap_condition_341)) then
            if ((icmp_ln107_reg_1595 = ap_const_lv1_1)) then 
                ap_phi_mux_icmp_ln111224_phi_fu_601_p6 <= ap_const_lv1_0;
            elsif ((icmp_ln107_reg_1595 = ap_const_lv1_0)) then 
                ap_phi_mux_icmp_ln111224_phi_fu_601_p6 <= icmp_ln111_reg_1585;
            else 
                ap_phi_mux_icmp_ln111224_phi_fu_601_p6 <= icmp_ln111224_reg_597;
            end if;
        else 
            ap_phi_mux_icmp_ln111224_phi_fu_601_p6 <= icmp_ln111224_reg_597;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten218_phi_fu_657_p6_assign_proc : process(indvar_flatten218_reg_653, select_ln109_4_reg_1574, icmp_ln107_reg_1595, ap_condition_341)
    begin
        if ((ap_const_boolean_1 = ap_condition_341)) then
            if ((icmp_ln107_reg_1595 = ap_const_lv1_1)) then 
                ap_phi_mux_indvar_flatten218_phi_fu_657_p6 <= ap_const_lv8_0;
            elsif ((icmp_ln107_reg_1595 = ap_const_lv1_0)) then 
                ap_phi_mux_indvar_flatten218_phi_fu_657_p6 <= select_ln109_4_reg_1574;
            else 
                ap_phi_mux_indvar_flatten218_phi_fu_657_p6 <= indvar_flatten218_reg_653;
            end if;
        else 
            ap_phi_mux_indvar_flatten218_phi_fu_657_p6 <= indvar_flatten218_reg_653;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten26216_phi_fu_685_p6_assign_proc : process(indvar_flatten26216_reg_681, add_ln107_1_reg_1564, icmp_ln107_reg_1595, ap_condition_341)
    begin
        if ((ap_const_boolean_1 = ap_condition_341)) then
            if ((icmp_ln107_reg_1595 = ap_const_lv1_1)) then 
                ap_phi_mux_indvar_flatten26216_phi_fu_685_p6 <= ap_const_lv10_0;
            elsif ((icmp_ln107_reg_1595 = ap_const_lv1_0)) then 
                ap_phi_mux_indvar_flatten26216_phi_fu_685_p6 <= add_ln107_1_reg_1564;
            else 
                ap_phi_mux_indvar_flatten26216_phi_fu_685_p6 <= indvar_flatten26216_reg_681;
            end if;
        else 
            ap_phi_mux_indvar_flatten26216_phi_fu_685_p6 <= indvar_flatten26216_reg_681;
        end if; 
    end process;


    ap_phi_mux_j220_phi_fu_643_p6_assign_proc : process(j220_reg_639, j_reg_1569, icmp_ln107_reg_1595, ap_condition_341)
    begin
        if ((ap_const_boolean_1 = ap_condition_341)) then
            if ((icmp_ln107_reg_1595 = ap_const_lv1_1)) then 
                ap_phi_mux_j220_phi_fu_643_p6 <= ap_const_lv4_0;
            elsif ((icmp_ln107_reg_1595 = ap_const_lv1_0)) then 
                ap_phi_mux_j220_phi_fu_643_p6 <= j_reg_1569;
            else 
                ap_phi_mux_j220_phi_fu_643_p6 <= j220_reg_639;
            end if;
        else 
            ap_phi_mux_j220_phi_fu_643_p6 <= j220_reg_639;
        end if; 
    end process;


    ap_phi_mux_p_cast_cast222_phi_fu_615_p6_assign_proc : process(p_cast_cast222_reg_611, empty_reg_1579, icmp_ln107_reg_1595, ap_condition_341)
    begin
        if ((ap_const_boolean_1 = ap_condition_341)) then
            if ((icmp_ln107_reg_1595 = ap_const_lv1_1)) then 
                ap_phi_mux_p_cast_cast222_phi_fu_615_p6 <= ap_const_lv5_0;
            elsif ((icmp_ln107_reg_1595 = ap_const_lv1_0)) then 
                ap_phi_mux_p_cast_cast222_phi_fu_615_p6 <= empty_reg_1579;
            else 
                ap_phi_mux_p_cast_cast222_phi_fu_615_p6 <= p_cast_cast222_reg_611;
            end if;
        else 
            ap_phi_mux_p_cast_cast222_phi_fu_615_p6 <= p_cast_cast222_reg_611;
        end if; 
    end process;


    ap_phi_mux_zext_ln107_phi_phi_fu_699_p4_assign_proc : process(zext_ln107_phi_reg_695, ap_phi_mux_do_init_phi_fu_542_p6, zext_ln107_fu_734_p1, ap_phi_reg_pp0_iter0_zext_ln107_phi_reg_695)
    begin
        if ((ap_phi_mux_do_init_phi_fu_542_p6 = ap_const_lv1_0)) then 
            ap_phi_mux_zext_ln107_phi_phi_fu_699_p4 <= zext_ln107_phi_reg_695;
        elsif ((ap_phi_mux_do_init_phi_fu_542_p6 = ap_const_lv1_1)) then 
            ap_phi_mux_zext_ln107_phi_phi_fu_699_p4 <= zext_ln107_fu_734_p1;
        else 
            ap_phi_mux_zext_ln107_phi_phi_fu_699_p4 <= ap_phi_reg_pp0_iter0_zext_ln107_phi_reg_695;
        end if; 
    end process;


    ap_phi_mux_zext_ln109221_phi_fu_629_p6_assign_proc : process(zext_ln109221_reg_625, i_reg_1501, icmp_ln107_reg_1595, ap_condition_341)
    begin
        if ((ap_const_boolean_1 = ap_condition_341)) then
            if ((icmp_ln107_reg_1595 = ap_const_lv1_1)) then 
                ap_phi_mux_zext_ln109221_phi_fu_629_p6 <= ap_const_lv4_0;
            elsif ((icmp_ln107_reg_1595 = ap_const_lv1_0)) then 
                ap_phi_mux_zext_ln109221_phi_fu_629_p6 <= i_reg_1501;
            else 
                ap_phi_mux_zext_ln109221_phi_fu_629_p6 <= zext_ln109221_reg_625;
            end if;
        else 
            ap_phi_mux_zext_ln109221_phi_fu_629_p6 <= zext_ln109221_reg_625;
        end if; 
    end process;


    ap_phi_mux_zext_ln111223_phi_fu_724_p6_assign_proc : process(zext_ln111223_reg_720, icmp_ln107_reg_1595_pp0_iter1_reg, empty_389_reg_1759, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((icmp_ln107_reg_1595_pp0_iter1_reg = ap_const_lv1_1)) then 
                ap_phi_mux_zext_ln111223_phi_fu_724_p6 <= ap_const_lv5_1;
            elsif ((icmp_ln107_reg_1595_pp0_iter1_reg = ap_const_lv1_0)) then 
                ap_phi_mux_zext_ln111223_phi_fu_724_p6 <= empty_389_reg_1759;
            else 
                ap_phi_mux_zext_ln111223_phi_fu_724_p6 <= zext_ln111223_reg_720;
            end if;
        else 
            ap_phi_mux_zext_ln111223_phi_fu_724_p6 <= zext_ln111223_reg_720;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_Kx249_phi_reg_707 <= "XXXXX";
    ap_phi_reg_pp0_iter0_zext_ln107_phi_reg_695 <= "XXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(icmp_ln107_fu_927_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln107_fu_927_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to3)
    begin
        if (((ap_idle_pp0_0to3 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    cout_fu_753_p3 <= 
        add_ln107_fu_739_p2 when (ap_phi_mux_icmp_ln109225_phi_fu_586_p6(0) = '1') else 
        ap_phi_mux_cout217_phi_fu_671_p6;
    empty_389_fu_1066_p2 <= std_logic_vector(unsigned(empty_reg_1579) + unsigned(ap_const_lv5_1));
    empty_fu_909_p0 <= empty_fu_909_p00(4 - 1 downto 0);
    empty_fu_909_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_805_p3),5));
    i_fu_805_p3 <= 
        add_ln109_fu_785_p2 when (and_ln107_fu_779_p2(0) = '1') else 
        select_ln107_fu_745_p3;
    icmp_ln107_fu_927_p2 <= "1" when (ap_phi_mux_indvar_flatten26216_phi_fu_685_p6 = ap_const_lv10_30F) else "0";
    icmp_ln109_fu_921_p2 <= "1" when (select_ln109_4_fu_897_p3 = ap_const_lv8_C4) else "0";
    icmp_ln111_fu_915_p2 <= "1" when (j_fu_885_p2 = ap_const_lv4_E) else "0";
    icmp_ln1695_32_fu_1277_p2 <= "1" when (signed(tmp3_reg_1776) > signed(tmp4_reg_1782)) else "0";
    icmp_ln1695_33_fu_1287_p2 <= "1" when (signed(max1_fu_1271_p3) > signed(max2_fu_1281_p3)) else "0";
    icmp_ln1695_fu_1267_p2 <= "1" when (signed(tmp1_reg_1764) > signed(tmp2_reg_1770)) else "0";

    input_buffer_0_0_address0_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln114_1_fu_1003_p1, zext_ln115_fu_1054_p1, ap_condition_932)
    begin
        if ((ap_const_boolean_1 = ap_condition_932)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_0_0_address0 <= zext_ln115_fu_1054_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_0_0_address0 <= zext_ln114_1_fu_1003_p1(9 - 1 downto 0);
            else 
                input_buffer_0_0_address0 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_0_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_0_0_address1_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln112_1_fu_986_p1, zext_ln113_fu_1036_p1, ap_condition_932)
    begin
        if ((ap_const_boolean_1 = ap_condition_932)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_0_0_address1 <= zext_ln113_fu_1036_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_0_0_address1 <= zext_ln112_1_fu_986_p1(9 - 1 downto 0);
            else 
                input_buffer_0_0_address1 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_0_0_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_0)))) then 
            input_buffer_0_0_ce0 <= ap_const_logic_1;
        else 
            input_buffer_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_0_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_0)))) then 
            input_buffer_0_0_ce1 <= ap_const_logic_1;
        else 
            input_buffer_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_0_1_address0_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln114_1_fu_1003_p1, zext_ln115_fu_1054_p1, ap_condition_932)
    begin
        if ((ap_const_boolean_1 = ap_condition_932)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_0_1_address0 <= zext_ln115_fu_1054_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_0_1_address0 <= zext_ln114_1_fu_1003_p1(9 - 1 downto 0);
            else 
                input_buffer_0_1_address0 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_0_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_0_1_address1_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln112_1_fu_986_p1, zext_ln113_fu_1036_p1, ap_condition_932)
    begin
        if ((ap_const_boolean_1 = ap_condition_932)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_0_1_address1 <= zext_ln113_fu_1036_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_0_1_address1 <= zext_ln112_1_fu_986_p1(9 - 1 downto 0);
            else 
                input_buffer_0_1_address1 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_0_1_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_0_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_0)))) then 
            input_buffer_0_1_ce0 <= ap_const_logic_1;
        else 
            input_buffer_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_0_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_0)))) then 
            input_buffer_0_1_ce1 <= ap_const_logic_1;
        else 
            input_buffer_0_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_1_0_address0_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln114_1_fu_1003_p1, zext_ln115_fu_1054_p1, ap_condition_936)
    begin
        if ((ap_const_boolean_1 = ap_condition_936)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_1_0_address0 <= zext_ln115_fu_1054_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_1_0_address0 <= zext_ln114_1_fu_1003_p1(9 - 1 downto 0);
            else 
                input_buffer_1_0_address0 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_1_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_1_0_address1_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln112_1_fu_986_p1, zext_ln113_fu_1036_p1, ap_condition_936)
    begin
        if ((ap_const_boolean_1 = ap_condition_936)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_1_0_address1 <= zext_ln113_fu_1036_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_1_0_address1 <= zext_ln112_1_fu_986_p1(9 - 1 downto 0);
            else 
                input_buffer_1_0_address1 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_1_0_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if (((not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_1)) or (not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_1)))) then 
            input_buffer_1_0_ce0 <= ap_const_logic_1;
        else 
            input_buffer_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_1_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if (((not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_1)) or (not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_1)))) then 
            input_buffer_1_0_ce1 <= ap_const_logic_1;
        else 
            input_buffer_1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_1_1_address0_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln114_1_fu_1003_p1, zext_ln115_fu_1054_p1, ap_condition_936)
    begin
        if ((ap_const_boolean_1 = ap_condition_936)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_1_1_address0 <= zext_ln115_fu_1054_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_1_1_address0 <= zext_ln114_1_fu_1003_p1(9 - 1 downto 0);
            else 
                input_buffer_1_1_address0 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_1_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_1_1_address1_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln112_1_fu_986_p1, zext_ln113_fu_1036_p1, ap_condition_936)
    begin
        if ((ap_const_boolean_1 = ap_condition_936)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_1_1_address1 <= zext_ln113_fu_1036_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_1_1_address1 <= zext_ln112_1_fu_986_p1(9 - 1 downto 0);
            else 
                input_buffer_1_1_address1 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_1_1_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if (((not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_1)) or (not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_1)))) then 
            input_buffer_1_1_ce0 <= ap_const_logic_1;
        else 
            input_buffer_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_1_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if (((not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_1)) or (not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_1)))) then 
            input_buffer_1_1_ce1 <= ap_const_logic_1;
        else 
            input_buffer_1_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_2_0_address0_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln114_1_fu_1003_p1, zext_ln115_fu_1054_p1, ap_condition_940)
    begin
        if ((ap_const_boolean_1 = ap_condition_940)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_2_0_address0 <= zext_ln115_fu_1054_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_2_0_address0 <= zext_ln114_1_fu_1003_p1(9 - 1 downto 0);
            else 
                input_buffer_2_0_address0 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_2_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_2_0_address1_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln112_1_fu_986_p1, zext_ln113_fu_1036_p1, ap_condition_940)
    begin
        if ((ap_const_boolean_1 = ap_condition_940)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_2_0_address1 <= zext_ln113_fu_1036_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_2_0_address1 <= zext_ln112_1_fu_986_p1(9 - 1 downto 0);
            else 
                input_buffer_2_0_address1 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_2_0_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_2_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if (((not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_2)) or (not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_2)))) then 
            input_buffer_2_0_ce0 <= ap_const_logic_1;
        else 
            input_buffer_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_2_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if (((not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_2)) or (not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_2)))) then 
            input_buffer_2_0_ce1 <= ap_const_logic_1;
        else 
            input_buffer_2_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_2_1_address0_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln114_1_fu_1003_p1, zext_ln115_fu_1054_p1, ap_condition_940)
    begin
        if ((ap_const_boolean_1 = ap_condition_940)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_2_1_address0 <= zext_ln115_fu_1054_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_2_1_address0 <= zext_ln114_1_fu_1003_p1(9 - 1 downto 0);
            else 
                input_buffer_2_1_address0 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_2_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_2_1_address1_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln112_1_fu_986_p1, zext_ln113_fu_1036_p1, ap_condition_940)
    begin
        if ((ap_const_boolean_1 = ap_condition_940)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_2_1_address1 <= zext_ln113_fu_1036_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_2_1_address1 <= zext_ln112_1_fu_986_p1(9 - 1 downto 0);
            else 
                input_buffer_2_1_address1 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_2_1_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_2_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if (((not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_2)) or (not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_2)))) then 
            input_buffer_2_1_ce0 <= ap_const_logic_1;
        else 
            input_buffer_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_2_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if (((not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_2)) or (not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_2)))) then 
            input_buffer_2_1_ce1 <= ap_const_logic_1;
        else 
            input_buffer_2_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_3_0_address0_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln114_1_fu_1003_p1, zext_ln115_fu_1054_p1, ap_condition_944)
    begin
        if ((ap_const_boolean_1 = ap_condition_944)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_3_0_address0 <= zext_ln115_fu_1054_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_3_0_address0 <= zext_ln114_1_fu_1003_p1(9 - 1 downto 0);
            else 
                input_buffer_3_0_address0 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_3_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_3_0_address1_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln112_1_fu_986_p1, zext_ln113_fu_1036_p1, ap_condition_944)
    begin
        if ((ap_const_boolean_1 = ap_condition_944)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_3_0_address1 <= zext_ln113_fu_1036_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_3_0_address1 <= zext_ln112_1_fu_986_p1(9 - 1 downto 0);
            else 
                input_buffer_3_0_address1 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_3_0_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_3_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if (((not((cout_reg_1483 = ap_const_lv3_2)) and not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_3)) or (not((cout_reg_1483 = ap_const_lv3_2)) and not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_3)))) then 
            input_buffer_3_0_ce0 <= ap_const_logic_1;
        else 
            input_buffer_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_3_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if (((not((cout_reg_1483 = ap_const_lv3_2)) and not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_3)) or (not((cout_reg_1483 = ap_const_lv3_2)) and not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_3)))) then 
            input_buffer_3_0_ce1 <= ap_const_logic_1;
        else 
            input_buffer_3_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_3_1_address0_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln114_1_fu_1003_p1, zext_ln115_fu_1054_p1, ap_condition_944)
    begin
        if ((ap_const_boolean_1 = ap_condition_944)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_3_1_address0 <= zext_ln115_fu_1054_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_3_1_address0 <= zext_ln114_1_fu_1003_p1(9 - 1 downto 0);
            else 
                input_buffer_3_1_address0 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_3_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_3_1_address1_assign_proc : process(trunc_ln112_1_reg_1524, zext_ln112_1_fu_986_p1, zext_ln113_fu_1036_p1, ap_condition_944)
    begin
        if ((ap_const_boolean_1 = ap_condition_944)) then
            if ((trunc_ln112_1_reg_1524 = ap_const_lv1_0)) then 
                input_buffer_3_1_address1 <= zext_ln113_fu_1036_p1(9 - 1 downto 0);
            elsif ((trunc_ln112_1_reg_1524 = ap_const_lv1_1)) then 
                input_buffer_3_1_address1 <= zext_ln112_1_fu_986_p1(9 - 1 downto 0);
            else 
                input_buffer_3_1_address1 <= "XXXXXXXXX";
            end if;
        else 
            input_buffer_3_1_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    input_buffer_3_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if (((not((cout_reg_1483 = ap_const_lv3_2)) and not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_3)) or (not((cout_reg_1483 = ap_const_lv3_2)) and not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_3)))) then 
            input_buffer_3_1_ce0 <= ap_const_logic_1;
        else 
            input_buffer_3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_buffer_3_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cout_reg_1483, trunc_ln112_1_reg_1524, ap_enable_reg_pp0_iter1)
    begin
        if (((not((cout_reg_1483 = ap_const_lv3_2)) and not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_3)) or (not((cout_reg_1483 = ap_const_lv3_2)) and not((cout_reg_1483 = ap_const_lv3_1)) and not((cout_reg_1483 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln112_1_reg_1524 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cout_reg_1483 = ap_const_lv3_3)))) then 
            input_buffer_3_1_ce1 <= ap_const_logic_1;
        else 
            input_buffer_3_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_885_p2 <= std_logic_vector(unsigned(select_ln109_fu_797_p3) + unsigned(ap_const_lv4_1));
    lshr_ln1_fu_1020_p4 <= add_ln113_fu_1015_p2(9 downto 1);
    max1_fu_1271_p3 <= 
        tmp1_reg_1764 when (icmp_ln1695_fu_1267_p2(0) = '1') else 
        tmp2_reg_1770;
    max2_fu_1281_p3 <= 
        tmp3_reg_1776 when (icmp_ln1695_32_fu_1277_p2(0) = '1') else 
        tmp4_reg_1782;
    mul_ln112_fu_841_p0 <= mul_ln112_fu_841_p00(4 - 1 downto 0);
    mul_ln112_fu_841_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln109_fu_797_p3),14));
    or_ln109_fu_791_p2 <= (ap_phi_mux_icmp_ln109225_phi_fu_586_p6 or and_ln107_fu_779_p2);
    output_buffer_0_address1 <= zext_ln121_3_fu_1345_p1(9 - 1 downto 0);

    output_buffer_0_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_buffer_0_ce1 <= ap_const_logic_1;
        else 
            output_buffer_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_0_d1 <= std_logic_vector(shift_left(unsigned(zext_ln121_8_fu_1421_p1),to_integer(unsigned('0' & zext_ln121_7_fu_1417_p1(31-1 downto 0)))));

    output_buffer_0_we1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln107_reg_1492_pp0_iter3_reg, ap_enable_reg_pp0_iter4, shl_ln121_3_fu_1442_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (trunc_ln107_reg_1492_pp0_iter3_reg = ap_const_lv2_0))) then 
            output_buffer_0_we1 <= shl_ln121_3_fu_1442_p2;
        else 
            output_buffer_0_we1 <= ap_const_lv4_0;
        end if; 
    end process;

    output_buffer_1_address1 <= zext_ln121_3_fu_1345_p1(9 - 1 downto 0);

    output_buffer_1_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_buffer_1_ce1 <= ap_const_logic_1;
        else 
            output_buffer_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_1_d1 <= std_logic_vector(shift_left(unsigned(zext_ln121_11_fu_1389_p1),to_integer(unsigned('0' & zext_ln121_10_fu_1385_p1(31-1 downto 0)))));

    output_buffer_1_we1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln107_reg_1492_pp0_iter3_reg, ap_enable_reg_pp0_iter4, shl_ln121_5_fu_1410_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (trunc_ln107_reg_1492_pp0_iter3_reg = ap_const_lv2_1))) then 
            output_buffer_1_we1 <= shl_ln121_5_fu_1410_p2;
        else 
            output_buffer_1_we1 <= ap_const_lv4_0;
        end if; 
    end process;

    output_buffer_2_address1 <= zext_ln121_3_fu_1345_p1(9 - 1 downto 0);

    output_buffer_2_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_buffer_2_ce1 <= ap_const_logic_1;
        else 
            output_buffer_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_2_d1 <= std_logic_vector(shift_left(unsigned(zext_ln121_14_fu_1357_p1),to_integer(unsigned('0' & zext_ln121_13_fu_1353_p1(31-1 downto 0)))));

    output_buffer_2_we1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln107_reg_1492_pp0_iter3_reg, ap_enable_reg_pp0_iter4, shl_ln121_7_fu_1378_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (trunc_ln107_reg_1492_pp0_iter3_reg = ap_const_lv2_2))) then 
            output_buffer_2_we1 <= shl_ln121_7_fu_1378_p2;
        else 
            output_buffer_2_we1 <= ap_const_lv4_0;
        end if; 
    end process;

    output_buffer_3_address1 <= zext_ln121_3_fu_1345_p1(9 - 1 downto 0);

    output_buffer_3_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            output_buffer_3_ce1 <= ap_const_logic_1;
        else 
            output_buffer_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    output_buffer_3_d1 <= std_logic_vector(shift_left(unsigned(zext_ln121_5_fu_1453_p1),to_integer(unsigned('0' & zext_ln121_4_fu_1449_p1(31-1 downto 0)))));

    output_buffer_3_we1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln107_reg_1492_pp0_iter3_reg, ap_enable_reg_pp0_iter4, shl_ln121_1_fu_1474_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (trunc_ln107_reg_1492_pp0_iter3_reg = ap_const_lv2_3))) then 
            output_buffer_3_we1 <= shl_ln121_1_fu_1474_p2;
        else 
            output_buffer_3_we1 <= ap_const_lv4_0;
        end if; 
    end process;

    p_mid13_fu_831_p2 <= std_logic_vector(unsigned(p_mid1_fu_817_p2) + unsigned(ap_const_lv5_1));
    p_mid1_fu_817_p0 <= p_mid1_fu_817_p00(4 - 1 downto 0);
    p_mid1_fu_817_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_fu_785_p2),5));
    p_shl1_fu_944_p3 <= (select_ln109_2_reg_1508 & ap_const_lv4_0);
    p_shl_fu_967_p3 <= (select_ln109_3_fu_957_p3 & ap_const_lv4_0);
    select_ln107_2_fu_765_p3 <= 
        ap_const_lv5_0 when (ap_phi_mux_icmp_ln109225_phi_fu_586_p6(0) = '1') else 
        ap_phi_mux_p_cast_cast222_phi_fu_615_p6;
    select_ln107_3_fu_933_p3 <= 
        ap_const_lv5_1 when (icmp_ln109225_reg_582(0) = '1') else 
        ap_phi_mux_zext_ln111223_phi_fu_724_p6;
    select_ln107_fu_745_p3 <= 
        ap_const_lv4_0 when (ap_phi_mux_icmp_ln109225_phi_fu_586_p6(0) = '1') else 
        ap_phi_mux_zext_ln109221_phi_fu_629_p6;
    select_ln109_2_fu_823_p3 <= 
        p_mid1_fu_817_p2 when (and_ln107_fu_779_p2(0) = '1') else 
        select_ln107_2_fu_765_p3;
    select_ln109_3_fu_957_p3 <= 
        p_mid13_reg_1514 when (and_ln107_reg_1496(0) = '1') else 
        select_ln107_3_fu_933_p3;
    select_ln109_4_fu_897_p3 <= 
        ap_const_lv8_1 when (ap_phi_mux_icmp_ln109225_phi_fu_586_p6(0) = '1') else 
        add_ln109_1_fu_891_p2;
    select_ln109_fu_797_p3 <= 
        ap_const_lv4_0 when (or_ln109_fu_791_p2(0) = '1') else 
        ap_phi_mux_j220_phi_fu_643_p6;
    select_ln121_fu_1293_p3 <= 
        max1_fu_1271_p3 when (icmp_ln1695_33_fu_1287_p2(0) = '1') else 
        max2_fu_1281_p3;
    shl_ln121_1_fu_1474_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_3),to_integer(unsigned('0' & zext_ln121_6_fu_1470_p1(4-1 downto 0)))));
    shl_ln121_3_fu_1442_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_3),to_integer(unsigned('0' & zext_ln121_9_fu_1438_p1(4-1 downto 0)))));
    shl_ln121_5_fu_1410_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_3),to_integer(unsigned('0' & zext_ln121_12_fu_1406_p1(4-1 downto 0)))));
    shl_ln121_7_fu_1378_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_3),to_integer(unsigned('0' & zext_ln121_15_fu_1374_p1(4-1 downto 0)))));
    shl_ln_fu_1329_p3 <= (trunc_ln121_reg_1550_pp0_iter3_reg & ap_const_lv4_0);
    sub_ln112_fu_951_p2 <= std_logic_vector(unsigned(p_shl1_fu_944_p3) - unsigned(zext_ln112_fu_941_p1));
    sub_ln114_fu_975_p2 <= std_logic_vector(unsigned(p_shl_fu_967_p3) - unsigned(zext_ln114_fu_963_p1));
    sub_ln121_fu_1323_p2 <= std_logic_vector(unsigned(zext_ln121_fu_1308_p1) - unsigned(zext_ln121_1_fu_1319_p1));
    tmp_5_fu_1301_p3 <= (i_reg_1501_pp0_iter3_reg & ap_const_lv4_0);
    tmp_6_fu_1312_p3 <= (i_reg_1501_pp0_iter3_reg & ap_const_lv1_0);
    trunc_ln107_fu_761_p1 <= cout_fu_753_p3(2 - 1 downto 0);
    trunc_ln112_1_fu_851_p1 <= mul_ln112_fu_841_p2(1 - 1 downto 0);
    trunc_ln112_fu_847_p1 <= mul_ln112_fu_841_p2(10 - 1 downto 0);
    trunc_ln121_fu_865_p1 <= select_ln109_fu_797_p3(1 - 1 downto 0);
    udiv226_cast_cast_fu_1399_p3 <= (trunc_ln121_reg_1550_pp0_iter3_reg & ap_const_lv1_0);
    udiv228_cast_cast_fu_1367_p3 <= (trunc_ln121_reg_1550_pp0_iter3_reg & ap_const_lv1_0);
    udiv230_cast_cast_fu_1463_p3 <= (trunc_ln121_reg_1550_pp0_iter3_reg & ap_const_lv1_0);
    udiv_cast_cast_fu_1431_p3 <= (trunc_ln121_reg_1550_pp0_iter3_reg & ap_const_lv1_0);
    xor_ln107_fu_773_p2 <= (ap_phi_mux_icmp_ln109225_phi_fu_586_p6 xor ap_const_lv1_1);
    zext_ln107_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Ky),14));
    zext_ln112_1_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln112_fu_981_p2),64));
    zext_ln112_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln109_2_reg_1508),9));
    zext_ln113_fu_1036_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln113_1_fu_1030_p2),64));
    zext_ln114_1_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln114_fu_998_p2),64));
    zext_ln114_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln109_3_fu_957_p3),9));
    zext_ln115_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln115_fu_1048_p2),64));
    zext_ln121_10_fu_1385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1329_p3),32));
    zext_ln121_11_fu_1389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln121_reg_1788),32));
    zext_ln121_12_fu_1406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(udiv226_cast_cast_fu_1399_p3),4));
    zext_ln121_13_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1329_p3),32));
    zext_ln121_14_fu_1357_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln121_reg_1788),32));
    zext_ln121_15_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(udiv228_cast_cast_fu_1367_p3),4));
    zext_ln121_1_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_1312_p3),9));
    zext_ln121_2_fu_1336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2_reg_1559_pp0_iter3_reg),9));
    zext_ln121_3_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln121_fu_1339_p2),64));
    zext_ln121_4_fu_1449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1329_p3),32));
    zext_ln121_5_fu_1453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln121_reg_1788),32));
    zext_ln121_6_fu_1470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(udiv230_cast_cast_fu_1463_p3),4));
    zext_ln121_7_fu_1417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1329_p3),32));
    zext_ln121_8_fu_1421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln121_reg_1788),32));
    zext_ln121_9_fu_1438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(udiv_cast_cast_fu_1431_p3),4));
    zext_ln121_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1301_p3),9));
end behav;
