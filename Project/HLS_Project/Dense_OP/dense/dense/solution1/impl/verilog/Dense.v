// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Dense_Dense,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.239000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=19,HLS_SYN_DSP=0,HLS_SYN_FF=13816,HLS_SYN_LUT=35296,HLS_VERSION=2022_1}" *)

module Dense (
        ap_clk,
        ap_rst_n,
        m_axi_IN1_AWVALID,
        m_axi_IN1_AWREADY,
        m_axi_IN1_AWADDR,
        m_axi_IN1_AWID,
        m_axi_IN1_AWLEN,
        m_axi_IN1_AWSIZE,
        m_axi_IN1_AWBURST,
        m_axi_IN1_AWLOCK,
        m_axi_IN1_AWCACHE,
        m_axi_IN1_AWPROT,
        m_axi_IN1_AWQOS,
        m_axi_IN1_AWREGION,
        m_axi_IN1_AWUSER,
        m_axi_IN1_WVALID,
        m_axi_IN1_WREADY,
        m_axi_IN1_WDATA,
        m_axi_IN1_WSTRB,
        m_axi_IN1_WLAST,
        m_axi_IN1_WID,
        m_axi_IN1_WUSER,
        m_axi_IN1_ARVALID,
        m_axi_IN1_ARREADY,
        m_axi_IN1_ARADDR,
        m_axi_IN1_ARID,
        m_axi_IN1_ARLEN,
        m_axi_IN1_ARSIZE,
        m_axi_IN1_ARBURST,
        m_axi_IN1_ARLOCK,
        m_axi_IN1_ARCACHE,
        m_axi_IN1_ARPROT,
        m_axi_IN1_ARQOS,
        m_axi_IN1_ARREGION,
        m_axi_IN1_ARUSER,
        m_axi_IN1_RVALID,
        m_axi_IN1_RREADY,
        m_axi_IN1_RDATA,
        m_axi_IN1_RLAST,
        m_axi_IN1_RID,
        m_axi_IN1_RUSER,
        m_axi_IN1_RRESP,
        m_axi_IN1_BVALID,
        m_axi_IN1_BREADY,
        m_axi_IN1_BRESP,
        m_axi_IN1_BID,
        m_axi_IN1_BUSER,
        m_axi_W1_AWVALID,
        m_axi_W1_AWREADY,
        m_axi_W1_AWADDR,
        m_axi_W1_AWID,
        m_axi_W1_AWLEN,
        m_axi_W1_AWSIZE,
        m_axi_W1_AWBURST,
        m_axi_W1_AWLOCK,
        m_axi_W1_AWCACHE,
        m_axi_W1_AWPROT,
        m_axi_W1_AWQOS,
        m_axi_W1_AWREGION,
        m_axi_W1_AWUSER,
        m_axi_W1_WVALID,
        m_axi_W1_WREADY,
        m_axi_W1_WDATA,
        m_axi_W1_WSTRB,
        m_axi_W1_WLAST,
        m_axi_W1_WID,
        m_axi_W1_WUSER,
        m_axi_W1_ARVALID,
        m_axi_W1_ARREADY,
        m_axi_W1_ARADDR,
        m_axi_W1_ARID,
        m_axi_W1_ARLEN,
        m_axi_W1_ARSIZE,
        m_axi_W1_ARBURST,
        m_axi_W1_ARLOCK,
        m_axi_W1_ARCACHE,
        m_axi_W1_ARPROT,
        m_axi_W1_ARQOS,
        m_axi_W1_ARREGION,
        m_axi_W1_ARUSER,
        m_axi_W1_RVALID,
        m_axi_W1_RREADY,
        m_axi_W1_RDATA,
        m_axi_W1_RLAST,
        m_axi_W1_RID,
        m_axi_W1_RUSER,
        m_axi_W1_RRESP,
        m_axi_W1_BVALID,
        m_axi_W1_BREADY,
        m_axi_W1_BRESP,
        m_axi_W1_BID,
        m_axi_W1_BUSER,
        m_axi_W2_AWVALID,
        m_axi_W2_AWREADY,
        m_axi_W2_AWADDR,
        m_axi_W2_AWID,
        m_axi_W2_AWLEN,
        m_axi_W2_AWSIZE,
        m_axi_W2_AWBURST,
        m_axi_W2_AWLOCK,
        m_axi_W2_AWCACHE,
        m_axi_W2_AWPROT,
        m_axi_W2_AWQOS,
        m_axi_W2_AWREGION,
        m_axi_W2_AWUSER,
        m_axi_W2_WVALID,
        m_axi_W2_WREADY,
        m_axi_W2_WDATA,
        m_axi_W2_WSTRB,
        m_axi_W2_WLAST,
        m_axi_W2_WID,
        m_axi_W2_WUSER,
        m_axi_W2_ARVALID,
        m_axi_W2_ARREADY,
        m_axi_W2_ARADDR,
        m_axi_W2_ARID,
        m_axi_W2_ARLEN,
        m_axi_W2_ARSIZE,
        m_axi_W2_ARBURST,
        m_axi_W2_ARLOCK,
        m_axi_W2_ARCACHE,
        m_axi_W2_ARPROT,
        m_axi_W2_ARQOS,
        m_axi_W2_ARREGION,
        m_axi_W2_ARUSER,
        m_axi_W2_RVALID,
        m_axi_W2_RREADY,
        m_axi_W2_RDATA,
        m_axi_W2_RLAST,
        m_axi_W2_RID,
        m_axi_W2_RUSER,
        m_axi_W2_RRESP,
        m_axi_W2_BVALID,
        m_axi_W2_BREADY,
        m_axi_W2_BRESP,
        m_axi_W2_BID,
        m_axi_W2_BUSER,
        m_axi_W3_AWVALID,
        m_axi_W3_AWREADY,
        m_axi_W3_AWADDR,
        m_axi_W3_AWID,
        m_axi_W3_AWLEN,
        m_axi_W3_AWSIZE,
        m_axi_W3_AWBURST,
        m_axi_W3_AWLOCK,
        m_axi_W3_AWCACHE,
        m_axi_W3_AWPROT,
        m_axi_W3_AWQOS,
        m_axi_W3_AWREGION,
        m_axi_W3_AWUSER,
        m_axi_W3_WVALID,
        m_axi_W3_WREADY,
        m_axi_W3_WDATA,
        m_axi_W3_WSTRB,
        m_axi_W3_WLAST,
        m_axi_W3_WID,
        m_axi_W3_WUSER,
        m_axi_W3_ARVALID,
        m_axi_W3_ARREADY,
        m_axi_W3_ARADDR,
        m_axi_W3_ARID,
        m_axi_W3_ARLEN,
        m_axi_W3_ARSIZE,
        m_axi_W3_ARBURST,
        m_axi_W3_ARLOCK,
        m_axi_W3_ARCACHE,
        m_axi_W3_ARPROT,
        m_axi_W3_ARQOS,
        m_axi_W3_ARREGION,
        m_axi_W3_ARUSER,
        m_axi_W3_RVALID,
        m_axi_W3_RREADY,
        m_axi_W3_RDATA,
        m_axi_W3_RLAST,
        m_axi_W3_RID,
        m_axi_W3_RUSER,
        m_axi_W3_RRESP,
        m_axi_W3_BVALID,
        m_axi_W3_BREADY,
        m_axi_W3_BRESP,
        m_axi_W3_BID,
        m_axi_W3_BUSER,
        m_axi_W4_AWVALID,
        m_axi_W4_AWREADY,
        m_axi_W4_AWADDR,
        m_axi_W4_AWID,
        m_axi_W4_AWLEN,
        m_axi_W4_AWSIZE,
        m_axi_W4_AWBURST,
        m_axi_W4_AWLOCK,
        m_axi_W4_AWCACHE,
        m_axi_W4_AWPROT,
        m_axi_W4_AWQOS,
        m_axi_W4_AWREGION,
        m_axi_W4_AWUSER,
        m_axi_W4_WVALID,
        m_axi_W4_WREADY,
        m_axi_W4_WDATA,
        m_axi_W4_WSTRB,
        m_axi_W4_WLAST,
        m_axi_W4_WID,
        m_axi_W4_WUSER,
        m_axi_W4_ARVALID,
        m_axi_W4_ARREADY,
        m_axi_W4_ARADDR,
        m_axi_W4_ARID,
        m_axi_W4_ARLEN,
        m_axi_W4_ARSIZE,
        m_axi_W4_ARBURST,
        m_axi_W4_ARLOCK,
        m_axi_W4_ARCACHE,
        m_axi_W4_ARPROT,
        m_axi_W4_ARQOS,
        m_axi_W4_ARREGION,
        m_axi_W4_ARUSER,
        m_axi_W4_RVALID,
        m_axi_W4_RREADY,
        m_axi_W4_RDATA,
        m_axi_W4_RLAST,
        m_axi_W4_RID,
        m_axi_W4_RUSER,
        m_axi_W4_RRESP,
        m_axi_W4_BVALID,
        m_axi_W4_BREADY,
        m_axi_W4_BRESP,
        m_axi_W4_BID,
        m_axi_W4_BUSER,
        m_axi_B1_AWVALID,
        m_axi_B1_AWREADY,
        m_axi_B1_AWADDR,
        m_axi_B1_AWID,
        m_axi_B1_AWLEN,
        m_axi_B1_AWSIZE,
        m_axi_B1_AWBURST,
        m_axi_B1_AWLOCK,
        m_axi_B1_AWCACHE,
        m_axi_B1_AWPROT,
        m_axi_B1_AWQOS,
        m_axi_B1_AWREGION,
        m_axi_B1_AWUSER,
        m_axi_B1_WVALID,
        m_axi_B1_WREADY,
        m_axi_B1_WDATA,
        m_axi_B1_WSTRB,
        m_axi_B1_WLAST,
        m_axi_B1_WID,
        m_axi_B1_WUSER,
        m_axi_B1_ARVALID,
        m_axi_B1_ARREADY,
        m_axi_B1_ARADDR,
        m_axi_B1_ARID,
        m_axi_B1_ARLEN,
        m_axi_B1_ARSIZE,
        m_axi_B1_ARBURST,
        m_axi_B1_ARLOCK,
        m_axi_B1_ARCACHE,
        m_axi_B1_ARPROT,
        m_axi_B1_ARQOS,
        m_axi_B1_ARREGION,
        m_axi_B1_ARUSER,
        m_axi_B1_RVALID,
        m_axi_B1_RREADY,
        m_axi_B1_RDATA,
        m_axi_B1_RLAST,
        m_axi_B1_RID,
        m_axi_B1_RUSER,
        m_axi_B1_RRESP,
        m_axi_B1_BVALID,
        m_axi_B1_BREADY,
        m_axi_B1_BRESP,
        m_axi_B1_BID,
        m_axi_B1_BUSER,
        m_axi_OUT1_AWVALID,
        m_axi_OUT1_AWREADY,
        m_axi_OUT1_AWADDR,
        m_axi_OUT1_AWID,
        m_axi_OUT1_AWLEN,
        m_axi_OUT1_AWSIZE,
        m_axi_OUT1_AWBURST,
        m_axi_OUT1_AWLOCK,
        m_axi_OUT1_AWCACHE,
        m_axi_OUT1_AWPROT,
        m_axi_OUT1_AWQOS,
        m_axi_OUT1_AWREGION,
        m_axi_OUT1_AWUSER,
        m_axi_OUT1_WVALID,
        m_axi_OUT1_WREADY,
        m_axi_OUT1_WDATA,
        m_axi_OUT1_WSTRB,
        m_axi_OUT1_WLAST,
        m_axi_OUT1_WID,
        m_axi_OUT1_WUSER,
        m_axi_OUT1_ARVALID,
        m_axi_OUT1_ARREADY,
        m_axi_OUT1_ARADDR,
        m_axi_OUT1_ARID,
        m_axi_OUT1_ARLEN,
        m_axi_OUT1_ARSIZE,
        m_axi_OUT1_ARBURST,
        m_axi_OUT1_ARLOCK,
        m_axi_OUT1_ARCACHE,
        m_axi_OUT1_ARPROT,
        m_axi_OUT1_ARQOS,
        m_axi_OUT1_ARREGION,
        m_axi_OUT1_ARUSER,
        m_axi_OUT1_RVALID,
        m_axi_OUT1_RREADY,
        m_axi_OUT1_RDATA,
        m_axi_OUT1_RLAST,
        m_axi_OUT1_RID,
        m_axi_OUT1_RUSER,
        m_axi_OUT1_RRESP,
        m_axi_OUT1_BVALID,
        m_axi_OUT1_BREADY,
        m_axi_OUT1_BRESP,
        m_axi_OUT1_BID,
        m_axi_OUT1_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_B1_ID_WIDTH = 1;
parameter    C_M_AXI_B1_ADDR_WIDTH = 64;
parameter    C_M_AXI_B1_DATA_WIDTH = 32;
parameter    C_M_AXI_B1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_B1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_B1_WUSER_WIDTH = 1;
parameter    C_M_AXI_B1_RUSER_WIDTH = 1;
parameter    C_M_AXI_B1_BUSER_WIDTH = 1;
parameter    C_M_AXI_B1_USER_VALUE = 0;
parameter    C_M_AXI_B1_PROT_VALUE = 0;
parameter    C_M_AXI_B1_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_IN1_ID_WIDTH = 1;
parameter    C_M_AXI_IN1_ADDR_WIDTH = 64;
parameter    C_M_AXI_IN1_DATA_WIDTH = 32;
parameter    C_M_AXI_IN1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IN1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IN1_WUSER_WIDTH = 1;
parameter    C_M_AXI_IN1_RUSER_WIDTH = 1;
parameter    C_M_AXI_IN1_BUSER_WIDTH = 1;
parameter    C_M_AXI_IN1_USER_VALUE = 0;
parameter    C_M_AXI_IN1_PROT_VALUE = 0;
parameter    C_M_AXI_IN1_CACHE_VALUE = 3;
parameter    C_M_AXI_OUT1_ID_WIDTH = 1;
parameter    C_M_AXI_OUT1_ADDR_WIDTH = 64;
parameter    C_M_AXI_OUT1_DATA_WIDTH = 32;
parameter    C_M_AXI_OUT1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUT1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUT1_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUT1_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUT1_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUT1_USER_VALUE = 0;
parameter    C_M_AXI_OUT1_PROT_VALUE = 0;
parameter    C_M_AXI_OUT1_CACHE_VALUE = 3;
parameter    C_M_AXI_W1_ID_WIDTH = 1;
parameter    C_M_AXI_W1_ADDR_WIDTH = 64;
parameter    C_M_AXI_W1_DATA_WIDTH = 32;
parameter    C_M_AXI_W1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_W1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_W1_WUSER_WIDTH = 1;
parameter    C_M_AXI_W1_RUSER_WIDTH = 1;
parameter    C_M_AXI_W1_BUSER_WIDTH = 1;
parameter    C_M_AXI_W1_USER_VALUE = 0;
parameter    C_M_AXI_W1_PROT_VALUE = 0;
parameter    C_M_AXI_W1_CACHE_VALUE = 3;
parameter    C_M_AXI_W2_ID_WIDTH = 1;
parameter    C_M_AXI_W2_ADDR_WIDTH = 64;
parameter    C_M_AXI_W2_DATA_WIDTH = 32;
parameter    C_M_AXI_W2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_W2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_W2_WUSER_WIDTH = 1;
parameter    C_M_AXI_W2_RUSER_WIDTH = 1;
parameter    C_M_AXI_W2_BUSER_WIDTH = 1;
parameter    C_M_AXI_W2_USER_VALUE = 0;
parameter    C_M_AXI_W2_PROT_VALUE = 0;
parameter    C_M_AXI_W2_CACHE_VALUE = 3;
parameter    C_M_AXI_W3_ID_WIDTH = 1;
parameter    C_M_AXI_W3_ADDR_WIDTH = 64;
parameter    C_M_AXI_W3_DATA_WIDTH = 32;
parameter    C_M_AXI_W3_AWUSER_WIDTH = 1;
parameter    C_M_AXI_W3_ARUSER_WIDTH = 1;
parameter    C_M_AXI_W3_WUSER_WIDTH = 1;
parameter    C_M_AXI_W3_RUSER_WIDTH = 1;
parameter    C_M_AXI_W3_BUSER_WIDTH = 1;
parameter    C_M_AXI_W3_USER_VALUE = 0;
parameter    C_M_AXI_W3_PROT_VALUE = 0;
parameter    C_M_AXI_W3_CACHE_VALUE = 3;
parameter    C_M_AXI_W4_ID_WIDTH = 1;
parameter    C_M_AXI_W4_ADDR_WIDTH = 64;
parameter    C_M_AXI_W4_DATA_WIDTH = 32;
parameter    C_M_AXI_W4_AWUSER_WIDTH = 1;
parameter    C_M_AXI_W4_ARUSER_WIDTH = 1;
parameter    C_M_AXI_W4_WUSER_WIDTH = 1;
parameter    C_M_AXI_W4_RUSER_WIDTH = 1;
parameter    C_M_AXI_W4_BUSER_WIDTH = 1;
parameter    C_M_AXI_W4_USER_VALUE = 0;
parameter    C_M_AXI_W4_PROT_VALUE = 0;
parameter    C_M_AXI_W4_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_B1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_IN1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUT1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_W1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_W2_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_W3_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_W4_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_IN1_AWVALID;
input   m_axi_IN1_AWREADY;
output  [C_M_AXI_IN1_ADDR_WIDTH - 1:0] m_axi_IN1_AWADDR;
output  [C_M_AXI_IN1_ID_WIDTH - 1:0] m_axi_IN1_AWID;
output  [7:0] m_axi_IN1_AWLEN;
output  [2:0] m_axi_IN1_AWSIZE;
output  [1:0] m_axi_IN1_AWBURST;
output  [1:0] m_axi_IN1_AWLOCK;
output  [3:0] m_axi_IN1_AWCACHE;
output  [2:0] m_axi_IN1_AWPROT;
output  [3:0] m_axi_IN1_AWQOS;
output  [3:0] m_axi_IN1_AWREGION;
output  [C_M_AXI_IN1_AWUSER_WIDTH - 1:0] m_axi_IN1_AWUSER;
output   m_axi_IN1_WVALID;
input   m_axi_IN1_WREADY;
output  [C_M_AXI_IN1_DATA_WIDTH - 1:0] m_axi_IN1_WDATA;
output  [C_M_AXI_IN1_WSTRB_WIDTH - 1:0] m_axi_IN1_WSTRB;
output   m_axi_IN1_WLAST;
output  [C_M_AXI_IN1_ID_WIDTH - 1:0] m_axi_IN1_WID;
output  [C_M_AXI_IN1_WUSER_WIDTH - 1:0] m_axi_IN1_WUSER;
output   m_axi_IN1_ARVALID;
input   m_axi_IN1_ARREADY;
output  [C_M_AXI_IN1_ADDR_WIDTH - 1:0] m_axi_IN1_ARADDR;
output  [C_M_AXI_IN1_ID_WIDTH - 1:0] m_axi_IN1_ARID;
output  [7:0] m_axi_IN1_ARLEN;
output  [2:0] m_axi_IN1_ARSIZE;
output  [1:0] m_axi_IN1_ARBURST;
output  [1:0] m_axi_IN1_ARLOCK;
output  [3:0] m_axi_IN1_ARCACHE;
output  [2:0] m_axi_IN1_ARPROT;
output  [3:0] m_axi_IN1_ARQOS;
output  [3:0] m_axi_IN1_ARREGION;
output  [C_M_AXI_IN1_ARUSER_WIDTH - 1:0] m_axi_IN1_ARUSER;
input   m_axi_IN1_RVALID;
output   m_axi_IN1_RREADY;
input  [C_M_AXI_IN1_DATA_WIDTH - 1:0] m_axi_IN1_RDATA;
input   m_axi_IN1_RLAST;
input  [C_M_AXI_IN1_ID_WIDTH - 1:0] m_axi_IN1_RID;
input  [C_M_AXI_IN1_RUSER_WIDTH - 1:0] m_axi_IN1_RUSER;
input  [1:0] m_axi_IN1_RRESP;
input   m_axi_IN1_BVALID;
output   m_axi_IN1_BREADY;
input  [1:0] m_axi_IN1_BRESP;
input  [C_M_AXI_IN1_ID_WIDTH - 1:0] m_axi_IN1_BID;
input  [C_M_AXI_IN1_BUSER_WIDTH - 1:0] m_axi_IN1_BUSER;
output   m_axi_W1_AWVALID;
input   m_axi_W1_AWREADY;
output  [C_M_AXI_W1_ADDR_WIDTH - 1:0] m_axi_W1_AWADDR;
output  [C_M_AXI_W1_ID_WIDTH - 1:0] m_axi_W1_AWID;
output  [7:0] m_axi_W1_AWLEN;
output  [2:0] m_axi_W1_AWSIZE;
output  [1:0] m_axi_W1_AWBURST;
output  [1:0] m_axi_W1_AWLOCK;
output  [3:0] m_axi_W1_AWCACHE;
output  [2:0] m_axi_W1_AWPROT;
output  [3:0] m_axi_W1_AWQOS;
output  [3:0] m_axi_W1_AWREGION;
output  [C_M_AXI_W1_AWUSER_WIDTH - 1:0] m_axi_W1_AWUSER;
output   m_axi_W1_WVALID;
input   m_axi_W1_WREADY;
output  [C_M_AXI_W1_DATA_WIDTH - 1:0] m_axi_W1_WDATA;
output  [C_M_AXI_W1_WSTRB_WIDTH - 1:0] m_axi_W1_WSTRB;
output   m_axi_W1_WLAST;
output  [C_M_AXI_W1_ID_WIDTH - 1:0] m_axi_W1_WID;
output  [C_M_AXI_W1_WUSER_WIDTH - 1:0] m_axi_W1_WUSER;
output   m_axi_W1_ARVALID;
input   m_axi_W1_ARREADY;
output  [C_M_AXI_W1_ADDR_WIDTH - 1:0] m_axi_W1_ARADDR;
output  [C_M_AXI_W1_ID_WIDTH - 1:0] m_axi_W1_ARID;
output  [7:0] m_axi_W1_ARLEN;
output  [2:0] m_axi_W1_ARSIZE;
output  [1:0] m_axi_W1_ARBURST;
output  [1:0] m_axi_W1_ARLOCK;
output  [3:0] m_axi_W1_ARCACHE;
output  [2:0] m_axi_W1_ARPROT;
output  [3:0] m_axi_W1_ARQOS;
output  [3:0] m_axi_W1_ARREGION;
output  [C_M_AXI_W1_ARUSER_WIDTH - 1:0] m_axi_W1_ARUSER;
input   m_axi_W1_RVALID;
output   m_axi_W1_RREADY;
input  [C_M_AXI_W1_DATA_WIDTH - 1:0] m_axi_W1_RDATA;
input   m_axi_W1_RLAST;
input  [C_M_AXI_W1_ID_WIDTH - 1:0] m_axi_W1_RID;
input  [C_M_AXI_W1_RUSER_WIDTH - 1:0] m_axi_W1_RUSER;
input  [1:0] m_axi_W1_RRESP;
input   m_axi_W1_BVALID;
output   m_axi_W1_BREADY;
input  [1:0] m_axi_W1_BRESP;
input  [C_M_AXI_W1_ID_WIDTH - 1:0] m_axi_W1_BID;
input  [C_M_AXI_W1_BUSER_WIDTH - 1:0] m_axi_W1_BUSER;
output   m_axi_W2_AWVALID;
input   m_axi_W2_AWREADY;
output  [C_M_AXI_W2_ADDR_WIDTH - 1:0] m_axi_W2_AWADDR;
output  [C_M_AXI_W2_ID_WIDTH - 1:0] m_axi_W2_AWID;
output  [7:0] m_axi_W2_AWLEN;
output  [2:0] m_axi_W2_AWSIZE;
output  [1:0] m_axi_W2_AWBURST;
output  [1:0] m_axi_W2_AWLOCK;
output  [3:0] m_axi_W2_AWCACHE;
output  [2:0] m_axi_W2_AWPROT;
output  [3:0] m_axi_W2_AWQOS;
output  [3:0] m_axi_W2_AWREGION;
output  [C_M_AXI_W2_AWUSER_WIDTH - 1:0] m_axi_W2_AWUSER;
output   m_axi_W2_WVALID;
input   m_axi_W2_WREADY;
output  [C_M_AXI_W2_DATA_WIDTH - 1:0] m_axi_W2_WDATA;
output  [C_M_AXI_W2_WSTRB_WIDTH - 1:0] m_axi_W2_WSTRB;
output   m_axi_W2_WLAST;
output  [C_M_AXI_W2_ID_WIDTH - 1:0] m_axi_W2_WID;
output  [C_M_AXI_W2_WUSER_WIDTH - 1:0] m_axi_W2_WUSER;
output   m_axi_W2_ARVALID;
input   m_axi_W2_ARREADY;
output  [C_M_AXI_W2_ADDR_WIDTH - 1:0] m_axi_W2_ARADDR;
output  [C_M_AXI_W2_ID_WIDTH - 1:0] m_axi_W2_ARID;
output  [7:0] m_axi_W2_ARLEN;
output  [2:0] m_axi_W2_ARSIZE;
output  [1:0] m_axi_W2_ARBURST;
output  [1:0] m_axi_W2_ARLOCK;
output  [3:0] m_axi_W2_ARCACHE;
output  [2:0] m_axi_W2_ARPROT;
output  [3:0] m_axi_W2_ARQOS;
output  [3:0] m_axi_W2_ARREGION;
output  [C_M_AXI_W2_ARUSER_WIDTH - 1:0] m_axi_W2_ARUSER;
input   m_axi_W2_RVALID;
output   m_axi_W2_RREADY;
input  [C_M_AXI_W2_DATA_WIDTH - 1:0] m_axi_W2_RDATA;
input   m_axi_W2_RLAST;
input  [C_M_AXI_W2_ID_WIDTH - 1:0] m_axi_W2_RID;
input  [C_M_AXI_W2_RUSER_WIDTH - 1:0] m_axi_W2_RUSER;
input  [1:0] m_axi_W2_RRESP;
input   m_axi_W2_BVALID;
output   m_axi_W2_BREADY;
input  [1:0] m_axi_W2_BRESP;
input  [C_M_AXI_W2_ID_WIDTH - 1:0] m_axi_W2_BID;
input  [C_M_AXI_W2_BUSER_WIDTH - 1:0] m_axi_W2_BUSER;
output   m_axi_W3_AWVALID;
input   m_axi_W3_AWREADY;
output  [C_M_AXI_W3_ADDR_WIDTH - 1:0] m_axi_W3_AWADDR;
output  [C_M_AXI_W3_ID_WIDTH - 1:0] m_axi_W3_AWID;
output  [7:0] m_axi_W3_AWLEN;
output  [2:0] m_axi_W3_AWSIZE;
output  [1:0] m_axi_W3_AWBURST;
output  [1:0] m_axi_W3_AWLOCK;
output  [3:0] m_axi_W3_AWCACHE;
output  [2:0] m_axi_W3_AWPROT;
output  [3:0] m_axi_W3_AWQOS;
output  [3:0] m_axi_W3_AWREGION;
output  [C_M_AXI_W3_AWUSER_WIDTH - 1:0] m_axi_W3_AWUSER;
output   m_axi_W3_WVALID;
input   m_axi_W3_WREADY;
output  [C_M_AXI_W3_DATA_WIDTH - 1:0] m_axi_W3_WDATA;
output  [C_M_AXI_W3_WSTRB_WIDTH - 1:0] m_axi_W3_WSTRB;
output   m_axi_W3_WLAST;
output  [C_M_AXI_W3_ID_WIDTH - 1:0] m_axi_W3_WID;
output  [C_M_AXI_W3_WUSER_WIDTH - 1:0] m_axi_W3_WUSER;
output   m_axi_W3_ARVALID;
input   m_axi_W3_ARREADY;
output  [C_M_AXI_W3_ADDR_WIDTH - 1:0] m_axi_W3_ARADDR;
output  [C_M_AXI_W3_ID_WIDTH - 1:0] m_axi_W3_ARID;
output  [7:0] m_axi_W3_ARLEN;
output  [2:0] m_axi_W3_ARSIZE;
output  [1:0] m_axi_W3_ARBURST;
output  [1:0] m_axi_W3_ARLOCK;
output  [3:0] m_axi_W3_ARCACHE;
output  [2:0] m_axi_W3_ARPROT;
output  [3:0] m_axi_W3_ARQOS;
output  [3:0] m_axi_W3_ARREGION;
output  [C_M_AXI_W3_ARUSER_WIDTH - 1:0] m_axi_W3_ARUSER;
input   m_axi_W3_RVALID;
output   m_axi_W3_RREADY;
input  [C_M_AXI_W3_DATA_WIDTH - 1:0] m_axi_W3_RDATA;
input   m_axi_W3_RLAST;
input  [C_M_AXI_W3_ID_WIDTH - 1:0] m_axi_W3_RID;
input  [C_M_AXI_W3_RUSER_WIDTH - 1:0] m_axi_W3_RUSER;
input  [1:0] m_axi_W3_RRESP;
input   m_axi_W3_BVALID;
output   m_axi_W3_BREADY;
input  [1:0] m_axi_W3_BRESP;
input  [C_M_AXI_W3_ID_WIDTH - 1:0] m_axi_W3_BID;
input  [C_M_AXI_W3_BUSER_WIDTH - 1:0] m_axi_W3_BUSER;
output   m_axi_W4_AWVALID;
input   m_axi_W4_AWREADY;
output  [C_M_AXI_W4_ADDR_WIDTH - 1:0] m_axi_W4_AWADDR;
output  [C_M_AXI_W4_ID_WIDTH - 1:0] m_axi_W4_AWID;
output  [7:0] m_axi_W4_AWLEN;
output  [2:0] m_axi_W4_AWSIZE;
output  [1:0] m_axi_W4_AWBURST;
output  [1:0] m_axi_W4_AWLOCK;
output  [3:0] m_axi_W4_AWCACHE;
output  [2:0] m_axi_W4_AWPROT;
output  [3:0] m_axi_W4_AWQOS;
output  [3:0] m_axi_W4_AWREGION;
output  [C_M_AXI_W4_AWUSER_WIDTH - 1:0] m_axi_W4_AWUSER;
output   m_axi_W4_WVALID;
input   m_axi_W4_WREADY;
output  [C_M_AXI_W4_DATA_WIDTH - 1:0] m_axi_W4_WDATA;
output  [C_M_AXI_W4_WSTRB_WIDTH - 1:0] m_axi_W4_WSTRB;
output   m_axi_W4_WLAST;
output  [C_M_AXI_W4_ID_WIDTH - 1:0] m_axi_W4_WID;
output  [C_M_AXI_W4_WUSER_WIDTH - 1:0] m_axi_W4_WUSER;
output   m_axi_W4_ARVALID;
input   m_axi_W4_ARREADY;
output  [C_M_AXI_W4_ADDR_WIDTH - 1:0] m_axi_W4_ARADDR;
output  [C_M_AXI_W4_ID_WIDTH - 1:0] m_axi_W4_ARID;
output  [7:0] m_axi_W4_ARLEN;
output  [2:0] m_axi_W4_ARSIZE;
output  [1:0] m_axi_W4_ARBURST;
output  [1:0] m_axi_W4_ARLOCK;
output  [3:0] m_axi_W4_ARCACHE;
output  [2:0] m_axi_W4_ARPROT;
output  [3:0] m_axi_W4_ARQOS;
output  [3:0] m_axi_W4_ARREGION;
output  [C_M_AXI_W4_ARUSER_WIDTH - 1:0] m_axi_W4_ARUSER;
input   m_axi_W4_RVALID;
output   m_axi_W4_RREADY;
input  [C_M_AXI_W4_DATA_WIDTH - 1:0] m_axi_W4_RDATA;
input   m_axi_W4_RLAST;
input  [C_M_AXI_W4_ID_WIDTH - 1:0] m_axi_W4_RID;
input  [C_M_AXI_W4_RUSER_WIDTH - 1:0] m_axi_W4_RUSER;
input  [1:0] m_axi_W4_RRESP;
input   m_axi_W4_BVALID;
output   m_axi_W4_BREADY;
input  [1:0] m_axi_W4_BRESP;
input  [C_M_AXI_W4_ID_WIDTH - 1:0] m_axi_W4_BID;
input  [C_M_AXI_W4_BUSER_WIDTH - 1:0] m_axi_W4_BUSER;
output   m_axi_B1_AWVALID;
input   m_axi_B1_AWREADY;
output  [C_M_AXI_B1_ADDR_WIDTH - 1:0] m_axi_B1_AWADDR;
output  [C_M_AXI_B1_ID_WIDTH - 1:0] m_axi_B1_AWID;
output  [7:0] m_axi_B1_AWLEN;
output  [2:0] m_axi_B1_AWSIZE;
output  [1:0] m_axi_B1_AWBURST;
output  [1:0] m_axi_B1_AWLOCK;
output  [3:0] m_axi_B1_AWCACHE;
output  [2:0] m_axi_B1_AWPROT;
output  [3:0] m_axi_B1_AWQOS;
output  [3:0] m_axi_B1_AWREGION;
output  [C_M_AXI_B1_AWUSER_WIDTH - 1:0] m_axi_B1_AWUSER;
output   m_axi_B1_WVALID;
input   m_axi_B1_WREADY;
output  [C_M_AXI_B1_DATA_WIDTH - 1:0] m_axi_B1_WDATA;
output  [C_M_AXI_B1_WSTRB_WIDTH - 1:0] m_axi_B1_WSTRB;
output   m_axi_B1_WLAST;
output  [C_M_AXI_B1_ID_WIDTH - 1:0] m_axi_B1_WID;
output  [C_M_AXI_B1_WUSER_WIDTH - 1:0] m_axi_B1_WUSER;
output   m_axi_B1_ARVALID;
input   m_axi_B1_ARREADY;
output  [C_M_AXI_B1_ADDR_WIDTH - 1:0] m_axi_B1_ARADDR;
output  [C_M_AXI_B1_ID_WIDTH - 1:0] m_axi_B1_ARID;
output  [7:0] m_axi_B1_ARLEN;
output  [2:0] m_axi_B1_ARSIZE;
output  [1:0] m_axi_B1_ARBURST;
output  [1:0] m_axi_B1_ARLOCK;
output  [3:0] m_axi_B1_ARCACHE;
output  [2:0] m_axi_B1_ARPROT;
output  [3:0] m_axi_B1_ARQOS;
output  [3:0] m_axi_B1_ARREGION;
output  [C_M_AXI_B1_ARUSER_WIDTH - 1:0] m_axi_B1_ARUSER;
input   m_axi_B1_RVALID;
output   m_axi_B1_RREADY;
input  [C_M_AXI_B1_DATA_WIDTH - 1:0] m_axi_B1_RDATA;
input   m_axi_B1_RLAST;
input  [C_M_AXI_B1_ID_WIDTH - 1:0] m_axi_B1_RID;
input  [C_M_AXI_B1_RUSER_WIDTH - 1:0] m_axi_B1_RUSER;
input  [1:0] m_axi_B1_RRESP;
input   m_axi_B1_BVALID;
output   m_axi_B1_BREADY;
input  [1:0] m_axi_B1_BRESP;
input  [C_M_AXI_B1_ID_WIDTH - 1:0] m_axi_B1_BID;
input  [C_M_AXI_B1_BUSER_WIDTH - 1:0] m_axi_B1_BUSER;
output   m_axi_OUT1_AWVALID;
input   m_axi_OUT1_AWREADY;
output  [C_M_AXI_OUT1_ADDR_WIDTH - 1:0] m_axi_OUT1_AWADDR;
output  [C_M_AXI_OUT1_ID_WIDTH - 1:0] m_axi_OUT1_AWID;
output  [7:0] m_axi_OUT1_AWLEN;
output  [2:0] m_axi_OUT1_AWSIZE;
output  [1:0] m_axi_OUT1_AWBURST;
output  [1:0] m_axi_OUT1_AWLOCK;
output  [3:0] m_axi_OUT1_AWCACHE;
output  [2:0] m_axi_OUT1_AWPROT;
output  [3:0] m_axi_OUT1_AWQOS;
output  [3:0] m_axi_OUT1_AWREGION;
output  [C_M_AXI_OUT1_AWUSER_WIDTH - 1:0] m_axi_OUT1_AWUSER;
output   m_axi_OUT1_WVALID;
input   m_axi_OUT1_WREADY;
output  [C_M_AXI_OUT1_DATA_WIDTH - 1:0] m_axi_OUT1_WDATA;
output  [C_M_AXI_OUT1_WSTRB_WIDTH - 1:0] m_axi_OUT1_WSTRB;
output   m_axi_OUT1_WLAST;
output  [C_M_AXI_OUT1_ID_WIDTH - 1:0] m_axi_OUT1_WID;
output  [C_M_AXI_OUT1_WUSER_WIDTH - 1:0] m_axi_OUT1_WUSER;
output   m_axi_OUT1_ARVALID;
input   m_axi_OUT1_ARREADY;
output  [C_M_AXI_OUT1_ADDR_WIDTH - 1:0] m_axi_OUT1_ARADDR;
output  [C_M_AXI_OUT1_ID_WIDTH - 1:0] m_axi_OUT1_ARID;
output  [7:0] m_axi_OUT1_ARLEN;
output  [2:0] m_axi_OUT1_ARSIZE;
output  [1:0] m_axi_OUT1_ARBURST;
output  [1:0] m_axi_OUT1_ARLOCK;
output  [3:0] m_axi_OUT1_ARCACHE;
output  [2:0] m_axi_OUT1_ARPROT;
output  [3:0] m_axi_OUT1_ARQOS;
output  [3:0] m_axi_OUT1_ARREGION;
output  [C_M_AXI_OUT1_ARUSER_WIDTH - 1:0] m_axi_OUT1_ARUSER;
input   m_axi_OUT1_RVALID;
output   m_axi_OUT1_RREADY;
input  [C_M_AXI_OUT1_DATA_WIDTH - 1:0] m_axi_OUT1_RDATA;
input   m_axi_OUT1_RLAST;
input  [C_M_AXI_OUT1_ID_WIDTH - 1:0] m_axi_OUT1_RID;
input  [C_M_AXI_OUT1_RUSER_WIDTH - 1:0] m_axi_OUT1_RUSER;
input  [1:0] m_axi_OUT1_RRESP;
input   m_axi_OUT1_BVALID;
output   m_axi_OUT1_BREADY;
input  [1:0] m_axi_OUT1_BRESP;
input  [C_M_AXI_OUT1_ID_WIDTH - 1:0] m_axi_OUT1_BID;
input  [C_M_AXI_OUT1_BUSER_WIDTH - 1:0] m_axi_OUT1_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] CHin;
reg   [31:0] CHin_0_data_reg;
reg    CHin_0_vld_reg;
reg    CHin_0_ack_out;
wire   [31:0] CHout;
reg   [31:0] CHout_0_data_reg;
reg    CHout_0_vld_reg;
reg    CHout_0_ack_out;
wire   [31:0] relu_en;
reg   [31:0] relu_en_0_data_reg;
reg    relu_en_0_vld_reg;
reg    relu_en_0_ack_out;
wire   [63:0] feature_in;
wire   [63:0] Weight1;
wire   [63:0] Weight2;
wire   [63:0] Weight3;
wire   [63:0] Weight4;
wire   [63:0] bias;
wire   [63:0] feature_out;
reg   [4:0] mask_table_address0;
reg    mask_table_ce0;
wire   [22:0] mask_table_q0;
reg   [4:0] output_buffer0_V_address0;
reg    output_buffer0_V_ce0;
wire   [15:0] output_buffer0_V_q0;
reg   [4:0] output_buffer0_V_address1;
reg    output_buffer0_V_ce1;
reg    output_buffer0_V_we1;
reg   [15:0] output_buffer0_V_d1;
reg   [4:0] output_buffer1_V_address0;
reg    output_buffer1_V_ce0;
wire   [15:0] output_buffer1_V_q0;
reg   [4:0] output_buffer1_V_address1;
reg    output_buffer1_V_ce1;
reg    output_buffer1_V_we1;
reg   [15:0] output_buffer1_V_d1;
reg   [63:0] feature_out_read_reg_1173;
reg   [63:0] bias_read_reg_1178;
reg   [63:0] Weight4_read_reg_1183;
reg   [63:0] Weight3_read_reg_1188;
reg   [63:0] Weight2_read_reg_1193;
reg   [63:0] Weight1_read_reg_1198;
reg   [63:0] feature_in_read_reg_1203;
reg   [31:0] relu_en_read_reg_1208;
wire    ap_CS_fsm_state2;
reg   [31:0] CHout_read_reg_1213;
reg   [31:0] CHin_read_reg_1218;
wire   [31:0] grp_fu_377_p1;
reg   [31:0] conv1_reg_1224;
wire    ap_CS_fsm_state9;
reg   [31:0] conv_reg_1229;
wire    ap_CS_fsm_state10;
wire   [31:0] grp_fu_371_p2;
reg   [31:0] dc_2_reg_1234;
wire    ap_CS_fsm_state15;
reg   [31:0] dc_reg_1240;
wire    ap_CS_fsm_state16;
wire   [31:0] data_V_3_fu_385_p1;
reg   [31:0] data_V_3_reg_1246;
reg   [0:0] p_Result_6_reg_1252;
wire   [7:0] xs_exp_V_10_fu_396_p4;
reg   [7:0] xs_exp_V_10_reg_1260;
wire   [0:0] icmp_ln21_1_fu_434_p2;
reg   [0:0] icmp_ln21_1_reg_1267;
wire   [30:0] trunc_ln368_1_fu_455_p1;
reg   [30:0] trunc_ln368_1_reg_1277;
wire   [31:0] data_V_fu_459_p1;
reg   [31:0] data_V_reg_1282;
wire    ap_CS_fsm_state17;
reg   [0:0] p_Result_s_reg_1288;
wire   [7:0] xs_exp_V_8_fu_470_p4;
reg   [7:0] xs_exp_V_8_reg_1296;
wire   [0:0] icmp_ln21_fu_508_p2;
reg   [0:0] icmp_ln21_reg_1303;
wire   [30:0] trunc_ln368_fu_529_p1;
reg   [30:0] trunc_ln368_reg_1313;
wire   [0:0] icmp_ln1035_2_fu_533_p2;
reg   [0:0] icmp_ln1035_2_reg_1318;
wire   [0:0] icmp_ln1035_3_fu_538_p2;
reg   [0:0] icmp_ln1035_3_reg_1323;
wire   [31:0] select_ln1035_2_fu_664_p3;
reg   [31:0] select_ln1035_2_reg_1328;
wire   [0:0] icmp_ln1035_fu_672_p2;
reg   [0:0] icmp_ln1035_reg_1333;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln1035_1_fu_677_p2;
reg   [0:0] icmp_ln1035_1_reg_1338;
wire   [31:0] select_ln1035_fu_803_p3;
reg   [31:0] select_ln1035_reg_1343;
wire   [31:0] dc_3_fu_821_p3;
reg   [31:0] dc_3_reg_1348;
wire   [31:0] dc_1_fu_837_p3;
reg   [31:0] dc_1_reg_1353;
wire    ap_CS_fsm_state19;
reg   [0:0] p_Result_10_reg_1358;
wire   [31:0] val_1_fu_960_p3;
reg   [31:0] val_1_reg_1363;
reg   [0:0] p_Result_4_reg_1369;
wire    ap_CS_fsm_state20;
wire   [31:0] val_fu_1085_p3;
reg   [31:0] val_reg_1374;
wire   [31:0] result_V_7_fu_1098_p3;
reg   [31:0] result_V_7_reg_1380;
wire   [31:0] sub_fu_1120_p2;
reg   [31:0] sub_reg_1385;
wire    ap_CS_fsm_state21;
wire   [26:0] add_ln241_fu_1126_p2;
reg   [26:0] add_ln241_reg_1390;
wire   [26:0] trunc_ln241_fu_1139_p1;
reg   [26:0] trunc_ln241_reg_1395;
wire    ap_CS_fsm_state22;
wire   [30:0] Out_LP_now_2_fu_1149_p2;
reg   [30:0] Out_LP_now_2_reg_1403;
wire   [26:0] add_ln242_fu_1155_p2;
reg   [26:0] add_ln242_reg_1408;
wire   [0:0] icmp_ln241_fu_1144_p2;
wire    grp_Load_and_Compute_fu_320_ap_start;
wire    grp_Load_and_Compute_fu_320_ap_done;
wire    grp_Load_and_Compute_fu_320_ap_idle;
wire    grp_Load_and_Compute_fu_320_ap_ready;
wire    grp_Load_and_Compute_fu_320_m_axi_IN1_AWVALID;
wire   [63:0] grp_Load_and_Compute_fu_320_m_axi_IN1_AWADDR;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_IN1_AWID;
wire   [31:0] grp_Load_and_Compute_fu_320_m_axi_IN1_AWLEN;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_IN1_AWSIZE;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_IN1_AWBURST;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_IN1_AWLOCK;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_IN1_AWCACHE;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_IN1_AWPROT;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_IN1_AWQOS;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_IN1_AWREGION;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_IN1_AWUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_IN1_WVALID;
wire   [15:0] grp_Load_and_Compute_fu_320_m_axi_IN1_WDATA;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_IN1_WSTRB;
wire    grp_Load_and_Compute_fu_320_m_axi_IN1_WLAST;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_IN1_WID;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_IN1_WUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_IN1_ARVALID;
wire   [63:0] grp_Load_and_Compute_fu_320_m_axi_IN1_ARADDR;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_IN1_ARID;
wire   [31:0] grp_Load_and_Compute_fu_320_m_axi_IN1_ARLEN;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_IN1_ARSIZE;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_IN1_ARBURST;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_IN1_ARLOCK;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_IN1_ARCACHE;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_IN1_ARPROT;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_IN1_ARQOS;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_IN1_ARREGION;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_IN1_ARUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_IN1_RREADY;
wire    grp_Load_and_Compute_fu_320_m_axi_IN1_BREADY;
wire    grp_Load_and_Compute_fu_320_m_axi_W1_AWVALID;
wire   [63:0] grp_Load_and_Compute_fu_320_m_axi_W1_AWADDR;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W1_AWID;
wire   [31:0] grp_Load_and_Compute_fu_320_m_axi_W1_AWLEN;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W1_AWSIZE;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W1_AWBURST;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W1_AWLOCK;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W1_AWCACHE;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W1_AWPROT;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W1_AWQOS;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W1_AWREGION;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W1_AWUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_W1_WVALID;
wire   [15:0] grp_Load_and_Compute_fu_320_m_axi_W1_WDATA;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W1_WSTRB;
wire    grp_Load_and_Compute_fu_320_m_axi_W1_WLAST;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W1_WID;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W1_WUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_W1_ARVALID;
wire   [63:0] grp_Load_and_Compute_fu_320_m_axi_W1_ARADDR;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W1_ARID;
wire   [31:0] grp_Load_and_Compute_fu_320_m_axi_W1_ARLEN;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W1_ARSIZE;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W1_ARBURST;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W1_ARLOCK;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W1_ARCACHE;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W1_ARPROT;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W1_ARQOS;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W1_ARREGION;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W1_ARUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_W1_RREADY;
wire    grp_Load_and_Compute_fu_320_m_axi_W1_BREADY;
wire    grp_Load_and_Compute_fu_320_m_axi_W2_AWVALID;
wire   [63:0] grp_Load_and_Compute_fu_320_m_axi_W2_AWADDR;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W2_AWID;
wire   [31:0] grp_Load_and_Compute_fu_320_m_axi_W2_AWLEN;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W2_AWSIZE;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W2_AWBURST;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W2_AWLOCK;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W2_AWCACHE;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W2_AWPROT;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W2_AWQOS;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W2_AWREGION;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W2_AWUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_W2_WVALID;
wire   [15:0] grp_Load_and_Compute_fu_320_m_axi_W2_WDATA;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W2_WSTRB;
wire    grp_Load_and_Compute_fu_320_m_axi_W2_WLAST;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W2_WID;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W2_WUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_W2_ARVALID;
wire   [63:0] grp_Load_and_Compute_fu_320_m_axi_W2_ARADDR;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W2_ARID;
wire   [31:0] grp_Load_and_Compute_fu_320_m_axi_W2_ARLEN;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W2_ARSIZE;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W2_ARBURST;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W2_ARLOCK;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W2_ARCACHE;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W2_ARPROT;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W2_ARQOS;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W2_ARREGION;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W2_ARUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_W2_RREADY;
wire    grp_Load_and_Compute_fu_320_m_axi_W2_BREADY;
wire    grp_Load_and_Compute_fu_320_m_axi_W3_AWVALID;
wire   [63:0] grp_Load_and_Compute_fu_320_m_axi_W3_AWADDR;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W3_AWID;
wire   [31:0] grp_Load_and_Compute_fu_320_m_axi_W3_AWLEN;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W3_AWSIZE;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W3_AWBURST;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W3_AWLOCK;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W3_AWCACHE;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W3_AWPROT;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W3_AWQOS;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W3_AWREGION;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W3_AWUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_W3_WVALID;
wire   [15:0] grp_Load_and_Compute_fu_320_m_axi_W3_WDATA;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W3_WSTRB;
wire    grp_Load_and_Compute_fu_320_m_axi_W3_WLAST;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W3_WID;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W3_WUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_W3_ARVALID;
wire   [63:0] grp_Load_and_Compute_fu_320_m_axi_W3_ARADDR;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W3_ARID;
wire   [31:0] grp_Load_and_Compute_fu_320_m_axi_W3_ARLEN;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W3_ARSIZE;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W3_ARBURST;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W3_ARLOCK;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W3_ARCACHE;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W3_ARPROT;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W3_ARQOS;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W3_ARREGION;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W3_ARUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_W3_RREADY;
wire    grp_Load_and_Compute_fu_320_m_axi_W3_BREADY;
wire    grp_Load_and_Compute_fu_320_m_axi_W4_AWVALID;
wire   [63:0] grp_Load_and_Compute_fu_320_m_axi_W4_AWADDR;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W4_AWID;
wire   [31:0] grp_Load_and_Compute_fu_320_m_axi_W4_AWLEN;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W4_AWSIZE;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W4_AWBURST;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W4_AWLOCK;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W4_AWCACHE;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W4_AWPROT;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W4_AWQOS;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W4_AWREGION;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W4_AWUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_W4_WVALID;
wire   [15:0] grp_Load_and_Compute_fu_320_m_axi_W4_WDATA;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W4_WSTRB;
wire    grp_Load_and_Compute_fu_320_m_axi_W4_WLAST;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W4_WID;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W4_WUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_W4_ARVALID;
wire   [63:0] grp_Load_and_Compute_fu_320_m_axi_W4_ARADDR;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W4_ARID;
wire   [31:0] grp_Load_and_Compute_fu_320_m_axi_W4_ARLEN;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W4_ARSIZE;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W4_ARBURST;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_W4_ARLOCK;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W4_ARCACHE;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_W4_ARPROT;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W4_ARQOS;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_W4_ARREGION;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_W4_ARUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_W4_RREADY;
wire    grp_Load_and_Compute_fu_320_m_axi_W4_BREADY;
wire    grp_Load_and_Compute_fu_320_m_axi_B1_AWVALID;
wire   [63:0] grp_Load_and_Compute_fu_320_m_axi_B1_AWADDR;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_B1_AWID;
wire   [31:0] grp_Load_and_Compute_fu_320_m_axi_B1_AWLEN;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_B1_AWSIZE;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_B1_AWBURST;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_B1_AWLOCK;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_B1_AWCACHE;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_B1_AWPROT;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_B1_AWQOS;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_B1_AWREGION;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_B1_AWUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_B1_WVALID;
wire   [15:0] grp_Load_and_Compute_fu_320_m_axi_B1_WDATA;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_B1_WSTRB;
wire    grp_Load_and_Compute_fu_320_m_axi_B1_WLAST;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_B1_WID;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_B1_WUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_B1_ARVALID;
wire   [63:0] grp_Load_and_Compute_fu_320_m_axi_B1_ARADDR;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_B1_ARID;
wire   [31:0] grp_Load_and_Compute_fu_320_m_axi_B1_ARLEN;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_B1_ARSIZE;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_B1_ARBURST;
wire   [1:0] grp_Load_and_Compute_fu_320_m_axi_B1_ARLOCK;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_B1_ARCACHE;
wire   [2:0] grp_Load_and_Compute_fu_320_m_axi_B1_ARPROT;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_B1_ARQOS;
wire   [3:0] grp_Load_and_Compute_fu_320_m_axi_B1_ARREGION;
wire   [0:0] grp_Load_and_Compute_fu_320_m_axi_B1_ARUSER;
wire    grp_Load_and_Compute_fu_320_m_axi_B1_RREADY;
wire    grp_Load_and_Compute_fu_320_m_axi_B1_BREADY;
wire   [4:0] grp_Load_and_Compute_fu_320_output_buffer_address0;
wire    grp_Load_and_Compute_fu_320_output_buffer_ce0;
reg   [15:0] grp_Load_and_Compute_fu_320_output_buffer_q0;
wire   [4:0] grp_Load_and_Compute_fu_320_output_buffer_address1;
wire    grp_Load_and_Compute_fu_320_output_buffer_ce1;
wire    grp_Load_and_Compute_fu_320_output_buffer_we1;
wire   [15:0] grp_Load_and_Compute_fu_320_output_buffer_d1;
reg   [26:0] grp_Load_and_Compute_fu_320_Out_LP_now;
wire    grp_Write_Output_fu_359_ap_start;
wire    grp_Write_Output_fu_359_ap_done;
wire    grp_Write_Output_fu_359_ap_idle;
wire    grp_Write_Output_fu_359_ap_ready;
wire    grp_Write_Output_fu_359_m_axi_OUT1_AWVALID;
wire   [63:0] grp_Write_Output_fu_359_m_axi_OUT1_AWADDR;
wire   [0:0] grp_Write_Output_fu_359_m_axi_OUT1_AWID;
wire   [31:0] grp_Write_Output_fu_359_m_axi_OUT1_AWLEN;
wire   [2:0] grp_Write_Output_fu_359_m_axi_OUT1_AWSIZE;
wire   [1:0] grp_Write_Output_fu_359_m_axi_OUT1_AWBURST;
wire   [1:0] grp_Write_Output_fu_359_m_axi_OUT1_AWLOCK;
wire   [3:0] grp_Write_Output_fu_359_m_axi_OUT1_AWCACHE;
wire   [2:0] grp_Write_Output_fu_359_m_axi_OUT1_AWPROT;
wire   [3:0] grp_Write_Output_fu_359_m_axi_OUT1_AWQOS;
wire   [3:0] grp_Write_Output_fu_359_m_axi_OUT1_AWREGION;
wire   [0:0] grp_Write_Output_fu_359_m_axi_OUT1_AWUSER;
wire    grp_Write_Output_fu_359_m_axi_OUT1_WVALID;
wire   [15:0] grp_Write_Output_fu_359_m_axi_OUT1_WDATA;
wire   [1:0] grp_Write_Output_fu_359_m_axi_OUT1_WSTRB;
wire    grp_Write_Output_fu_359_m_axi_OUT1_WLAST;
wire   [0:0] grp_Write_Output_fu_359_m_axi_OUT1_WID;
wire   [0:0] grp_Write_Output_fu_359_m_axi_OUT1_WUSER;
wire    grp_Write_Output_fu_359_m_axi_OUT1_ARVALID;
wire   [63:0] grp_Write_Output_fu_359_m_axi_OUT1_ARADDR;
wire   [0:0] grp_Write_Output_fu_359_m_axi_OUT1_ARID;
wire   [31:0] grp_Write_Output_fu_359_m_axi_OUT1_ARLEN;
wire   [2:0] grp_Write_Output_fu_359_m_axi_OUT1_ARSIZE;
wire   [1:0] grp_Write_Output_fu_359_m_axi_OUT1_ARBURST;
wire   [1:0] grp_Write_Output_fu_359_m_axi_OUT1_ARLOCK;
wire   [3:0] grp_Write_Output_fu_359_m_axi_OUT1_ARCACHE;
wire   [2:0] grp_Write_Output_fu_359_m_axi_OUT1_ARPROT;
wire   [3:0] grp_Write_Output_fu_359_m_axi_OUT1_ARQOS;
wire   [3:0] grp_Write_Output_fu_359_m_axi_OUT1_ARREGION;
wire   [0:0] grp_Write_Output_fu_359_m_axi_OUT1_ARUSER;
wire    grp_Write_Output_fu_359_m_axi_OUT1_RREADY;
wire    grp_Write_Output_fu_359_m_axi_OUT1_BREADY;
wire   [4:0] grp_Write_Output_fu_359_output_buffer_address0;
wire    grp_Write_Output_fu_359_output_buffer_ce0;
reg   [15:0] grp_Write_Output_fu_359_output_buffer_q0;
wire   [4:0] grp_Write_Output_fu_359_output_buffer_address1;
wire    grp_Write_Output_fu_359_output_buffer_ce1;
wire    grp_Write_Output_fu_359_output_buffer_we1;
wire   [15:0] grp_Write_Output_fu_359_output_buffer_d1;
reg   [26:0] grp_Write_Output_fu_359_Out_LP_now;
wire    B1_AWREADY;
wire    B1_WREADY;
reg    B1_ARVALID;
wire    B1_ARREADY;
wire    B1_RVALID;
reg    B1_RREADY;
wire   [15:0] B1_RDATA;
wire   [10:0] B1_RFIFONUM;
wire    B1_BVALID;
wire    IN1_AWREADY;
wire    IN1_WREADY;
reg    IN1_ARVALID;
wire    IN1_ARREADY;
wire    IN1_RVALID;
reg    IN1_RREADY;
wire   [15:0] IN1_RDATA;
wire   [10:0] IN1_RFIFONUM;
wire    IN1_BVALID;
reg    OUT1_AWVALID;
wire    OUT1_AWREADY;
reg    OUT1_WVALID;
wire    OUT1_WREADY;
wire    OUT1_ARREADY;
wire    OUT1_RVALID;
wire   [15:0] OUT1_RDATA;
wire   [10:0] OUT1_RFIFONUM;
wire    OUT1_BVALID;
reg    OUT1_BREADY;
wire    W1_AWREADY;
wire    W1_WREADY;
reg    W1_ARVALID;
wire    W1_ARREADY;
wire    W1_RVALID;
reg    W1_RREADY;
wire   [15:0] W1_RDATA;
wire   [10:0] W1_RFIFONUM;
wire    W1_BVALID;
wire    W2_AWREADY;
wire    W2_WREADY;
reg    W2_ARVALID;
wire    W2_ARREADY;
wire    W2_RVALID;
reg    W2_RREADY;
wire   [15:0] W2_RDATA;
wire   [10:0] W2_RFIFONUM;
wire    W2_BVALID;
wire    W3_AWREADY;
wire    W3_WREADY;
reg    W3_ARVALID;
wire    W3_ARREADY;
wire    W3_RVALID;
reg    W3_RREADY;
wire   [15:0] W3_RDATA;
wire   [10:0] W3_RFIFONUM;
wire    W3_BVALID;
wire    W4_AWREADY;
wire    W4_WREADY;
reg    W4_ARVALID;
wire    W4_ARREADY;
wire    W4_RVALID;
reg    W4_RREADY;
wire   [15:0] W4_RDATA;
wire   [10:0] W4_RFIFONUM;
wire    W4_BVALID;
wire   [0:0] ap_phi_mux_pp_phi_fu_299_p4;
reg   [0:0] pp_reg_295;
reg   [0:0] ap_phi_mux_pp_1_phi_fu_311_p4;
wire    ap_CS_fsm_state23;
reg    ap_block_state23_on_subcall_done;
reg    grp_Load_and_Compute_fu_320_ap_start_reg;
reg    grp_Write_Output_fu_359_ap_start_reg;
wire    ap_CS_fsm_state24;
wire   [63:0] zext_ln541_1_fu_450_p1;
wire   [63:0] zext_ln541_fu_524_p1;
reg   [30:0] Out_LP_now_fu_210;
reg   [31:0] grp_fu_371_p0;
reg   [31:0] grp_fu_371_p1;
wire    ap_CS_fsm_state11;
reg   [31:0] grp_fu_377_p0;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [7:0] trunc_ln21_1_fu_406_p1;
wire   [14:0] tmp_1_i9_fu_416_p4;
wire   [7:0] or_ln21_2_fu_410_p2;
wire   [22:0] tmp_2_i1_fu_426_p3;
wire   [4:0] index_1_fu_440_p4;
wire   [7:0] trunc_ln21_fu_480_p1;
wire   [14:0] tmp_1_i_fu_490_p4;
wire   [7:0] or_ln21_fu_484_p2;
wire   [22:0] tmp_2_i_fu_500_p3;
wire   [4:0] index_fu_514_p4;
wire   [31:0] p_Result_7_fu_547_p3;
wire   [31:0] zext_ln30_1_fu_543_p1;
wire   [31:0] p_Result_8_fu_558_p3;
wire   [31:0] data_V_4_fu_565_p2;
wire   [31:0] or_ln779_1_fu_581_p2;
wire   [7:0] xs_exp_V_5_fu_571_p4;
wire   [22:0] trunc_ln779_2_fu_600_p1;
wire   [22:0] trunc_ln779_3_fu_603_p1;
wire   [22:0] xs_sig_V_2_fu_607_p3;
wire   [22:0] xor_ln1497_1_fu_614_p2;
wire   [0:0] xs_sign_V_5_fu_586_p3;
wire   [7:0] xs_exp_V_11_fu_594_p3;
wire   [22:0] xs_sig_V_5_fu_620_p2;
wire   [31:0] p_Result_9_fu_626_p4;
wire   [0:0] or_ln21_3_fu_640_p2;
wire   [0:0] and_ln21_1_fu_644_p2;
wire   [31:0] bitcast_ln356_2_fu_554_p1;
wire   [0:0] or_ln1035_1_fu_658_p2;
wire   [31:0] select_ln21_1_fu_650_p3;
wire   [31:0] bitcast_ln356_3_fu_636_p1;
wire   [31:0] p_Result_1_fu_686_p3;
wire   [31:0] zext_ln30_fu_682_p1;
wire   [31:0] p_Result_2_fu_697_p3;
wire   [31:0] data_V_1_fu_704_p2;
wire   [31:0] or_ln779_fu_720_p2;
wire   [7:0] xs_exp_V_fu_710_p4;
wire   [22:0] trunc_ln779_fu_739_p1;
wire   [22:0] trunc_ln779_1_fu_742_p1;
wire   [22:0] xs_sig_V_fu_746_p3;
wire   [22:0] xor_ln1497_fu_753_p2;
wire   [0:0] xs_sign_V_1_fu_725_p3;
wire   [7:0] xs_exp_V_9_fu_733_p3;
wire   [22:0] xs_sig_V_4_fu_759_p2;
wire   [31:0] p_Result_3_fu_765_p4;
wire   [0:0] or_ln21_1_fu_779_p2;
wire   [0:0] and_ln21_fu_783_p2;
wire   [31:0] bitcast_ln356_fu_693_p1;
wire   [0:0] or_ln1035_fu_797_p2;
wire   [31:0] select_ln21_fu_789_p3;
wire   [31:0] bitcast_ln356_1_fu_775_p1;
wire   [0:0] xor_ln1035_1_fu_811_p2;
wire   [0:0] and_ln1035_1_fu_816_p2;
wire   [0:0] xor_ln1035_fu_827_p2;
wire   [0:0] and_ln1035_fu_832_p2;
wire   [31:0] data_V_5_fu_843_p1;
wire   [22:0] p_Result_11_fu_864_p1;
wire   [24:0] mantissa_1_fu_868_p4;
wire   [7:0] xs_exp_V_7_fu_854_p4;
wire   [8:0] zext_ln346_1_fu_882_p1;
wire   [8:0] add_ln346_1_fu_886_p2;
wire   [7:0] sub_ln1512_1_fu_900_p2;
wire   [0:0] isNeg_1_fu_892_p3;
wire  signed [8:0] sext_ln1512_1_fu_906_p1;
wire   [8:0] ush_1_fu_910_p3;
wire  signed [31:0] sext_ln1488_1_fu_918_p1;
wire   [78:0] zext_ln15_1_fu_878_p1;
wire   [78:0] zext_ln1488_1_fu_922_p1;
wire   [78:0] r_V_2_fu_926_p2;
wire   [0:0] tmp_6_fu_938_p3;
wire   [78:0] r_V_3_fu_932_p2;
wire   [31:0] zext_ln818_1_fu_946_p1;
wire   [31:0] tmp_195_fu_950_p4;
wire   [31:0] data_V_2_fu_968_p1;
wire   [22:0] p_Result_5_fu_989_p1;
wire   [24:0] mantissa_fu_993_p4;
wire   [7:0] xs_exp_V_3_fu_979_p4;
wire   [8:0] zext_ln346_fu_1007_p1;
wire   [8:0] add_ln346_fu_1011_p2;
wire   [7:0] sub_ln1512_fu_1025_p2;
wire   [0:0] isNeg_fu_1017_p3;
wire  signed [8:0] sext_ln1512_fu_1031_p1;
wire   [8:0] ush_fu_1035_p3;
wire  signed [31:0] sext_ln1488_fu_1043_p1;
wire   [78:0] zext_ln15_fu_1003_p1;
wire   [78:0] zext_ln1488_fu_1047_p1;
wire   [78:0] r_V_fu_1051_p2;
wire   [0:0] tmp_fu_1063_p3;
wire   [78:0] r_V_1_fu_1057_p2;
wire   [31:0] zext_ln818_fu_1071_p1;
wire   [31:0] tmp_s_fu_1075_p4;
wire   [31:0] result_V_6_fu_1093_p2;
wire   [31:0] result_V_2_fu_1105_p2;
wire   [31:0] result_V_fu_1110_p3;
wire   [26:0] empty_fu_1116_p1;
wire   [31:0] zext_ln241_fu_1135_p1;
reg    ap_block_state24_on_subcall_done;
reg   [23:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
reg    ap_ST_fsm_state24_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
#0 CHin_0_data_reg = 32'd0;
#0 CHin_0_vld_reg = 1'b0;
#0 CHout_0_data_reg = 32'd0;
#0 CHout_0_vld_reg = 1'b0;
#0 relu_en_0_data_reg = 32'd0;
#0 relu_en_0_vld_reg = 1'b0;
#0 grp_Load_and_Compute_fu_320_ap_start_reg = 1'b0;
#0 grp_Write_Output_fu_359_ap_start_reg = 1'b0;
end

Dense_mask_table_ROM_AUTO_1R #(
    .DataWidth( 23 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
mask_table_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mask_table_address0),
    .ce0(mask_table_ce0),
    .q0(mask_table_q0)
);

Dense_Load_and_Compute_bias_buffer_V_RAM_2P_BRAM_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
output_buffer0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer0_V_address0),
    .ce0(output_buffer0_V_ce0),
    .q0(output_buffer0_V_q0),
    .address1(output_buffer0_V_address1),
    .ce1(output_buffer0_V_ce1),
    .we1(output_buffer0_V_we1),
    .d1(output_buffer0_V_d1)
);

Dense_Load_and_Compute_bias_buffer_V_RAM_2P_BRAM_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
output_buffer1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer1_V_address0),
    .ce0(output_buffer1_V_ce0),
    .q0(output_buffer1_V_q0),
    .address1(output_buffer1_V_address1),
    .ce1(output_buffer1_V_ce1),
    .we1(output_buffer1_V_we1),
    .d1(output_buffer1_V_d1)
);

Dense_Load_and_Compute grp_Load_and_Compute_fu_320(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Load_and_Compute_fu_320_ap_start),
    .ap_done(grp_Load_and_Compute_fu_320_ap_done),
    .ap_idle(grp_Load_and_Compute_fu_320_ap_idle),
    .ap_ready(grp_Load_and_Compute_fu_320_ap_ready),
    .m_axi_IN1_AWVALID(grp_Load_and_Compute_fu_320_m_axi_IN1_AWVALID),
    .m_axi_IN1_AWREADY(1'b0),
    .m_axi_IN1_AWADDR(grp_Load_and_Compute_fu_320_m_axi_IN1_AWADDR),
    .m_axi_IN1_AWID(grp_Load_and_Compute_fu_320_m_axi_IN1_AWID),
    .m_axi_IN1_AWLEN(grp_Load_and_Compute_fu_320_m_axi_IN1_AWLEN),
    .m_axi_IN1_AWSIZE(grp_Load_and_Compute_fu_320_m_axi_IN1_AWSIZE),
    .m_axi_IN1_AWBURST(grp_Load_and_Compute_fu_320_m_axi_IN1_AWBURST),
    .m_axi_IN1_AWLOCK(grp_Load_and_Compute_fu_320_m_axi_IN1_AWLOCK),
    .m_axi_IN1_AWCACHE(grp_Load_and_Compute_fu_320_m_axi_IN1_AWCACHE),
    .m_axi_IN1_AWPROT(grp_Load_and_Compute_fu_320_m_axi_IN1_AWPROT),
    .m_axi_IN1_AWQOS(grp_Load_and_Compute_fu_320_m_axi_IN1_AWQOS),
    .m_axi_IN1_AWREGION(grp_Load_and_Compute_fu_320_m_axi_IN1_AWREGION),
    .m_axi_IN1_AWUSER(grp_Load_and_Compute_fu_320_m_axi_IN1_AWUSER),
    .m_axi_IN1_WVALID(grp_Load_and_Compute_fu_320_m_axi_IN1_WVALID),
    .m_axi_IN1_WREADY(1'b0),
    .m_axi_IN1_WDATA(grp_Load_and_Compute_fu_320_m_axi_IN1_WDATA),
    .m_axi_IN1_WSTRB(grp_Load_and_Compute_fu_320_m_axi_IN1_WSTRB),
    .m_axi_IN1_WLAST(grp_Load_and_Compute_fu_320_m_axi_IN1_WLAST),
    .m_axi_IN1_WID(grp_Load_and_Compute_fu_320_m_axi_IN1_WID),
    .m_axi_IN1_WUSER(grp_Load_and_Compute_fu_320_m_axi_IN1_WUSER),
    .m_axi_IN1_ARVALID(grp_Load_and_Compute_fu_320_m_axi_IN1_ARVALID),
    .m_axi_IN1_ARREADY(IN1_ARREADY),
    .m_axi_IN1_ARADDR(grp_Load_and_Compute_fu_320_m_axi_IN1_ARADDR),
    .m_axi_IN1_ARID(grp_Load_and_Compute_fu_320_m_axi_IN1_ARID),
    .m_axi_IN1_ARLEN(grp_Load_and_Compute_fu_320_m_axi_IN1_ARLEN),
    .m_axi_IN1_ARSIZE(grp_Load_and_Compute_fu_320_m_axi_IN1_ARSIZE),
    .m_axi_IN1_ARBURST(grp_Load_and_Compute_fu_320_m_axi_IN1_ARBURST),
    .m_axi_IN1_ARLOCK(grp_Load_and_Compute_fu_320_m_axi_IN1_ARLOCK),
    .m_axi_IN1_ARCACHE(grp_Load_and_Compute_fu_320_m_axi_IN1_ARCACHE),
    .m_axi_IN1_ARPROT(grp_Load_and_Compute_fu_320_m_axi_IN1_ARPROT),
    .m_axi_IN1_ARQOS(grp_Load_and_Compute_fu_320_m_axi_IN1_ARQOS),
    .m_axi_IN1_ARREGION(grp_Load_and_Compute_fu_320_m_axi_IN1_ARREGION),
    .m_axi_IN1_ARUSER(grp_Load_and_Compute_fu_320_m_axi_IN1_ARUSER),
    .m_axi_IN1_RVALID(IN1_RVALID),
    .m_axi_IN1_RREADY(grp_Load_and_Compute_fu_320_m_axi_IN1_RREADY),
    .m_axi_IN1_RDATA(IN1_RDATA),
    .m_axi_IN1_RLAST(1'b0),
    .m_axi_IN1_RID(1'd0),
    .m_axi_IN1_RFIFONUM(IN1_RFIFONUM),
    .m_axi_IN1_RUSER(1'd0),
    .m_axi_IN1_RRESP(2'd0),
    .m_axi_IN1_BVALID(1'b0),
    .m_axi_IN1_BREADY(grp_Load_and_Compute_fu_320_m_axi_IN1_BREADY),
    .m_axi_IN1_BRESP(2'd0),
    .m_axi_IN1_BID(1'd0),
    .m_axi_IN1_BUSER(1'd0),
    .feature_in(feature_in_read_reg_1203),
    .m_axi_W1_AWVALID(grp_Load_and_Compute_fu_320_m_axi_W1_AWVALID),
    .m_axi_W1_AWREADY(1'b0),
    .m_axi_W1_AWADDR(grp_Load_and_Compute_fu_320_m_axi_W1_AWADDR),
    .m_axi_W1_AWID(grp_Load_and_Compute_fu_320_m_axi_W1_AWID),
    .m_axi_W1_AWLEN(grp_Load_and_Compute_fu_320_m_axi_W1_AWLEN),
    .m_axi_W1_AWSIZE(grp_Load_and_Compute_fu_320_m_axi_W1_AWSIZE),
    .m_axi_W1_AWBURST(grp_Load_and_Compute_fu_320_m_axi_W1_AWBURST),
    .m_axi_W1_AWLOCK(grp_Load_and_Compute_fu_320_m_axi_W1_AWLOCK),
    .m_axi_W1_AWCACHE(grp_Load_and_Compute_fu_320_m_axi_W1_AWCACHE),
    .m_axi_W1_AWPROT(grp_Load_and_Compute_fu_320_m_axi_W1_AWPROT),
    .m_axi_W1_AWQOS(grp_Load_and_Compute_fu_320_m_axi_W1_AWQOS),
    .m_axi_W1_AWREGION(grp_Load_and_Compute_fu_320_m_axi_W1_AWREGION),
    .m_axi_W1_AWUSER(grp_Load_and_Compute_fu_320_m_axi_W1_AWUSER),
    .m_axi_W1_WVALID(grp_Load_and_Compute_fu_320_m_axi_W1_WVALID),
    .m_axi_W1_WREADY(1'b0),
    .m_axi_W1_WDATA(grp_Load_and_Compute_fu_320_m_axi_W1_WDATA),
    .m_axi_W1_WSTRB(grp_Load_and_Compute_fu_320_m_axi_W1_WSTRB),
    .m_axi_W1_WLAST(grp_Load_and_Compute_fu_320_m_axi_W1_WLAST),
    .m_axi_W1_WID(grp_Load_and_Compute_fu_320_m_axi_W1_WID),
    .m_axi_W1_WUSER(grp_Load_and_Compute_fu_320_m_axi_W1_WUSER),
    .m_axi_W1_ARVALID(grp_Load_and_Compute_fu_320_m_axi_W1_ARVALID),
    .m_axi_W1_ARREADY(W1_ARREADY),
    .m_axi_W1_ARADDR(grp_Load_and_Compute_fu_320_m_axi_W1_ARADDR),
    .m_axi_W1_ARID(grp_Load_and_Compute_fu_320_m_axi_W1_ARID),
    .m_axi_W1_ARLEN(grp_Load_and_Compute_fu_320_m_axi_W1_ARLEN),
    .m_axi_W1_ARSIZE(grp_Load_and_Compute_fu_320_m_axi_W1_ARSIZE),
    .m_axi_W1_ARBURST(grp_Load_and_Compute_fu_320_m_axi_W1_ARBURST),
    .m_axi_W1_ARLOCK(grp_Load_and_Compute_fu_320_m_axi_W1_ARLOCK),
    .m_axi_W1_ARCACHE(grp_Load_and_Compute_fu_320_m_axi_W1_ARCACHE),
    .m_axi_W1_ARPROT(grp_Load_and_Compute_fu_320_m_axi_W1_ARPROT),
    .m_axi_W1_ARQOS(grp_Load_and_Compute_fu_320_m_axi_W1_ARQOS),
    .m_axi_W1_ARREGION(grp_Load_and_Compute_fu_320_m_axi_W1_ARREGION),
    .m_axi_W1_ARUSER(grp_Load_and_Compute_fu_320_m_axi_W1_ARUSER),
    .m_axi_W1_RVALID(W1_RVALID),
    .m_axi_W1_RREADY(grp_Load_and_Compute_fu_320_m_axi_W1_RREADY),
    .m_axi_W1_RDATA(W1_RDATA),
    .m_axi_W1_RLAST(1'b0),
    .m_axi_W1_RID(1'd0),
    .m_axi_W1_RFIFONUM(W1_RFIFONUM),
    .m_axi_W1_RUSER(1'd0),
    .m_axi_W1_RRESP(2'd0),
    .m_axi_W1_BVALID(1'b0),
    .m_axi_W1_BREADY(grp_Load_and_Compute_fu_320_m_axi_W1_BREADY),
    .m_axi_W1_BRESP(2'd0),
    .m_axi_W1_BID(1'd0),
    .m_axi_W1_BUSER(1'd0),
    .Weight1(Weight1_read_reg_1198),
    .m_axi_W2_AWVALID(grp_Load_and_Compute_fu_320_m_axi_W2_AWVALID),
    .m_axi_W2_AWREADY(1'b0),
    .m_axi_W2_AWADDR(grp_Load_and_Compute_fu_320_m_axi_W2_AWADDR),
    .m_axi_W2_AWID(grp_Load_and_Compute_fu_320_m_axi_W2_AWID),
    .m_axi_W2_AWLEN(grp_Load_and_Compute_fu_320_m_axi_W2_AWLEN),
    .m_axi_W2_AWSIZE(grp_Load_and_Compute_fu_320_m_axi_W2_AWSIZE),
    .m_axi_W2_AWBURST(grp_Load_and_Compute_fu_320_m_axi_W2_AWBURST),
    .m_axi_W2_AWLOCK(grp_Load_and_Compute_fu_320_m_axi_W2_AWLOCK),
    .m_axi_W2_AWCACHE(grp_Load_and_Compute_fu_320_m_axi_W2_AWCACHE),
    .m_axi_W2_AWPROT(grp_Load_and_Compute_fu_320_m_axi_W2_AWPROT),
    .m_axi_W2_AWQOS(grp_Load_and_Compute_fu_320_m_axi_W2_AWQOS),
    .m_axi_W2_AWREGION(grp_Load_and_Compute_fu_320_m_axi_W2_AWREGION),
    .m_axi_W2_AWUSER(grp_Load_and_Compute_fu_320_m_axi_W2_AWUSER),
    .m_axi_W2_WVALID(grp_Load_and_Compute_fu_320_m_axi_W2_WVALID),
    .m_axi_W2_WREADY(1'b0),
    .m_axi_W2_WDATA(grp_Load_and_Compute_fu_320_m_axi_W2_WDATA),
    .m_axi_W2_WSTRB(grp_Load_and_Compute_fu_320_m_axi_W2_WSTRB),
    .m_axi_W2_WLAST(grp_Load_and_Compute_fu_320_m_axi_W2_WLAST),
    .m_axi_W2_WID(grp_Load_and_Compute_fu_320_m_axi_W2_WID),
    .m_axi_W2_WUSER(grp_Load_and_Compute_fu_320_m_axi_W2_WUSER),
    .m_axi_W2_ARVALID(grp_Load_and_Compute_fu_320_m_axi_W2_ARVALID),
    .m_axi_W2_ARREADY(W2_ARREADY),
    .m_axi_W2_ARADDR(grp_Load_and_Compute_fu_320_m_axi_W2_ARADDR),
    .m_axi_W2_ARID(grp_Load_and_Compute_fu_320_m_axi_W2_ARID),
    .m_axi_W2_ARLEN(grp_Load_and_Compute_fu_320_m_axi_W2_ARLEN),
    .m_axi_W2_ARSIZE(grp_Load_and_Compute_fu_320_m_axi_W2_ARSIZE),
    .m_axi_W2_ARBURST(grp_Load_and_Compute_fu_320_m_axi_W2_ARBURST),
    .m_axi_W2_ARLOCK(grp_Load_and_Compute_fu_320_m_axi_W2_ARLOCK),
    .m_axi_W2_ARCACHE(grp_Load_and_Compute_fu_320_m_axi_W2_ARCACHE),
    .m_axi_W2_ARPROT(grp_Load_and_Compute_fu_320_m_axi_W2_ARPROT),
    .m_axi_W2_ARQOS(grp_Load_and_Compute_fu_320_m_axi_W2_ARQOS),
    .m_axi_W2_ARREGION(grp_Load_and_Compute_fu_320_m_axi_W2_ARREGION),
    .m_axi_W2_ARUSER(grp_Load_and_Compute_fu_320_m_axi_W2_ARUSER),
    .m_axi_W2_RVALID(W2_RVALID),
    .m_axi_W2_RREADY(grp_Load_and_Compute_fu_320_m_axi_W2_RREADY),
    .m_axi_W2_RDATA(W2_RDATA),
    .m_axi_W2_RLAST(1'b0),
    .m_axi_W2_RID(1'd0),
    .m_axi_W2_RFIFONUM(W2_RFIFONUM),
    .m_axi_W2_RUSER(1'd0),
    .m_axi_W2_RRESP(2'd0),
    .m_axi_W2_BVALID(1'b0),
    .m_axi_W2_BREADY(grp_Load_and_Compute_fu_320_m_axi_W2_BREADY),
    .m_axi_W2_BRESP(2'd0),
    .m_axi_W2_BID(1'd0),
    .m_axi_W2_BUSER(1'd0),
    .Weight2(Weight2_read_reg_1193),
    .m_axi_W3_AWVALID(grp_Load_and_Compute_fu_320_m_axi_W3_AWVALID),
    .m_axi_W3_AWREADY(1'b0),
    .m_axi_W3_AWADDR(grp_Load_and_Compute_fu_320_m_axi_W3_AWADDR),
    .m_axi_W3_AWID(grp_Load_and_Compute_fu_320_m_axi_W3_AWID),
    .m_axi_W3_AWLEN(grp_Load_and_Compute_fu_320_m_axi_W3_AWLEN),
    .m_axi_W3_AWSIZE(grp_Load_and_Compute_fu_320_m_axi_W3_AWSIZE),
    .m_axi_W3_AWBURST(grp_Load_and_Compute_fu_320_m_axi_W3_AWBURST),
    .m_axi_W3_AWLOCK(grp_Load_and_Compute_fu_320_m_axi_W3_AWLOCK),
    .m_axi_W3_AWCACHE(grp_Load_and_Compute_fu_320_m_axi_W3_AWCACHE),
    .m_axi_W3_AWPROT(grp_Load_and_Compute_fu_320_m_axi_W3_AWPROT),
    .m_axi_W3_AWQOS(grp_Load_and_Compute_fu_320_m_axi_W3_AWQOS),
    .m_axi_W3_AWREGION(grp_Load_and_Compute_fu_320_m_axi_W3_AWREGION),
    .m_axi_W3_AWUSER(grp_Load_and_Compute_fu_320_m_axi_W3_AWUSER),
    .m_axi_W3_WVALID(grp_Load_and_Compute_fu_320_m_axi_W3_WVALID),
    .m_axi_W3_WREADY(1'b0),
    .m_axi_W3_WDATA(grp_Load_and_Compute_fu_320_m_axi_W3_WDATA),
    .m_axi_W3_WSTRB(grp_Load_and_Compute_fu_320_m_axi_W3_WSTRB),
    .m_axi_W3_WLAST(grp_Load_and_Compute_fu_320_m_axi_W3_WLAST),
    .m_axi_W3_WID(grp_Load_and_Compute_fu_320_m_axi_W3_WID),
    .m_axi_W3_WUSER(grp_Load_and_Compute_fu_320_m_axi_W3_WUSER),
    .m_axi_W3_ARVALID(grp_Load_and_Compute_fu_320_m_axi_W3_ARVALID),
    .m_axi_W3_ARREADY(W3_ARREADY),
    .m_axi_W3_ARADDR(grp_Load_and_Compute_fu_320_m_axi_W3_ARADDR),
    .m_axi_W3_ARID(grp_Load_and_Compute_fu_320_m_axi_W3_ARID),
    .m_axi_W3_ARLEN(grp_Load_and_Compute_fu_320_m_axi_W3_ARLEN),
    .m_axi_W3_ARSIZE(grp_Load_and_Compute_fu_320_m_axi_W3_ARSIZE),
    .m_axi_W3_ARBURST(grp_Load_and_Compute_fu_320_m_axi_W3_ARBURST),
    .m_axi_W3_ARLOCK(grp_Load_and_Compute_fu_320_m_axi_W3_ARLOCK),
    .m_axi_W3_ARCACHE(grp_Load_and_Compute_fu_320_m_axi_W3_ARCACHE),
    .m_axi_W3_ARPROT(grp_Load_and_Compute_fu_320_m_axi_W3_ARPROT),
    .m_axi_W3_ARQOS(grp_Load_and_Compute_fu_320_m_axi_W3_ARQOS),
    .m_axi_W3_ARREGION(grp_Load_and_Compute_fu_320_m_axi_W3_ARREGION),
    .m_axi_W3_ARUSER(grp_Load_and_Compute_fu_320_m_axi_W3_ARUSER),
    .m_axi_W3_RVALID(W3_RVALID),
    .m_axi_W3_RREADY(grp_Load_and_Compute_fu_320_m_axi_W3_RREADY),
    .m_axi_W3_RDATA(W3_RDATA),
    .m_axi_W3_RLAST(1'b0),
    .m_axi_W3_RID(1'd0),
    .m_axi_W3_RFIFONUM(W3_RFIFONUM),
    .m_axi_W3_RUSER(1'd0),
    .m_axi_W3_RRESP(2'd0),
    .m_axi_W3_BVALID(1'b0),
    .m_axi_W3_BREADY(grp_Load_and_Compute_fu_320_m_axi_W3_BREADY),
    .m_axi_W3_BRESP(2'd0),
    .m_axi_W3_BID(1'd0),
    .m_axi_W3_BUSER(1'd0),
    .Weight3(Weight3_read_reg_1188),
    .m_axi_W4_AWVALID(grp_Load_and_Compute_fu_320_m_axi_W4_AWVALID),
    .m_axi_W4_AWREADY(1'b0),
    .m_axi_W4_AWADDR(grp_Load_and_Compute_fu_320_m_axi_W4_AWADDR),
    .m_axi_W4_AWID(grp_Load_and_Compute_fu_320_m_axi_W4_AWID),
    .m_axi_W4_AWLEN(grp_Load_and_Compute_fu_320_m_axi_W4_AWLEN),
    .m_axi_W4_AWSIZE(grp_Load_and_Compute_fu_320_m_axi_W4_AWSIZE),
    .m_axi_W4_AWBURST(grp_Load_and_Compute_fu_320_m_axi_W4_AWBURST),
    .m_axi_W4_AWLOCK(grp_Load_and_Compute_fu_320_m_axi_W4_AWLOCK),
    .m_axi_W4_AWCACHE(grp_Load_and_Compute_fu_320_m_axi_W4_AWCACHE),
    .m_axi_W4_AWPROT(grp_Load_and_Compute_fu_320_m_axi_W4_AWPROT),
    .m_axi_W4_AWQOS(grp_Load_and_Compute_fu_320_m_axi_W4_AWQOS),
    .m_axi_W4_AWREGION(grp_Load_and_Compute_fu_320_m_axi_W4_AWREGION),
    .m_axi_W4_AWUSER(grp_Load_and_Compute_fu_320_m_axi_W4_AWUSER),
    .m_axi_W4_WVALID(grp_Load_and_Compute_fu_320_m_axi_W4_WVALID),
    .m_axi_W4_WREADY(1'b0),
    .m_axi_W4_WDATA(grp_Load_and_Compute_fu_320_m_axi_W4_WDATA),
    .m_axi_W4_WSTRB(grp_Load_and_Compute_fu_320_m_axi_W4_WSTRB),
    .m_axi_W4_WLAST(grp_Load_and_Compute_fu_320_m_axi_W4_WLAST),
    .m_axi_W4_WID(grp_Load_and_Compute_fu_320_m_axi_W4_WID),
    .m_axi_W4_WUSER(grp_Load_and_Compute_fu_320_m_axi_W4_WUSER),
    .m_axi_W4_ARVALID(grp_Load_and_Compute_fu_320_m_axi_W4_ARVALID),
    .m_axi_W4_ARREADY(W4_ARREADY),
    .m_axi_W4_ARADDR(grp_Load_and_Compute_fu_320_m_axi_W4_ARADDR),
    .m_axi_W4_ARID(grp_Load_and_Compute_fu_320_m_axi_W4_ARID),
    .m_axi_W4_ARLEN(grp_Load_and_Compute_fu_320_m_axi_W4_ARLEN),
    .m_axi_W4_ARSIZE(grp_Load_and_Compute_fu_320_m_axi_W4_ARSIZE),
    .m_axi_W4_ARBURST(grp_Load_and_Compute_fu_320_m_axi_W4_ARBURST),
    .m_axi_W4_ARLOCK(grp_Load_and_Compute_fu_320_m_axi_W4_ARLOCK),
    .m_axi_W4_ARCACHE(grp_Load_and_Compute_fu_320_m_axi_W4_ARCACHE),
    .m_axi_W4_ARPROT(grp_Load_and_Compute_fu_320_m_axi_W4_ARPROT),
    .m_axi_W4_ARQOS(grp_Load_and_Compute_fu_320_m_axi_W4_ARQOS),
    .m_axi_W4_ARREGION(grp_Load_and_Compute_fu_320_m_axi_W4_ARREGION),
    .m_axi_W4_ARUSER(grp_Load_and_Compute_fu_320_m_axi_W4_ARUSER),
    .m_axi_W4_RVALID(W4_RVALID),
    .m_axi_W4_RREADY(grp_Load_and_Compute_fu_320_m_axi_W4_RREADY),
    .m_axi_W4_RDATA(W4_RDATA),
    .m_axi_W4_RLAST(1'b0),
    .m_axi_W4_RID(1'd0),
    .m_axi_W4_RFIFONUM(W4_RFIFONUM),
    .m_axi_W4_RUSER(1'd0),
    .m_axi_W4_RRESP(2'd0),
    .m_axi_W4_BVALID(1'b0),
    .m_axi_W4_BREADY(grp_Load_and_Compute_fu_320_m_axi_W4_BREADY),
    .m_axi_W4_BRESP(2'd0),
    .m_axi_W4_BID(1'd0),
    .m_axi_W4_BUSER(1'd0),
    .Weight4(Weight4_read_reg_1183),
    .m_axi_B1_AWVALID(grp_Load_and_Compute_fu_320_m_axi_B1_AWVALID),
    .m_axi_B1_AWREADY(1'b0),
    .m_axi_B1_AWADDR(grp_Load_and_Compute_fu_320_m_axi_B1_AWADDR),
    .m_axi_B1_AWID(grp_Load_and_Compute_fu_320_m_axi_B1_AWID),
    .m_axi_B1_AWLEN(grp_Load_and_Compute_fu_320_m_axi_B1_AWLEN),
    .m_axi_B1_AWSIZE(grp_Load_and_Compute_fu_320_m_axi_B1_AWSIZE),
    .m_axi_B1_AWBURST(grp_Load_and_Compute_fu_320_m_axi_B1_AWBURST),
    .m_axi_B1_AWLOCK(grp_Load_and_Compute_fu_320_m_axi_B1_AWLOCK),
    .m_axi_B1_AWCACHE(grp_Load_and_Compute_fu_320_m_axi_B1_AWCACHE),
    .m_axi_B1_AWPROT(grp_Load_and_Compute_fu_320_m_axi_B1_AWPROT),
    .m_axi_B1_AWQOS(grp_Load_and_Compute_fu_320_m_axi_B1_AWQOS),
    .m_axi_B1_AWREGION(grp_Load_and_Compute_fu_320_m_axi_B1_AWREGION),
    .m_axi_B1_AWUSER(grp_Load_and_Compute_fu_320_m_axi_B1_AWUSER),
    .m_axi_B1_WVALID(grp_Load_and_Compute_fu_320_m_axi_B1_WVALID),
    .m_axi_B1_WREADY(1'b0),
    .m_axi_B1_WDATA(grp_Load_and_Compute_fu_320_m_axi_B1_WDATA),
    .m_axi_B1_WSTRB(grp_Load_and_Compute_fu_320_m_axi_B1_WSTRB),
    .m_axi_B1_WLAST(grp_Load_and_Compute_fu_320_m_axi_B1_WLAST),
    .m_axi_B1_WID(grp_Load_and_Compute_fu_320_m_axi_B1_WID),
    .m_axi_B1_WUSER(grp_Load_and_Compute_fu_320_m_axi_B1_WUSER),
    .m_axi_B1_ARVALID(grp_Load_and_Compute_fu_320_m_axi_B1_ARVALID),
    .m_axi_B1_ARREADY(B1_ARREADY),
    .m_axi_B1_ARADDR(grp_Load_and_Compute_fu_320_m_axi_B1_ARADDR),
    .m_axi_B1_ARID(grp_Load_and_Compute_fu_320_m_axi_B1_ARID),
    .m_axi_B1_ARLEN(grp_Load_and_Compute_fu_320_m_axi_B1_ARLEN),
    .m_axi_B1_ARSIZE(grp_Load_and_Compute_fu_320_m_axi_B1_ARSIZE),
    .m_axi_B1_ARBURST(grp_Load_and_Compute_fu_320_m_axi_B1_ARBURST),
    .m_axi_B1_ARLOCK(grp_Load_and_Compute_fu_320_m_axi_B1_ARLOCK),
    .m_axi_B1_ARCACHE(grp_Load_and_Compute_fu_320_m_axi_B1_ARCACHE),
    .m_axi_B1_ARPROT(grp_Load_and_Compute_fu_320_m_axi_B1_ARPROT),
    .m_axi_B1_ARQOS(grp_Load_and_Compute_fu_320_m_axi_B1_ARQOS),
    .m_axi_B1_ARREGION(grp_Load_and_Compute_fu_320_m_axi_B1_ARREGION),
    .m_axi_B1_ARUSER(grp_Load_and_Compute_fu_320_m_axi_B1_ARUSER),
    .m_axi_B1_RVALID(B1_RVALID),
    .m_axi_B1_RREADY(grp_Load_and_Compute_fu_320_m_axi_B1_RREADY),
    .m_axi_B1_RDATA(B1_RDATA),
    .m_axi_B1_RLAST(1'b0),
    .m_axi_B1_RID(1'd0),
    .m_axi_B1_RFIFONUM(B1_RFIFONUM),
    .m_axi_B1_RUSER(1'd0),
    .m_axi_B1_RRESP(2'd0),
    .m_axi_B1_BVALID(1'b0),
    .m_axi_B1_BREADY(grp_Load_and_Compute_fu_320_m_axi_B1_BREADY),
    .m_axi_B1_BRESP(2'd0),
    .m_axi_B1_BID(1'd0),
    .m_axi_B1_BUSER(1'd0),
    .bias(bias_read_reg_1178),
    .output_buffer_address0(grp_Load_and_Compute_fu_320_output_buffer_address0),
    .output_buffer_ce0(grp_Load_and_Compute_fu_320_output_buffer_ce0),
    .output_buffer_q0(grp_Load_and_Compute_fu_320_output_buffer_q0),
    .output_buffer_address1(grp_Load_and_Compute_fu_320_output_buffer_address1),
    .output_buffer_ce1(grp_Load_and_Compute_fu_320_output_buffer_ce1),
    .output_buffer_we1(grp_Load_and_Compute_fu_320_output_buffer_we1),
    .output_buffer_d1(grp_Load_and_Compute_fu_320_output_buffer_d1),
    .Out_LP_now(grp_Load_and_Compute_fu_320_Out_LP_now),
    .Input_Loops(result_V_7_reg_1380),
    .CHin(CHin_read_reg_1218)
);

Dense_Write_Output grp_Write_Output_fu_359(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Write_Output_fu_359_ap_start),
    .ap_done(grp_Write_Output_fu_359_ap_done),
    .ap_idle(grp_Write_Output_fu_359_ap_idle),
    .ap_ready(grp_Write_Output_fu_359_ap_ready),
    .m_axi_OUT1_AWVALID(grp_Write_Output_fu_359_m_axi_OUT1_AWVALID),
    .m_axi_OUT1_AWREADY(OUT1_AWREADY),
    .m_axi_OUT1_AWADDR(grp_Write_Output_fu_359_m_axi_OUT1_AWADDR),
    .m_axi_OUT1_AWID(grp_Write_Output_fu_359_m_axi_OUT1_AWID),
    .m_axi_OUT1_AWLEN(grp_Write_Output_fu_359_m_axi_OUT1_AWLEN),
    .m_axi_OUT1_AWSIZE(grp_Write_Output_fu_359_m_axi_OUT1_AWSIZE),
    .m_axi_OUT1_AWBURST(grp_Write_Output_fu_359_m_axi_OUT1_AWBURST),
    .m_axi_OUT1_AWLOCK(grp_Write_Output_fu_359_m_axi_OUT1_AWLOCK),
    .m_axi_OUT1_AWCACHE(grp_Write_Output_fu_359_m_axi_OUT1_AWCACHE),
    .m_axi_OUT1_AWPROT(grp_Write_Output_fu_359_m_axi_OUT1_AWPROT),
    .m_axi_OUT1_AWQOS(grp_Write_Output_fu_359_m_axi_OUT1_AWQOS),
    .m_axi_OUT1_AWREGION(grp_Write_Output_fu_359_m_axi_OUT1_AWREGION),
    .m_axi_OUT1_AWUSER(grp_Write_Output_fu_359_m_axi_OUT1_AWUSER),
    .m_axi_OUT1_WVALID(grp_Write_Output_fu_359_m_axi_OUT1_WVALID),
    .m_axi_OUT1_WREADY(OUT1_WREADY),
    .m_axi_OUT1_WDATA(grp_Write_Output_fu_359_m_axi_OUT1_WDATA),
    .m_axi_OUT1_WSTRB(grp_Write_Output_fu_359_m_axi_OUT1_WSTRB),
    .m_axi_OUT1_WLAST(grp_Write_Output_fu_359_m_axi_OUT1_WLAST),
    .m_axi_OUT1_WID(grp_Write_Output_fu_359_m_axi_OUT1_WID),
    .m_axi_OUT1_WUSER(grp_Write_Output_fu_359_m_axi_OUT1_WUSER),
    .m_axi_OUT1_ARVALID(grp_Write_Output_fu_359_m_axi_OUT1_ARVALID),
    .m_axi_OUT1_ARREADY(1'b0),
    .m_axi_OUT1_ARADDR(grp_Write_Output_fu_359_m_axi_OUT1_ARADDR),
    .m_axi_OUT1_ARID(grp_Write_Output_fu_359_m_axi_OUT1_ARID),
    .m_axi_OUT1_ARLEN(grp_Write_Output_fu_359_m_axi_OUT1_ARLEN),
    .m_axi_OUT1_ARSIZE(grp_Write_Output_fu_359_m_axi_OUT1_ARSIZE),
    .m_axi_OUT1_ARBURST(grp_Write_Output_fu_359_m_axi_OUT1_ARBURST),
    .m_axi_OUT1_ARLOCK(grp_Write_Output_fu_359_m_axi_OUT1_ARLOCK),
    .m_axi_OUT1_ARCACHE(grp_Write_Output_fu_359_m_axi_OUT1_ARCACHE),
    .m_axi_OUT1_ARPROT(grp_Write_Output_fu_359_m_axi_OUT1_ARPROT),
    .m_axi_OUT1_ARQOS(grp_Write_Output_fu_359_m_axi_OUT1_ARQOS),
    .m_axi_OUT1_ARREGION(grp_Write_Output_fu_359_m_axi_OUT1_ARREGION),
    .m_axi_OUT1_ARUSER(grp_Write_Output_fu_359_m_axi_OUT1_ARUSER),
    .m_axi_OUT1_RVALID(1'b0),
    .m_axi_OUT1_RREADY(grp_Write_Output_fu_359_m_axi_OUT1_RREADY),
    .m_axi_OUT1_RDATA(16'd0),
    .m_axi_OUT1_RLAST(1'b0),
    .m_axi_OUT1_RID(1'd0),
    .m_axi_OUT1_RFIFONUM(11'd0),
    .m_axi_OUT1_RUSER(1'd0),
    .m_axi_OUT1_RRESP(2'd0),
    .m_axi_OUT1_BVALID(OUT1_BVALID),
    .m_axi_OUT1_BREADY(grp_Write_Output_fu_359_m_axi_OUT1_BREADY),
    .m_axi_OUT1_BRESP(2'd0),
    .m_axi_OUT1_BID(1'd0),
    .m_axi_OUT1_BUSER(1'd0),
    .feature_out(feature_out_read_reg_1173),
    .output_buffer_address0(grp_Write_Output_fu_359_output_buffer_address0),
    .output_buffer_ce0(grp_Write_Output_fu_359_output_buffer_ce0),
    .output_buffer_q0(grp_Write_Output_fu_359_output_buffer_q0),
    .output_buffer_address1(grp_Write_Output_fu_359_output_buffer_address1),
    .output_buffer_ce1(grp_Write_Output_fu_359_output_buffer_ce1),
    .output_buffer_we1(grp_Write_Output_fu_359_output_buffer_we1),
    .output_buffer_d1(grp_Write_Output_fu_359_output_buffer_d1),
    .Out_LP_now(grp_Write_Output_fu_359_Out_LP_now),
    .relu_en(relu_en_read_reg_1208)
);

Dense_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .CHin(CHin),
    .CHout(CHout),
    .relu_en(relu_en),
    .feature_in(feature_in),
    .Weight1(Weight1),
    .Weight2(Weight2),
    .Weight3(Weight3),
    .Weight4(Weight4),
    .bias(bias),
    .feature_out(feature_out),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Dense_B1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 28 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 11 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_B1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_B1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_B1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_B1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_B1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_B1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_B1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_B1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_B1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_B1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_B1_CACHE_VALUE ),
    .USER_DW( 16 ),
    .USER_AW( 64 ))
B1_m_axi_U(
    .AWVALID(m_axi_B1_AWVALID),
    .AWREADY(m_axi_B1_AWREADY),
    .AWADDR(m_axi_B1_AWADDR),
    .AWID(m_axi_B1_AWID),
    .AWLEN(m_axi_B1_AWLEN),
    .AWSIZE(m_axi_B1_AWSIZE),
    .AWBURST(m_axi_B1_AWBURST),
    .AWLOCK(m_axi_B1_AWLOCK),
    .AWCACHE(m_axi_B1_AWCACHE),
    .AWPROT(m_axi_B1_AWPROT),
    .AWQOS(m_axi_B1_AWQOS),
    .AWREGION(m_axi_B1_AWREGION),
    .AWUSER(m_axi_B1_AWUSER),
    .WVALID(m_axi_B1_WVALID),
    .WREADY(m_axi_B1_WREADY),
    .WDATA(m_axi_B1_WDATA),
    .WSTRB(m_axi_B1_WSTRB),
    .WLAST(m_axi_B1_WLAST),
    .WID(m_axi_B1_WID),
    .WUSER(m_axi_B1_WUSER),
    .ARVALID(m_axi_B1_ARVALID),
    .ARREADY(m_axi_B1_ARREADY),
    .ARADDR(m_axi_B1_ARADDR),
    .ARID(m_axi_B1_ARID),
    .ARLEN(m_axi_B1_ARLEN),
    .ARSIZE(m_axi_B1_ARSIZE),
    .ARBURST(m_axi_B1_ARBURST),
    .ARLOCK(m_axi_B1_ARLOCK),
    .ARCACHE(m_axi_B1_ARCACHE),
    .ARPROT(m_axi_B1_ARPROT),
    .ARQOS(m_axi_B1_ARQOS),
    .ARREGION(m_axi_B1_ARREGION),
    .ARUSER(m_axi_B1_ARUSER),
    .RVALID(m_axi_B1_RVALID),
    .RREADY(m_axi_B1_RREADY),
    .RDATA(m_axi_B1_RDATA),
    .RLAST(m_axi_B1_RLAST),
    .RID(m_axi_B1_RID),
    .RUSER(m_axi_B1_RUSER),
    .RRESP(m_axi_B1_RRESP),
    .BVALID(m_axi_B1_BVALID),
    .BREADY(m_axi_B1_BREADY),
    .BRESP(m_axi_B1_BRESP),
    .BID(m_axi_B1_BID),
    .BUSER(m_axi_B1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(B1_ARVALID),
    .I_ARREADY(B1_ARREADY),
    .I_ARADDR(grp_Load_and_Compute_fu_320_m_axi_B1_ARADDR),
    .I_ARLEN(grp_Load_and_Compute_fu_320_m_axi_B1_ARLEN),
    .I_RVALID(B1_RVALID),
    .I_RREADY(B1_RREADY),
    .I_RDATA(B1_RDATA),
    .I_RFIFONUM(B1_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(B1_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(B1_WREADY),
    .I_WDATA(16'd0),
    .I_WSTRB(2'd0),
    .I_BVALID(B1_BVALID),
    .I_BREADY(1'b0)
);

Dense_IN1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 28 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 11 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IN1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IN1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IN1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IN1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IN1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IN1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IN1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IN1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_IN1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IN1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IN1_CACHE_VALUE ),
    .USER_DW( 16 ),
    .USER_AW( 64 ))
IN1_m_axi_U(
    .AWVALID(m_axi_IN1_AWVALID),
    .AWREADY(m_axi_IN1_AWREADY),
    .AWADDR(m_axi_IN1_AWADDR),
    .AWID(m_axi_IN1_AWID),
    .AWLEN(m_axi_IN1_AWLEN),
    .AWSIZE(m_axi_IN1_AWSIZE),
    .AWBURST(m_axi_IN1_AWBURST),
    .AWLOCK(m_axi_IN1_AWLOCK),
    .AWCACHE(m_axi_IN1_AWCACHE),
    .AWPROT(m_axi_IN1_AWPROT),
    .AWQOS(m_axi_IN1_AWQOS),
    .AWREGION(m_axi_IN1_AWREGION),
    .AWUSER(m_axi_IN1_AWUSER),
    .WVALID(m_axi_IN1_WVALID),
    .WREADY(m_axi_IN1_WREADY),
    .WDATA(m_axi_IN1_WDATA),
    .WSTRB(m_axi_IN1_WSTRB),
    .WLAST(m_axi_IN1_WLAST),
    .WID(m_axi_IN1_WID),
    .WUSER(m_axi_IN1_WUSER),
    .ARVALID(m_axi_IN1_ARVALID),
    .ARREADY(m_axi_IN1_ARREADY),
    .ARADDR(m_axi_IN1_ARADDR),
    .ARID(m_axi_IN1_ARID),
    .ARLEN(m_axi_IN1_ARLEN),
    .ARSIZE(m_axi_IN1_ARSIZE),
    .ARBURST(m_axi_IN1_ARBURST),
    .ARLOCK(m_axi_IN1_ARLOCK),
    .ARCACHE(m_axi_IN1_ARCACHE),
    .ARPROT(m_axi_IN1_ARPROT),
    .ARQOS(m_axi_IN1_ARQOS),
    .ARREGION(m_axi_IN1_ARREGION),
    .ARUSER(m_axi_IN1_ARUSER),
    .RVALID(m_axi_IN1_RVALID),
    .RREADY(m_axi_IN1_RREADY),
    .RDATA(m_axi_IN1_RDATA),
    .RLAST(m_axi_IN1_RLAST),
    .RID(m_axi_IN1_RID),
    .RUSER(m_axi_IN1_RUSER),
    .RRESP(m_axi_IN1_RRESP),
    .BVALID(m_axi_IN1_BVALID),
    .BREADY(m_axi_IN1_BREADY),
    .BRESP(m_axi_IN1_BRESP),
    .BID(m_axi_IN1_BID),
    .BUSER(m_axi_IN1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(IN1_ARVALID),
    .I_ARREADY(IN1_ARREADY),
    .I_ARADDR(grp_Load_and_Compute_fu_320_m_axi_IN1_ARADDR),
    .I_ARLEN(grp_Load_and_Compute_fu_320_m_axi_IN1_ARLEN),
    .I_RVALID(IN1_RVALID),
    .I_RREADY(IN1_RREADY),
    .I_RDATA(IN1_RDATA),
    .I_RFIFONUM(IN1_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(IN1_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(IN1_WREADY),
    .I_WDATA(16'd0),
    .I_WSTRB(2'd0),
    .I_BVALID(IN1_BVALID),
    .I_BREADY(1'b0)
);

Dense_OUT1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 28 ),
    .NUM_WRITE_OUTSTANDING( 28 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 11 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUT1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUT1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUT1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUT1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUT1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUT1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUT1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUT1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_OUT1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUT1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUT1_CACHE_VALUE ),
    .USER_DW( 16 ),
    .USER_AW( 64 ))
OUT1_m_axi_U(
    .AWVALID(m_axi_OUT1_AWVALID),
    .AWREADY(m_axi_OUT1_AWREADY),
    .AWADDR(m_axi_OUT1_AWADDR),
    .AWID(m_axi_OUT1_AWID),
    .AWLEN(m_axi_OUT1_AWLEN),
    .AWSIZE(m_axi_OUT1_AWSIZE),
    .AWBURST(m_axi_OUT1_AWBURST),
    .AWLOCK(m_axi_OUT1_AWLOCK),
    .AWCACHE(m_axi_OUT1_AWCACHE),
    .AWPROT(m_axi_OUT1_AWPROT),
    .AWQOS(m_axi_OUT1_AWQOS),
    .AWREGION(m_axi_OUT1_AWREGION),
    .AWUSER(m_axi_OUT1_AWUSER),
    .WVALID(m_axi_OUT1_WVALID),
    .WREADY(m_axi_OUT1_WREADY),
    .WDATA(m_axi_OUT1_WDATA),
    .WSTRB(m_axi_OUT1_WSTRB),
    .WLAST(m_axi_OUT1_WLAST),
    .WID(m_axi_OUT1_WID),
    .WUSER(m_axi_OUT1_WUSER),
    .ARVALID(m_axi_OUT1_ARVALID),
    .ARREADY(m_axi_OUT1_ARREADY),
    .ARADDR(m_axi_OUT1_ARADDR),
    .ARID(m_axi_OUT1_ARID),
    .ARLEN(m_axi_OUT1_ARLEN),
    .ARSIZE(m_axi_OUT1_ARSIZE),
    .ARBURST(m_axi_OUT1_ARBURST),
    .ARLOCK(m_axi_OUT1_ARLOCK),
    .ARCACHE(m_axi_OUT1_ARCACHE),
    .ARPROT(m_axi_OUT1_ARPROT),
    .ARQOS(m_axi_OUT1_ARQOS),
    .ARREGION(m_axi_OUT1_ARREGION),
    .ARUSER(m_axi_OUT1_ARUSER),
    .RVALID(m_axi_OUT1_RVALID),
    .RREADY(m_axi_OUT1_RREADY),
    .RDATA(m_axi_OUT1_RDATA),
    .RLAST(m_axi_OUT1_RLAST),
    .RID(m_axi_OUT1_RID),
    .RUSER(m_axi_OUT1_RUSER),
    .RRESP(m_axi_OUT1_RRESP),
    .BVALID(m_axi_OUT1_BVALID),
    .BREADY(m_axi_OUT1_BREADY),
    .BRESP(m_axi_OUT1_BRESP),
    .BID(m_axi_OUT1_BID),
    .BUSER(m_axi_OUT1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(OUT1_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(OUT1_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(OUT1_RDATA),
    .I_RFIFONUM(OUT1_RFIFONUM),
    .I_AWVALID(OUT1_AWVALID),
    .I_AWREADY(OUT1_AWREADY),
    .I_AWADDR(grp_Write_Output_fu_359_m_axi_OUT1_AWADDR),
    .I_AWLEN(grp_Write_Output_fu_359_m_axi_OUT1_AWLEN),
    .I_WVALID(OUT1_WVALID),
    .I_WREADY(OUT1_WREADY),
    .I_WDATA(grp_Write_Output_fu_359_m_axi_OUT1_WDATA),
    .I_WSTRB(grp_Write_Output_fu_359_m_axi_OUT1_WSTRB),
    .I_BVALID(OUT1_BVALID),
    .I_BREADY(OUT1_BREADY)
);

Dense_W1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 28 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 11 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_W1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_W1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_W1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_W1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_W1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_W1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_W1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_W1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_W1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_W1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_W1_CACHE_VALUE ),
    .USER_DW( 16 ),
    .USER_AW( 64 ))
W1_m_axi_U(
    .AWVALID(m_axi_W1_AWVALID),
    .AWREADY(m_axi_W1_AWREADY),
    .AWADDR(m_axi_W1_AWADDR),
    .AWID(m_axi_W1_AWID),
    .AWLEN(m_axi_W1_AWLEN),
    .AWSIZE(m_axi_W1_AWSIZE),
    .AWBURST(m_axi_W1_AWBURST),
    .AWLOCK(m_axi_W1_AWLOCK),
    .AWCACHE(m_axi_W1_AWCACHE),
    .AWPROT(m_axi_W1_AWPROT),
    .AWQOS(m_axi_W1_AWQOS),
    .AWREGION(m_axi_W1_AWREGION),
    .AWUSER(m_axi_W1_AWUSER),
    .WVALID(m_axi_W1_WVALID),
    .WREADY(m_axi_W1_WREADY),
    .WDATA(m_axi_W1_WDATA),
    .WSTRB(m_axi_W1_WSTRB),
    .WLAST(m_axi_W1_WLAST),
    .WID(m_axi_W1_WID),
    .WUSER(m_axi_W1_WUSER),
    .ARVALID(m_axi_W1_ARVALID),
    .ARREADY(m_axi_W1_ARREADY),
    .ARADDR(m_axi_W1_ARADDR),
    .ARID(m_axi_W1_ARID),
    .ARLEN(m_axi_W1_ARLEN),
    .ARSIZE(m_axi_W1_ARSIZE),
    .ARBURST(m_axi_W1_ARBURST),
    .ARLOCK(m_axi_W1_ARLOCK),
    .ARCACHE(m_axi_W1_ARCACHE),
    .ARPROT(m_axi_W1_ARPROT),
    .ARQOS(m_axi_W1_ARQOS),
    .ARREGION(m_axi_W1_ARREGION),
    .ARUSER(m_axi_W1_ARUSER),
    .RVALID(m_axi_W1_RVALID),
    .RREADY(m_axi_W1_RREADY),
    .RDATA(m_axi_W1_RDATA),
    .RLAST(m_axi_W1_RLAST),
    .RID(m_axi_W1_RID),
    .RUSER(m_axi_W1_RUSER),
    .RRESP(m_axi_W1_RRESP),
    .BVALID(m_axi_W1_BVALID),
    .BREADY(m_axi_W1_BREADY),
    .BRESP(m_axi_W1_BRESP),
    .BID(m_axi_W1_BID),
    .BUSER(m_axi_W1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(W1_ARVALID),
    .I_ARREADY(W1_ARREADY),
    .I_ARADDR(grp_Load_and_Compute_fu_320_m_axi_W1_ARADDR),
    .I_ARLEN(grp_Load_and_Compute_fu_320_m_axi_W1_ARLEN),
    .I_RVALID(W1_RVALID),
    .I_RREADY(W1_RREADY),
    .I_RDATA(W1_RDATA),
    .I_RFIFONUM(W1_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(W1_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(W1_WREADY),
    .I_WDATA(16'd0),
    .I_WSTRB(2'd0),
    .I_BVALID(W1_BVALID),
    .I_BREADY(1'b0)
);

Dense_W2_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 28 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 11 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_W2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_W2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_W2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_W2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_W2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_W2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_W2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_W2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_W2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_W2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_W2_CACHE_VALUE ),
    .USER_DW( 16 ),
    .USER_AW( 64 ))
W2_m_axi_U(
    .AWVALID(m_axi_W2_AWVALID),
    .AWREADY(m_axi_W2_AWREADY),
    .AWADDR(m_axi_W2_AWADDR),
    .AWID(m_axi_W2_AWID),
    .AWLEN(m_axi_W2_AWLEN),
    .AWSIZE(m_axi_W2_AWSIZE),
    .AWBURST(m_axi_W2_AWBURST),
    .AWLOCK(m_axi_W2_AWLOCK),
    .AWCACHE(m_axi_W2_AWCACHE),
    .AWPROT(m_axi_W2_AWPROT),
    .AWQOS(m_axi_W2_AWQOS),
    .AWREGION(m_axi_W2_AWREGION),
    .AWUSER(m_axi_W2_AWUSER),
    .WVALID(m_axi_W2_WVALID),
    .WREADY(m_axi_W2_WREADY),
    .WDATA(m_axi_W2_WDATA),
    .WSTRB(m_axi_W2_WSTRB),
    .WLAST(m_axi_W2_WLAST),
    .WID(m_axi_W2_WID),
    .WUSER(m_axi_W2_WUSER),
    .ARVALID(m_axi_W2_ARVALID),
    .ARREADY(m_axi_W2_ARREADY),
    .ARADDR(m_axi_W2_ARADDR),
    .ARID(m_axi_W2_ARID),
    .ARLEN(m_axi_W2_ARLEN),
    .ARSIZE(m_axi_W2_ARSIZE),
    .ARBURST(m_axi_W2_ARBURST),
    .ARLOCK(m_axi_W2_ARLOCK),
    .ARCACHE(m_axi_W2_ARCACHE),
    .ARPROT(m_axi_W2_ARPROT),
    .ARQOS(m_axi_W2_ARQOS),
    .ARREGION(m_axi_W2_ARREGION),
    .ARUSER(m_axi_W2_ARUSER),
    .RVALID(m_axi_W2_RVALID),
    .RREADY(m_axi_W2_RREADY),
    .RDATA(m_axi_W2_RDATA),
    .RLAST(m_axi_W2_RLAST),
    .RID(m_axi_W2_RID),
    .RUSER(m_axi_W2_RUSER),
    .RRESP(m_axi_W2_RRESP),
    .BVALID(m_axi_W2_BVALID),
    .BREADY(m_axi_W2_BREADY),
    .BRESP(m_axi_W2_BRESP),
    .BID(m_axi_W2_BID),
    .BUSER(m_axi_W2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(W2_ARVALID),
    .I_ARREADY(W2_ARREADY),
    .I_ARADDR(grp_Load_and_Compute_fu_320_m_axi_W2_ARADDR),
    .I_ARLEN(grp_Load_and_Compute_fu_320_m_axi_W2_ARLEN),
    .I_RVALID(W2_RVALID),
    .I_RREADY(W2_RREADY),
    .I_RDATA(W2_RDATA),
    .I_RFIFONUM(W2_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(W2_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(W2_WREADY),
    .I_WDATA(16'd0),
    .I_WSTRB(2'd0),
    .I_BVALID(W2_BVALID),
    .I_BREADY(1'b0)
);

Dense_W3_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 28 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 11 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_W3_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_W3_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_W3_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_W3_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_W3_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_W3_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_W3_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_W3_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_W3_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_W3_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_W3_CACHE_VALUE ),
    .USER_DW( 16 ),
    .USER_AW( 64 ))
W3_m_axi_U(
    .AWVALID(m_axi_W3_AWVALID),
    .AWREADY(m_axi_W3_AWREADY),
    .AWADDR(m_axi_W3_AWADDR),
    .AWID(m_axi_W3_AWID),
    .AWLEN(m_axi_W3_AWLEN),
    .AWSIZE(m_axi_W3_AWSIZE),
    .AWBURST(m_axi_W3_AWBURST),
    .AWLOCK(m_axi_W3_AWLOCK),
    .AWCACHE(m_axi_W3_AWCACHE),
    .AWPROT(m_axi_W3_AWPROT),
    .AWQOS(m_axi_W3_AWQOS),
    .AWREGION(m_axi_W3_AWREGION),
    .AWUSER(m_axi_W3_AWUSER),
    .WVALID(m_axi_W3_WVALID),
    .WREADY(m_axi_W3_WREADY),
    .WDATA(m_axi_W3_WDATA),
    .WSTRB(m_axi_W3_WSTRB),
    .WLAST(m_axi_W3_WLAST),
    .WID(m_axi_W3_WID),
    .WUSER(m_axi_W3_WUSER),
    .ARVALID(m_axi_W3_ARVALID),
    .ARREADY(m_axi_W3_ARREADY),
    .ARADDR(m_axi_W3_ARADDR),
    .ARID(m_axi_W3_ARID),
    .ARLEN(m_axi_W3_ARLEN),
    .ARSIZE(m_axi_W3_ARSIZE),
    .ARBURST(m_axi_W3_ARBURST),
    .ARLOCK(m_axi_W3_ARLOCK),
    .ARCACHE(m_axi_W3_ARCACHE),
    .ARPROT(m_axi_W3_ARPROT),
    .ARQOS(m_axi_W3_ARQOS),
    .ARREGION(m_axi_W3_ARREGION),
    .ARUSER(m_axi_W3_ARUSER),
    .RVALID(m_axi_W3_RVALID),
    .RREADY(m_axi_W3_RREADY),
    .RDATA(m_axi_W3_RDATA),
    .RLAST(m_axi_W3_RLAST),
    .RID(m_axi_W3_RID),
    .RUSER(m_axi_W3_RUSER),
    .RRESP(m_axi_W3_RRESP),
    .BVALID(m_axi_W3_BVALID),
    .BREADY(m_axi_W3_BREADY),
    .BRESP(m_axi_W3_BRESP),
    .BID(m_axi_W3_BID),
    .BUSER(m_axi_W3_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(W3_ARVALID),
    .I_ARREADY(W3_ARREADY),
    .I_ARADDR(grp_Load_and_Compute_fu_320_m_axi_W3_ARADDR),
    .I_ARLEN(grp_Load_and_Compute_fu_320_m_axi_W3_ARLEN),
    .I_RVALID(W3_RVALID),
    .I_RREADY(W3_RREADY),
    .I_RDATA(W3_RDATA),
    .I_RFIFONUM(W3_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(W3_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(W3_WREADY),
    .I_WDATA(16'd0),
    .I_WSTRB(2'd0),
    .I_BVALID(W3_BVALID),
    .I_BREADY(1'b0)
);

Dense_W4_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 28 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 11 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_W4_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_W4_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_W4_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_W4_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_W4_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_W4_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_W4_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_W4_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_W4_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_W4_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_W4_CACHE_VALUE ),
    .USER_DW( 16 ),
    .USER_AW( 64 ))
W4_m_axi_U(
    .AWVALID(m_axi_W4_AWVALID),
    .AWREADY(m_axi_W4_AWREADY),
    .AWADDR(m_axi_W4_AWADDR),
    .AWID(m_axi_W4_AWID),
    .AWLEN(m_axi_W4_AWLEN),
    .AWSIZE(m_axi_W4_AWSIZE),
    .AWBURST(m_axi_W4_AWBURST),
    .AWLOCK(m_axi_W4_AWLOCK),
    .AWCACHE(m_axi_W4_AWCACHE),
    .AWPROT(m_axi_W4_AWPROT),
    .AWQOS(m_axi_W4_AWQOS),
    .AWREGION(m_axi_W4_AWREGION),
    .AWUSER(m_axi_W4_AWUSER),
    .WVALID(m_axi_W4_WVALID),
    .WREADY(m_axi_W4_WREADY),
    .WDATA(m_axi_W4_WDATA),
    .WSTRB(m_axi_W4_WSTRB),
    .WLAST(m_axi_W4_WLAST),
    .WID(m_axi_W4_WID),
    .WUSER(m_axi_W4_WUSER),
    .ARVALID(m_axi_W4_ARVALID),
    .ARREADY(m_axi_W4_ARREADY),
    .ARADDR(m_axi_W4_ARADDR),
    .ARID(m_axi_W4_ARID),
    .ARLEN(m_axi_W4_ARLEN),
    .ARSIZE(m_axi_W4_ARSIZE),
    .ARBURST(m_axi_W4_ARBURST),
    .ARLOCK(m_axi_W4_ARLOCK),
    .ARCACHE(m_axi_W4_ARCACHE),
    .ARPROT(m_axi_W4_ARPROT),
    .ARQOS(m_axi_W4_ARQOS),
    .ARREGION(m_axi_W4_ARREGION),
    .ARUSER(m_axi_W4_ARUSER),
    .RVALID(m_axi_W4_RVALID),
    .RREADY(m_axi_W4_RREADY),
    .RDATA(m_axi_W4_RDATA),
    .RLAST(m_axi_W4_RLAST),
    .RID(m_axi_W4_RID),
    .RUSER(m_axi_W4_RUSER),
    .RRESP(m_axi_W4_RRESP),
    .BVALID(m_axi_W4_BVALID),
    .BREADY(m_axi_W4_BREADY),
    .BRESP(m_axi_W4_BRESP),
    .BID(m_axi_W4_BID),
    .BUSER(m_axi_W4_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(W4_ARVALID),
    .I_ARREADY(W4_ARREADY),
    .I_ARADDR(grp_Load_and_Compute_fu_320_m_axi_W4_ARADDR),
    .I_ARLEN(grp_Load_and_Compute_fu_320_m_axi_W4_ARLEN),
    .I_RVALID(W4_RVALID),
    .I_RREADY(W4_RREADY),
    .I_RDATA(W4_RDATA),
    .I_RFIFONUM(W4_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(W4_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(W4_WREADY),
    .I_WDATA(16'd0),
    .I_WSTRB(2'd0),
    .I_BVALID(W4_BVALID),
    .I_BREADY(1'b0)
);

Dense_fmul_32ns_32ns_32_6_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_6_max_dsp_1_U114(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_371_p0),
    .din1(grp_fu_371_p1),
    .ce(1'b1),
    .dout(grp_fu_371_p2)
);

Dense_sitofp_32ns_32_7_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_7_no_dsp_1_U115(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_377_p0),
    .ce(1'b1),
    .dout(grp_fu_377_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Load_and_Compute_fu_320_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state20) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)))) begin
            grp_Load_and_Compute_fu_320_ap_start_reg <= 1'b1;
        end else if ((grp_Load_and_Compute_fu_320_ap_ready == 1'b1)) begin
            grp_Load_and_Compute_fu_320_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Write_Output_fu_359_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((icmp_ln241_fu_1144_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)))) begin
            grp_Write_Output_fu_359_ap_start_reg <= 1'b1;
        end else if ((grp_Write_Output_fu_359_ap_ready == 1'b1)) begin
            grp_Write_Output_fu_359_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Out_LP_now_fu_210 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state23) & (1'b0 == ap_block_state23_on_subcall_done))) begin
        Out_LP_now_fu_210 <= Out_LP_now_2_reg_1403;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (1'b0 == ap_block_state23_on_subcall_done))) begin
        pp_reg_295 <= ap_phi_mux_pp_1_phi_fu_311_p4;
    end else if (((grp_Load_and_Compute_fu_320_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        pp_reg_295 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == CHin_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == CHin_0_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == CHin_0_vld_reg) & (1'b1 == 1'b1)))) begin
        CHin_0_data_reg <= CHin;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        CHin_read_reg_1218 <= CHin_0_data_reg;
        CHout_read_reg_1213 <= CHout_0_data_reg;
        relu_en_read_reg_1208 <= relu_en_0_data_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == CHout_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == CHout_0_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == CHout_0_vld_reg) & (1'b1 == 1'b1)))) begin
        CHout_0_data_reg <= CHout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        Out_LP_now_2_reg_1403 <= Out_LP_now_2_fu_1149_p2;
        trunc_ln241_reg_1395 <= trunc_ln241_fu_1139_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        Weight1_read_reg_1198 <= Weight1;
        Weight2_read_reg_1193 <= Weight2;
        Weight3_read_reg_1188 <= Weight3;
        Weight4_read_reg_1183 <= Weight4;
        bias_read_reg_1178 <= bias;
        feature_in_read_reg_1203 <= feature_in;
        feature_out_read_reg_1173 <= feature_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln241_reg_1390 <= add_ln241_fu_1126_p2;
        sub_reg_1385 <= sub_fu_1120_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        add_ln242_reg_1408 <= add_ln242_fu_1155_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv1_reg_1224 <= grp_fu_377_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_reg_1229 <= grp_fu_377_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        data_V_3_reg_1246 <= data_V_3_fu_385_p1;
        dc_reg_1240 <= grp_fu_371_p2;
        icmp_ln21_1_reg_1267 <= icmp_ln21_1_fu_434_p2;
        p_Result_6_reg_1252 <= data_V_3_fu_385_p1[32'd31];
        trunc_ln368_1_reg_1277 <= trunc_ln368_1_fu_455_p1;
        xs_exp_V_10_reg_1260 <= {{data_V_3_fu_385_p1[30:23]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        data_V_reg_1282 <= data_V_fu_459_p1;
        icmp_ln1035_2_reg_1318 <= icmp_ln1035_2_fu_533_p2;
        icmp_ln1035_3_reg_1323 <= icmp_ln1035_3_fu_538_p2;
        icmp_ln21_reg_1303 <= icmp_ln21_fu_508_p2;
        p_Result_s_reg_1288 <= data_V_fu_459_p1[32'd31];
        select_ln1035_2_reg_1328 <= select_ln1035_2_fu_664_p3;
        trunc_ln368_reg_1313 <= trunc_ln368_fu_529_p1;
        xs_exp_V_8_reg_1296 <= {{data_V_fu_459_p1[30:23]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dc_1_reg_1353 <= dc_1_fu_837_p3;
        p_Result_10_reg_1358 <= data_V_5_fu_843_p1[32'd31];
        val_1_reg_1363 <= val_1_fu_960_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        dc_2_reg_1234 <= grp_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        dc_3_reg_1348 <= dc_3_fu_821_p3;
        icmp_ln1035_1_reg_1338 <= icmp_ln1035_1_fu_677_p2;
        icmp_ln1035_reg_1333 <= icmp_ln1035_fu_672_p2;
        select_ln1035_reg_1343 <= select_ln1035_fu_803_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        p_Result_4_reg_1369 <= data_V_2_fu_968_p1[32'd31];
        result_V_7_reg_1380 <= result_V_7_fu_1098_p3;
        val_reg_1374 <= val_fu_1085_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (relu_en_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (relu_en_0_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (relu_en_0_vld_reg == 1'b0)))) begin
        relu_en_0_data_reg <= relu_en;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        B1_ARVALID = grp_Load_and_Compute_fu_320_m_axi_B1_ARVALID;
    end else begin
        B1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        B1_RREADY = grp_Load_and_Compute_fu_320_m_axi_B1_RREADY;
    end else begin
        B1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state24) & (1'b0 == ap_block_state24_on_subcall_done)))) begin
        CHin_0_ack_out = 1'b1;
    end else begin
        CHin_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state24) & (1'b0 == ap_block_state24_on_subcall_done)))) begin
        CHout_0_ack_out = 1'b1;
    end else begin
        CHout_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        IN1_ARVALID = grp_Load_and_Compute_fu_320_m_axi_IN1_ARVALID;
    end else begin
        IN1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        IN1_RREADY = grp_Load_and_Compute_fu_320_m_axi_IN1_RREADY;
    end else begin
        IN1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd0)) | ((icmp_ln241_fu_1144_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        OUT1_AWVALID = grp_Write_Output_fu_359_m_axi_OUT1_AWVALID;
    end else begin
        OUT1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd0)) | ((icmp_ln241_fu_1144_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        OUT1_BREADY = grp_Write_Output_fu_359_m_axi_OUT1_BREADY;
    end else begin
        OUT1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd0)) | ((icmp_ln241_fu_1144_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        OUT1_WVALID = grp_Write_Output_fu_359_m_axi_OUT1_WVALID;
    end else begin
        OUT1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        W1_ARVALID = grp_Load_and_Compute_fu_320_m_axi_W1_ARVALID;
    end else begin
        W1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        W1_RREADY = grp_Load_and_Compute_fu_320_m_axi_W1_RREADY;
    end else begin
        W1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        W2_ARVALID = grp_Load_and_Compute_fu_320_m_axi_W2_ARVALID;
    end else begin
        W2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        W2_RREADY = grp_Load_and_Compute_fu_320_m_axi_W2_RREADY;
    end else begin
        W2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        W3_ARVALID = grp_Load_and_Compute_fu_320_m_axi_W3_ARVALID;
    end else begin
        W3_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        W3_RREADY = grp_Load_and_Compute_fu_320_m_axi_W3_RREADY;
    end else begin
        W3_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        W4_ARVALID = grp_Load_and_Compute_fu_320_m_axi_W4_ARVALID;
    end else begin
        W4_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd1)) | ((icmp_ln241_fu_1144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22) & (ap_phi_mux_pp_phi_fu_299_p4 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        W4_RREADY = grp_Load_and_Compute_fu_320_m_axi_W4_RREADY;
    end else begin
        W4_RREADY = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

always @ (*) begin
    if ((grp_Load_and_Compute_fu_320_ap_done == 1'b0)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

assign ap_ST_fsm_state22_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state23_on_subcall_done)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state24_on_subcall_done)) begin
        ap_ST_fsm_state24_blk = 1'b1;
    end else begin
        ap_ST_fsm_state24_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) & (1'b0 == ap_block_state24_on_subcall_done))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((pp_reg_295 == 1'd1)) begin
            ap_phi_mux_pp_1_phi_fu_311_p4 = 1'd0;
        end else if ((pp_reg_295 == 1'd0)) begin
            ap_phi_mux_pp_1_phi_fu_311_p4 = 1'd1;
        end else begin
            ap_phi_mux_pp_1_phi_fu_311_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_pp_1_phi_fu_311_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) & (1'b0 == ap_block_state24_on_subcall_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        grp_Load_and_Compute_fu_320_Out_LP_now = add_ln242_reg_1408;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_Load_and_Compute_fu_320_Out_LP_now = 27'd0;
    end else begin
        grp_Load_and_Compute_fu_320_Out_LP_now = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0))) begin
        grp_Load_and_Compute_fu_320_output_buffer_q0 = output_buffer1_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        grp_Load_and_Compute_fu_320_output_buffer_q0 = output_buffer0_V_q0;
    end else begin
        grp_Load_and_Compute_fu_320_output_buffer_q0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd0)))) begin
        grp_Write_Output_fu_359_Out_LP_now = add_ln241_reg_1390;
    end else if ((((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        grp_Write_Output_fu_359_Out_LP_now = trunc_ln241_reg_1395;
    end else begin
        grp_Write_Output_fu_359_Out_LP_now = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        grp_Write_Output_fu_359_output_buffer_q0 = output_buffer1_V_q0;
    end else if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        grp_Write_Output_fu_359_output_buffer_q0 = output_buffer0_V_q0;
    end else begin
        grp_Write_Output_fu_359_output_buffer_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_371_p0 = conv_reg_1229;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_371_p0 = conv1_reg_1224;
    end else begin
        grp_fu_371_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_371_p1 = 32'd1023410176;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_371_p1 = 32'd1006632960;
    end else begin
        grp_fu_371_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_377_p0 = CHout_read_reg_1213;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_377_p0 = CHin_read_reg_1218;
    end else begin
        grp_fu_377_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        mask_table_address0 = zext_ln541_fu_524_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        mask_table_address0 = zext_ln541_1_fu_450_p1;
    end else begin
        mask_table_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        mask_table_ce0 = 1'b1;
    end else begin
        mask_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        output_buffer0_V_address0 = grp_Write_Output_fu_359_output_buffer_address0;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        output_buffer0_V_address0 = grp_Load_and_Compute_fu_320_output_buffer_address0;
    end else begin
        output_buffer0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        output_buffer0_V_address1 = grp_Write_Output_fu_359_output_buffer_address1;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        output_buffer0_V_address1 = grp_Load_and_Compute_fu_320_output_buffer_address1;
    end else begin
        output_buffer0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        output_buffer0_V_ce0 = grp_Write_Output_fu_359_output_buffer_ce0;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        output_buffer0_V_ce0 = grp_Load_and_Compute_fu_320_output_buffer_ce0;
    end else begin
        output_buffer0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        output_buffer0_V_ce1 = grp_Write_Output_fu_359_output_buffer_ce1;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        output_buffer0_V_ce1 = grp_Load_and_Compute_fu_320_output_buffer_ce1;
    end else begin
        output_buffer0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        output_buffer0_V_d1 = grp_Write_Output_fu_359_output_buffer_d1;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        output_buffer0_V_d1 = grp_Load_and_Compute_fu_320_output_buffer_d1;
    end else begin
        output_buffer0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd0)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0)))) begin
        output_buffer0_V_we1 = grp_Write_Output_fu_359_output_buffer_we1;
    end else if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        output_buffer0_V_we1 = grp_Load_and_Compute_fu_320_output_buffer_we1;
    end else begin
        output_buffer0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        output_buffer1_V_address0 = grp_Write_Output_fu_359_output_buffer_address0;
    end else if (((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0))) begin
        output_buffer1_V_address0 = grp_Load_and_Compute_fu_320_output_buffer_address0;
    end else begin
        output_buffer1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        output_buffer1_V_address1 = grp_Write_Output_fu_359_output_buffer_address1;
    end else if (((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0))) begin
        output_buffer1_V_address1 = grp_Load_and_Compute_fu_320_output_buffer_address1;
    end else begin
        output_buffer1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        output_buffer1_V_ce0 = grp_Write_Output_fu_359_output_buffer_ce0;
    end else if (((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0))) begin
        output_buffer1_V_ce0 = grp_Load_and_Compute_fu_320_output_buffer_ce0;
    end else begin
        output_buffer1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        output_buffer1_V_ce1 = grp_Write_Output_fu_359_output_buffer_ce1;
    end else if (((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0))) begin
        output_buffer1_V_ce1 = grp_Load_and_Compute_fu_320_output_buffer_ce1;
    end else begin
        output_buffer1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        output_buffer1_V_d1 = grp_Write_Output_fu_359_output_buffer_d1;
    end else if (((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0))) begin
        output_buffer1_V_d1 = grp_Load_and_Compute_fu_320_output_buffer_d1;
    end else begin
        output_buffer1_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state24) & (pp_reg_295 == 1'd1)) | ((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd1)))) begin
        output_buffer1_V_we1 = grp_Write_Output_fu_359_output_buffer_we1;
    end else if (((1'b1 == ap_CS_fsm_state23) & (pp_reg_295 == 1'd0))) begin
        output_buffer1_V_we1 = grp_Load_and_Compute_fu_320_output_buffer_we1;
    end else begin
        output_buffer1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state24) & (1'b0 == ap_block_state24_on_subcall_done)))) begin
        relu_en_0_ack_out = 1'b1;
    end else begin
        relu_en_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_Load_and_Compute_fu_320_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln241_fu_1144_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (1'b0 == ap_block_state23_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (1'b0 == ap_block_state24_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Out_LP_now_2_fu_1149_p2 = (Out_LP_now_fu_210 + 31'd1);

assign add_ln241_fu_1126_p2 = ($signed(empty_fu_1116_p1) + $signed(27'd134217727));

assign add_ln242_fu_1155_p2 = (trunc_ln241_fu_1139_p1 + 27'd1);

assign add_ln346_1_fu_886_p2 = ($signed(zext_ln346_1_fu_882_p1) + $signed(9'd385));

assign add_ln346_fu_1011_p2 = ($signed(zext_ln346_fu_1007_p1) + $signed(9'd385));

assign and_ln1035_1_fu_816_p2 = (xor_ln1035_1_fu_811_p2 & icmp_ln1035_3_reg_1323);

assign and_ln1035_fu_832_p2 = (xor_ln1035_fu_827_p2 & icmp_ln1035_1_reg_1338);

assign and_ln21_1_fu_644_p2 = (or_ln21_3_fu_640_p2 & icmp_ln1035_2_fu_533_p2);

assign and_ln21_fu_783_p2 = (or_ln21_1_fu_779_p2 & icmp_ln1035_fu_672_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state23_on_subcall_done = (((grp_Write_Output_fu_359_ap_done == 1'b0) & (pp_reg_295 == 1'd1)) | ((grp_Write_Output_fu_359_ap_done == 1'b0) & (pp_reg_295 == 1'd0)) | ((grp_Load_and_Compute_fu_320_ap_done == 1'b0) & (pp_reg_295 == 1'd1)) | ((grp_Load_and_Compute_fu_320_ap_done == 1'b0) & (pp_reg_295 == 1'd0)));
end

always @ (*) begin
    ap_block_state24_on_subcall_done = (((grp_Write_Output_fu_359_ap_done == 1'b0) & (pp_reg_295 == 1'd1)) | ((grp_Write_Output_fu_359_ap_done == 1'b0) & (pp_reg_295 == 1'd0)));
end

assign ap_phi_mux_pp_phi_fu_299_p4 = pp_reg_295;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln356_1_fu_775_p1 = p_Result_3_fu_765_p4;

assign bitcast_ln356_2_fu_554_p1 = p_Result_7_fu_547_p3;

assign bitcast_ln356_3_fu_636_p1 = p_Result_9_fu_626_p4;

assign bitcast_ln356_fu_693_p1 = p_Result_1_fu_686_p3;

assign data_V_1_fu_704_p2 = (zext_ln30_fu_682_p1 + p_Result_2_fu_697_p3);

assign data_V_2_fu_968_p1 = dc_1_reg_1353;

assign data_V_3_fu_385_p1 = dc_2_reg_1234;

assign data_V_4_fu_565_p2 = (zext_ln30_1_fu_543_p1 + p_Result_8_fu_558_p3);

assign data_V_5_fu_843_p1 = dc_3_reg_1348;

assign data_V_fu_459_p1 = dc_reg_1240;

assign dc_1_fu_837_p3 = ((and_ln1035_fu_832_p2[0:0] == 1'b1) ? dc_reg_1240 : select_ln1035_reg_1343);

assign dc_3_fu_821_p3 = ((and_ln1035_1_fu_816_p2[0:0] == 1'b1) ? dc_2_reg_1234 : select_ln1035_2_reg_1328);

assign empty_fu_1116_p1 = result_V_fu_1110_p3[26:0];

assign grp_Load_and_Compute_fu_320_ap_start = grp_Load_and_Compute_fu_320_ap_start_reg;

assign grp_Write_Output_fu_359_ap_start = grp_Write_Output_fu_359_ap_start_reg;

assign icmp_ln1035_1_fu_677_p2 = ((xs_exp_V_8_reg_1296 > 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln1035_2_fu_533_p2 = ((xs_exp_V_10_reg_1260 < 8'd127) ? 1'b1 : 1'b0);

assign icmp_ln1035_3_fu_538_p2 = ((xs_exp_V_10_reg_1260 > 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln1035_fu_672_p2 = ((xs_exp_V_8_reg_1296 < 8'd127) ? 1'b1 : 1'b0);

assign icmp_ln21_1_fu_434_p2 = ((tmp_2_i1_fu_426_p3 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_508_p2 = ((tmp_2_i_fu_500_p3 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln241_fu_1144_p2 = (($signed(zext_ln241_fu_1135_p1) < $signed(sub_reg_1385)) ? 1'b1 : 1'b0);

assign index_1_fu_440_p4 = {{data_V_3_fu_385_p1[27:23]}};

assign index_fu_514_p4 = {{data_V_fu_459_p1[27:23]}};

assign isNeg_1_fu_892_p3 = add_ln346_1_fu_886_p2[32'd8];

assign isNeg_fu_1017_p3 = add_ln346_fu_1011_p2[32'd8];

assign mantissa_1_fu_868_p4 = {{{{1'd1}, {p_Result_11_fu_864_p1}}}, {1'd0}};

assign mantissa_fu_993_p4 = {{{{1'd1}, {p_Result_5_fu_989_p1}}}, {1'd0}};

assign or_ln1035_1_fu_658_p2 = (icmp_ln1035_3_fu_538_p2 | icmp_ln1035_2_fu_533_p2);

assign or_ln1035_fu_797_p2 = (icmp_ln1035_fu_672_p2 | icmp_ln1035_1_fu_677_p2);

assign or_ln21_1_fu_779_p2 = (p_Result_s_reg_1288 | icmp_ln21_reg_1303);

assign or_ln21_2_fu_410_p2 = (xs_exp_V_10_fu_396_p4 | trunc_ln21_1_fu_406_p1);

assign or_ln21_3_fu_640_p2 = (p_Result_6_reg_1252 | icmp_ln21_1_reg_1267);

assign or_ln21_fu_484_p2 = (xs_exp_V_8_fu_470_p4 | trunc_ln21_fu_480_p1);

assign or_ln779_1_fu_581_p2 = (data_V_4_fu_565_p2 | data_V_3_reg_1246);

assign or_ln779_fu_720_p2 = (data_V_reg_1282 | data_V_1_fu_704_p2);

assign p_Result_11_fu_864_p1 = data_V_5_fu_843_p1[22:0];

assign p_Result_1_fu_686_p3 = {{p_Result_s_reg_1288}, {31'd0}};

assign p_Result_2_fu_697_p3 = {{1'd0}, {trunc_ln368_reg_1313}};

assign p_Result_3_fu_765_p4 = {{{xs_sign_V_1_fu_725_p3}, {xs_exp_V_9_fu_733_p3}}, {xs_sig_V_4_fu_759_p2}};

assign p_Result_5_fu_989_p1 = data_V_2_fu_968_p1[22:0];

assign p_Result_7_fu_547_p3 = {{p_Result_6_reg_1252}, {31'd0}};

assign p_Result_8_fu_558_p3 = {{1'd0}, {trunc_ln368_1_reg_1277}};

assign p_Result_9_fu_626_p4 = {{{xs_sign_V_5_fu_586_p3}, {xs_exp_V_11_fu_594_p3}}, {xs_sig_V_5_fu_620_p2}};

assign r_V_1_fu_1057_p2 = zext_ln15_fu_1003_p1 << zext_ln1488_fu_1047_p1;

assign r_V_2_fu_926_p2 = zext_ln15_1_fu_878_p1 >> zext_ln1488_1_fu_922_p1;

assign r_V_3_fu_932_p2 = zext_ln15_1_fu_878_p1 << zext_ln1488_1_fu_922_p1;

assign r_V_fu_1051_p2 = zext_ln15_fu_1003_p1 >> zext_ln1488_fu_1047_p1;

assign result_V_2_fu_1105_p2 = (32'd0 - val_reg_1374);

assign result_V_6_fu_1093_p2 = (32'd0 - val_1_reg_1363);

assign result_V_7_fu_1098_p3 = ((p_Result_10_reg_1358[0:0] == 1'b1) ? result_V_6_fu_1093_p2 : val_1_reg_1363);

assign result_V_fu_1110_p3 = ((p_Result_4_reg_1369[0:0] == 1'b1) ? result_V_2_fu_1105_p2 : val_reg_1374);

assign select_ln1035_2_fu_664_p3 = ((or_ln1035_1_fu_658_p2[0:0] == 1'b1) ? select_ln21_1_fu_650_p3 : bitcast_ln356_3_fu_636_p1);

assign select_ln1035_fu_803_p3 = ((or_ln1035_fu_797_p2[0:0] == 1'b1) ? select_ln21_fu_789_p3 : bitcast_ln356_1_fu_775_p1);

assign select_ln21_1_fu_650_p3 = ((and_ln21_1_fu_644_p2[0:0] == 1'b1) ? bitcast_ln356_2_fu_554_p1 : 32'd1065353216);

assign select_ln21_fu_789_p3 = ((and_ln21_fu_783_p2[0:0] == 1'b1) ? bitcast_ln356_fu_693_p1 : 32'd1065353216);

assign sext_ln1488_1_fu_918_p1 = $signed(ush_1_fu_910_p3);

assign sext_ln1488_fu_1043_p1 = $signed(ush_fu_1035_p3);

assign sext_ln1512_1_fu_906_p1 = $signed(sub_ln1512_1_fu_900_p2);

assign sext_ln1512_fu_1031_p1 = $signed(sub_ln1512_fu_1025_p2);

assign sub_fu_1120_p2 = ($signed(result_V_fu_1110_p3) + $signed(32'd4294967295));

assign sub_ln1512_1_fu_900_p2 = (8'd127 - xs_exp_V_7_fu_854_p4);

assign sub_ln1512_fu_1025_p2 = (8'd127 - xs_exp_V_3_fu_979_p4);

assign tmp_195_fu_950_p4 = {{r_V_3_fu_932_p2[55:24]}};

assign tmp_1_i9_fu_416_p4 = {{data_V_3_fu_385_p1[22:8]}};

assign tmp_1_i_fu_490_p4 = {{data_V_fu_459_p1[22:8]}};

assign tmp_2_i1_fu_426_p3 = {{tmp_1_i9_fu_416_p4}, {or_ln21_2_fu_410_p2}};

assign tmp_2_i_fu_500_p3 = {{tmp_1_i_fu_490_p4}, {or_ln21_fu_484_p2}};

assign tmp_6_fu_938_p3 = r_V_2_fu_926_p2[32'd24];

assign tmp_fu_1063_p3 = r_V_fu_1051_p2[32'd24];

assign tmp_s_fu_1075_p4 = {{r_V_1_fu_1057_p2[55:24]}};

assign trunc_ln21_1_fu_406_p1 = data_V_3_fu_385_p1[7:0];

assign trunc_ln21_fu_480_p1 = data_V_fu_459_p1[7:0];

assign trunc_ln241_fu_1139_p1 = Out_LP_now_fu_210[26:0];

assign trunc_ln368_1_fu_455_p1 = data_V_3_fu_385_p1[30:0];

assign trunc_ln368_fu_529_p1 = data_V_fu_459_p1[30:0];

assign trunc_ln779_1_fu_742_p1 = data_V_1_fu_704_p2[22:0];

assign trunc_ln779_2_fu_600_p1 = data_V_3_reg_1246[22:0];

assign trunc_ln779_3_fu_603_p1 = data_V_4_fu_565_p2[22:0];

assign trunc_ln779_fu_739_p1 = data_V_reg_1282[22:0];

assign ush_1_fu_910_p3 = ((isNeg_1_fu_892_p3[0:0] == 1'b1) ? sext_ln1512_1_fu_906_p1 : add_ln346_1_fu_886_p2);

assign ush_fu_1035_p3 = ((isNeg_fu_1017_p3[0:0] == 1'b1) ? sext_ln1512_fu_1031_p1 : add_ln346_fu_1011_p2);

assign val_1_fu_960_p3 = ((isNeg_1_fu_892_p3[0:0] == 1'b1) ? zext_ln818_1_fu_946_p1 : tmp_195_fu_950_p4);

assign val_fu_1085_p3 = ((isNeg_fu_1017_p3[0:0] == 1'b1) ? zext_ln818_fu_1071_p1 : tmp_s_fu_1075_p4);

assign xor_ln1035_1_fu_811_p2 = (icmp_ln1035_2_reg_1318 ^ 1'd1);

assign xor_ln1035_fu_827_p2 = (icmp_ln1035_reg_1333 ^ 1'd1);

assign xor_ln1497_1_fu_614_p2 = (mask_table_q0 ^ 23'd8388607);

assign xor_ln1497_fu_753_p2 = (mask_table_q0 ^ 23'd8388607);

assign xs_exp_V_10_fu_396_p4 = {{data_V_3_fu_385_p1[30:23]}};

assign xs_exp_V_11_fu_594_p3 = ((p_Result_6_reg_1252[0:0] == 1'b1) ? xs_exp_V_10_reg_1260 : xs_exp_V_5_fu_571_p4);

assign xs_exp_V_3_fu_979_p4 = {{data_V_2_fu_968_p1[30:23]}};

assign xs_exp_V_5_fu_571_p4 = {{data_V_4_fu_565_p2[30:23]}};

assign xs_exp_V_7_fu_854_p4 = {{data_V_5_fu_843_p1[30:23]}};

assign xs_exp_V_8_fu_470_p4 = {{data_V_fu_459_p1[30:23]}};

assign xs_exp_V_9_fu_733_p3 = ((p_Result_s_reg_1288[0:0] == 1'b1) ? xs_exp_V_8_reg_1296 : xs_exp_V_fu_710_p4);

assign xs_exp_V_fu_710_p4 = {{data_V_1_fu_704_p2[30:23]}};

assign xs_sig_V_2_fu_607_p3 = ((p_Result_6_reg_1252[0:0] == 1'b1) ? trunc_ln779_2_fu_600_p1 : trunc_ln779_3_fu_603_p1);

assign xs_sig_V_4_fu_759_p2 = (xs_sig_V_fu_746_p3 & xor_ln1497_fu_753_p2);

assign xs_sig_V_5_fu_620_p2 = (xs_sig_V_2_fu_607_p3 & xor_ln1497_1_fu_614_p2);

assign xs_sig_V_fu_746_p3 = ((p_Result_s_reg_1288[0:0] == 1'b1) ? trunc_ln779_fu_739_p1 : trunc_ln779_1_fu_742_p1);

assign xs_sign_V_1_fu_725_p3 = or_ln779_fu_720_p2[32'd31];

assign xs_sign_V_5_fu_586_p3 = or_ln779_1_fu_581_p2[32'd31];

assign zext_ln1488_1_fu_922_p1 = $unsigned(sext_ln1488_1_fu_918_p1);

assign zext_ln1488_fu_1047_p1 = $unsigned(sext_ln1488_fu_1043_p1);

assign zext_ln15_1_fu_878_p1 = mantissa_1_fu_868_p4;

assign zext_ln15_fu_1003_p1 = mantissa_fu_993_p4;

assign zext_ln241_fu_1135_p1 = Out_LP_now_fu_210;

assign zext_ln30_1_fu_543_p1 = mask_table_q0;

assign zext_ln30_fu_682_p1 = mask_table_q0;

assign zext_ln346_1_fu_882_p1 = xs_exp_V_7_fu_854_p4;

assign zext_ln346_fu_1007_p1 = xs_exp_V_3_fu_979_p4;

assign zext_ln541_1_fu_450_p1 = index_1_fu_440_p4;

assign zext_ln541_fu_524_p1 = index_fu_514_p4;

assign zext_ln818_1_fu_946_p1 = tmp_6_fu_938_p3;

assign zext_ln818_fu_1071_p1 = tmp_fu_1063_p3;

endmodule //Dense
