// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Dense_Load_and_Compute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_IN1_AWVALID,
        m_axi_IN1_AWREADY,
        m_axi_IN1_AWADDR,
        m_axi_IN1_AWID,
        m_axi_IN1_AWLEN,
        m_axi_IN1_AWSIZE,
        m_axi_IN1_AWBURST,
        m_axi_IN1_AWLOCK,
        m_axi_IN1_AWCACHE,
        m_axi_IN1_AWPROT,
        m_axi_IN1_AWQOS,
        m_axi_IN1_AWREGION,
        m_axi_IN1_AWUSER,
        m_axi_IN1_WVALID,
        m_axi_IN1_WREADY,
        m_axi_IN1_WDATA,
        m_axi_IN1_WSTRB,
        m_axi_IN1_WLAST,
        m_axi_IN1_WID,
        m_axi_IN1_WUSER,
        m_axi_IN1_ARVALID,
        m_axi_IN1_ARREADY,
        m_axi_IN1_ARADDR,
        m_axi_IN1_ARID,
        m_axi_IN1_ARLEN,
        m_axi_IN1_ARSIZE,
        m_axi_IN1_ARBURST,
        m_axi_IN1_ARLOCK,
        m_axi_IN1_ARCACHE,
        m_axi_IN1_ARPROT,
        m_axi_IN1_ARQOS,
        m_axi_IN1_ARREGION,
        m_axi_IN1_ARUSER,
        m_axi_IN1_RVALID,
        m_axi_IN1_RREADY,
        m_axi_IN1_RDATA,
        m_axi_IN1_RLAST,
        m_axi_IN1_RID,
        m_axi_IN1_RFIFONUM,
        m_axi_IN1_RUSER,
        m_axi_IN1_RRESP,
        m_axi_IN1_BVALID,
        m_axi_IN1_BREADY,
        m_axi_IN1_BRESP,
        m_axi_IN1_BID,
        m_axi_IN1_BUSER,
        feature_in,
        m_axi_W1_AWVALID,
        m_axi_W1_AWREADY,
        m_axi_W1_AWADDR,
        m_axi_W1_AWID,
        m_axi_W1_AWLEN,
        m_axi_W1_AWSIZE,
        m_axi_W1_AWBURST,
        m_axi_W1_AWLOCK,
        m_axi_W1_AWCACHE,
        m_axi_W1_AWPROT,
        m_axi_W1_AWQOS,
        m_axi_W1_AWREGION,
        m_axi_W1_AWUSER,
        m_axi_W1_WVALID,
        m_axi_W1_WREADY,
        m_axi_W1_WDATA,
        m_axi_W1_WSTRB,
        m_axi_W1_WLAST,
        m_axi_W1_WID,
        m_axi_W1_WUSER,
        m_axi_W1_ARVALID,
        m_axi_W1_ARREADY,
        m_axi_W1_ARADDR,
        m_axi_W1_ARID,
        m_axi_W1_ARLEN,
        m_axi_W1_ARSIZE,
        m_axi_W1_ARBURST,
        m_axi_W1_ARLOCK,
        m_axi_W1_ARCACHE,
        m_axi_W1_ARPROT,
        m_axi_W1_ARQOS,
        m_axi_W1_ARREGION,
        m_axi_W1_ARUSER,
        m_axi_W1_RVALID,
        m_axi_W1_RREADY,
        m_axi_W1_RDATA,
        m_axi_W1_RLAST,
        m_axi_W1_RID,
        m_axi_W1_RFIFONUM,
        m_axi_W1_RUSER,
        m_axi_W1_RRESP,
        m_axi_W1_BVALID,
        m_axi_W1_BREADY,
        m_axi_W1_BRESP,
        m_axi_W1_BID,
        m_axi_W1_BUSER,
        Weight1,
        m_axi_W2_AWVALID,
        m_axi_W2_AWREADY,
        m_axi_W2_AWADDR,
        m_axi_W2_AWID,
        m_axi_W2_AWLEN,
        m_axi_W2_AWSIZE,
        m_axi_W2_AWBURST,
        m_axi_W2_AWLOCK,
        m_axi_W2_AWCACHE,
        m_axi_W2_AWPROT,
        m_axi_W2_AWQOS,
        m_axi_W2_AWREGION,
        m_axi_W2_AWUSER,
        m_axi_W2_WVALID,
        m_axi_W2_WREADY,
        m_axi_W2_WDATA,
        m_axi_W2_WSTRB,
        m_axi_W2_WLAST,
        m_axi_W2_WID,
        m_axi_W2_WUSER,
        m_axi_W2_ARVALID,
        m_axi_W2_ARREADY,
        m_axi_W2_ARADDR,
        m_axi_W2_ARID,
        m_axi_W2_ARLEN,
        m_axi_W2_ARSIZE,
        m_axi_W2_ARBURST,
        m_axi_W2_ARLOCK,
        m_axi_W2_ARCACHE,
        m_axi_W2_ARPROT,
        m_axi_W2_ARQOS,
        m_axi_W2_ARREGION,
        m_axi_W2_ARUSER,
        m_axi_W2_RVALID,
        m_axi_W2_RREADY,
        m_axi_W2_RDATA,
        m_axi_W2_RLAST,
        m_axi_W2_RID,
        m_axi_W2_RFIFONUM,
        m_axi_W2_RUSER,
        m_axi_W2_RRESP,
        m_axi_W2_BVALID,
        m_axi_W2_BREADY,
        m_axi_W2_BRESP,
        m_axi_W2_BID,
        m_axi_W2_BUSER,
        Weight2,
        m_axi_W3_AWVALID,
        m_axi_W3_AWREADY,
        m_axi_W3_AWADDR,
        m_axi_W3_AWID,
        m_axi_W3_AWLEN,
        m_axi_W3_AWSIZE,
        m_axi_W3_AWBURST,
        m_axi_W3_AWLOCK,
        m_axi_W3_AWCACHE,
        m_axi_W3_AWPROT,
        m_axi_W3_AWQOS,
        m_axi_W3_AWREGION,
        m_axi_W3_AWUSER,
        m_axi_W3_WVALID,
        m_axi_W3_WREADY,
        m_axi_W3_WDATA,
        m_axi_W3_WSTRB,
        m_axi_W3_WLAST,
        m_axi_W3_WID,
        m_axi_W3_WUSER,
        m_axi_W3_ARVALID,
        m_axi_W3_ARREADY,
        m_axi_W3_ARADDR,
        m_axi_W3_ARID,
        m_axi_W3_ARLEN,
        m_axi_W3_ARSIZE,
        m_axi_W3_ARBURST,
        m_axi_W3_ARLOCK,
        m_axi_W3_ARCACHE,
        m_axi_W3_ARPROT,
        m_axi_W3_ARQOS,
        m_axi_W3_ARREGION,
        m_axi_W3_ARUSER,
        m_axi_W3_RVALID,
        m_axi_W3_RREADY,
        m_axi_W3_RDATA,
        m_axi_W3_RLAST,
        m_axi_W3_RID,
        m_axi_W3_RFIFONUM,
        m_axi_W3_RUSER,
        m_axi_W3_RRESP,
        m_axi_W3_BVALID,
        m_axi_W3_BREADY,
        m_axi_W3_BRESP,
        m_axi_W3_BID,
        m_axi_W3_BUSER,
        Weight3,
        m_axi_W4_AWVALID,
        m_axi_W4_AWREADY,
        m_axi_W4_AWADDR,
        m_axi_W4_AWID,
        m_axi_W4_AWLEN,
        m_axi_W4_AWSIZE,
        m_axi_W4_AWBURST,
        m_axi_W4_AWLOCK,
        m_axi_W4_AWCACHE,
        m_axi_W4_AWPROT,
        m_axi_W4_AWQOS,
        m_axi_W4_AWREGION,
        m_axi_W4_AWUSER,
        m_axi_W4_WVALID,
        m_axi_W4_WREADY,
        m_axi_W4_WDATA,
        m_axi_W4_WSTRB,
        m_axi_W4_WLAST,
        m_axi_W4_WID,
        m_axi_W4_WUSER,
        m_axi_W4_ARVALID,
        m_axi_W4_ARREADY,
        m_axi_W4_ARADDR,
        m_axi_W4_ARID,
        m_axi_W4_ARLEN,
        m_axi_W4_ARSIZE,
        m_axi_W4_ARBURST,
        m_axi_W4_ARLOCK,
        m_axi_W4_ARCACHE,
        m_axi_W4_ARPROT,
        m_axi_W4_ARQOS,
        m_axi_W4_ARREGION,
        m_axi_W4_ARUSER,
        m_axi_W4_RVALID,
        m_axi_W4_RREADY,
        m_axi_W4_RDATA,
        m_axi_W4_RLAST,
        m_axi_W4_RID,
        m_axi_W4_RFIFONUM,
        m_axi_W4_RUSER,
        m_axi_W4_RRESP,
        m_axi_W4_BVALID,
        m_axi_W4_BREADY,
        m_axi_W4_BRESP,
        m_axi_W4_BID,
        m_axi_W4_BUSER,
        Weight4,
        m_axi_B1_AWVALID,
        m_axi_B1_AWREADY,
        m_axi_B1_AWADDR,
        m_axi_B1_AWID,
        m_axi_B1_AWLEN,
        m_axi_B1_AWSIZE,
        m_axi_B1_AWBURST,
        m_axi_B1_AWLOCK,
        m_axi_B1_AWCACHE,
        m_axi_B1_AWPROT,
        m_axi_B1_AWQOS,
        m_axi_B1_AWREGION,
        m_axi_B1_AWUSER,
        m_axi_B1_WVALID,
        m_axi_B1_WREADY,
        m_axi_B1_WDATA,
        m_axi_B1_WSTRB,
        m_axi_B1_WLAST,
        m_axi_B1_WID,
        m_axi_B1_WUSER,
        m_axi_B1_ARVALID,
        m_axi_B1_ARREADY,
        m_axi_B1_ARADDR,
        m_axi_B1_ARID,
        m_axi_B1_ARLEN,
        m_axi_B1_ARSIZE,
        m_axi_B1_ARBURST,
        m_axi_B1_ARLOCK,
        m_axi_B1_ARCACHE,
        m_axi_B1_ARPROT,
        m_axi_B1_ARQOS,
        m_axi_B1_ARREGION,
        m_axi_B1_ARUSER,
        m_axi_B1_RVALID,
        m_axi_B1_RREADY,
        m_axi_B1_RDATA,
        m_axi_B1_RLAST,
        m_axi_B1_RID,
        m_axi_B1_RFIFONUM,
        m_axi_B1_RUSER,
        m_axi_B1_RRESP,
        m_axi_B1_BVALID,
        m_axi_B1_BREADY,
        m_axi_B1_BRESP,
        m_axi_B1_BID,
        m_axi_B1_BUSER,
        bias,
        output_buffer_address0,
        output_buffer_ce0,
        output_buffer_q0,
        output_buffer_address1,
        output_buffer_ce1,
        output_buffer_we1,
        output_buffer_d1,
        Out_LP_now,
        Input_Loops,
        CHin
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_state17 = 20'd65536;
parameter    ap_ST_fsm_state18 = 20'd131072;
parameter    ap_ST_fsm_state19 = 20'd262144;
parameter    ap_ST_fsm_state20 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_IN1_AWVALID;
input   m_axi_IN1_AWREADY;
output  [63:0] m_axi_IN1_AWADDR;
output  [0:0] m_axi_IN1_AWID;
output  [31:0] m_axi_IN1_AWLEN;
output  [2:0] m_axi_IN1_AWSIZE;
output  [1:0] m_axi_IN1_AWBURST;
output  [1:0] m_axi_IN1_AWLOCK;
output  [3:0] m_axi_IN1_AWCACHE;
output  [2:0] m_axi_IN1_AWPROT;
output  [3:0] m_axi_IN1_AWQOS;
output  [3:0] m_axi_IN1_AWREGION;
output  [0:0] m_axi_IN1_AWUSER;
output   m_axi_IN1_WVALID;
input   m_axi_IN1_WREADY;
output  [15:0] m_axi_IN1_WDATA;
output  [1:0] m_axi_IN1_WSTRB;
output   m_axi_IN1_WLAST;
output  [0:0] m_axi_IN1_WID;
output  [0:0] m_axi_IN1_WUSER;
output   m_axi_IN1_ARVALID;
input   m_axi_IN1_ARREADY;
output  [63:0] m_axi_IN1_ARADDR;
output  [0:0] m_axi_IN1_ARID;
output  [31:0] m_axi_IN1_ARLEN;
output  [2:0] m_axi_IN1_ARSIZE;
output  [1:0] m_axi_IN1_ARBURST;
output  [1:0] m_axi_IN1_ARLOCK;
output  [3:0] m_axi_IN1_ARCACHE;
output  [2:0] m_axi_IN1_ARPROT;
output  [3:0] m_axi_IN1_ARQOS;
output  [3:0] m_axi_IN1_ARREGION;
output  [0:0] m_axi_IN1_ARUSER;
input   m_axi_IN1_RVALID;
output   m_axi_IN1_RREADY;
input  [15:0] m_axi_IN1_RDATA;
input   m_axi_IN1_RLAST;
input  [0:0] m_axi_IN1_RID;
input  [10:0] m_axi_IN1_RFIFONUM;
input  [0:0] m_axi_IN1_RUSER;
input  [1:0] m_axi_IN1_RRESP;
input   m_axi_IN1_BVALID;
output   m_axi_IN1_BREADY;
input  [1:0] m_axi_IN1_BRESP;
input  [0:0] m_axi_IN1_BID;
input  [0:0] m_axi_IN1_BUSER;
input  [63:0] feature_in;
output   m_axi_W1_AWVALID;
input   m_axi_W1_AWREADY;
output  [63:0] m_axi_W1_AWADDR;
output  [0:0] m_axi_W1_AWID;
output  [31:0] m_axi_W1_AWLEN;
output  [2:0] m_axi_W1_AWSIZE;
output  [1:0] m_axi_W1_AWBURST;
output  [1:0] m_axi_W1_AWLOCK;
output  [3:0] m_axi_W1_AWCACHE;
output  [2:0] m_axi_W1_AWPROT;
output  [3:0] m_axi_W1_AWQOS;
output  [3:0] m_axi_W1_AWREGION;
output  [0:0] m_axi_W1_AWUSER;
output   m_axi_W1_WVALID;
input   m_axi_W1_WREADY;
output  [15:0] m_axi_W1_WDATA;
output  [1:0] m_axi_W1_WSTRB;
output   m_axi_W1_WLAST;
output  [0:0] m_axi_W1_WID;
output  [0:0] m_axi_W1_WUSER;
output   m_axi_W1_ARVALID;
input   m_axi_W1_ARREADY;
output  [63:0] m_axi_W1_ARADDR;
output  [0:0] m_axi_W1_ARID;
output  [31:0] m_axi_W1_ARLEN;
output  [2:0] m_axi_W1_ARSIZE;
output  [1:0] m_axi_W1_ARBURST;
output  [1:0] m_axi_W1_ARLOCK;
output  [3:0] m_axi_W1_ARCACHE;
output  [2:0] m_axi_W1_ARPROT;
output  [3:0] m_axi_W1_ARQOS;
output  [3:0] m_axi_W1_ARREGION;
output  [0:0] m_axi_W1_ARUSER;
input   m_axi_W1_RVALID;
output   m_axi_W1_RREADY;
input  [15:0] m_axi_W1_RDATA;
input   m_axi_W1_RLAST;
input  [0:0] m_axi_W1_RID;
input  [10:0] m_axi_W1_RFIFONUM;
input  [0:0] m_axi_W1_RUSER;
input  [1:0] m_axi_W1_RRESP;
input   m_axi_W1_BVALID;
output   m_axi_W1_BREADY;
input  [1:0] m_axi_W1_BRESP;
input  [0:0] m_axi_W1_BID;
input  [0:0] m_axi_W1_BUSER;
input  [63:0] Weight1;
output   m_axi_W2_AWVALID;
input   m_axi_W2_AWREADY;
output  [63:0] m_axi_W2_AWADDR;
output  [0:0] m_axi_W2_AWID;
output  [31:0] m_axi_W2_AWLEN;
output  [2:0] m_axi_W2_AWSIZE;
output  [1:0] m_axi_W2_AWBURST;
output  [1:0] m_axi_W2_AWLOCK;
output  [3:0] m_axi_W2_AWCACHE;
output  [2:0] m_axi_W2_AWPROT;
output  [3:0] m_axi_W2_AWQOS;
output  [3:0] m_axi_W2_AWREGION;
output  [0:0] m_axi_W2_AWUSER;
output   m_axi_W2_WVALID;
input   m_axi_W2_WREADY;
output  [15:0] m_axi_W2_WDATA;
output  [1:0] m_axi_W2_WSTRB;
output   m_axi_W2_WLAST;
output  [0:0] m_axi_W2_WID;
output  [0:0] m_axi_W2_WUSER;
output   m_axi_W2_ARVALID;
input   m_axi_W2_ARREADY;
output  [63:0] m_axi_W2_ARADDR;
output  [0:0] m_axi_W2_ARID;
output  [31:0] m_axi_W2_ARLEN;
output  [2:0] m_axi_W2_ARSIZE;
output  [1:0] m_axi_W2_ARBURST;
output  [1:0] m_axi_W2_ARLOCK;
output  [3:0] m_axi_W2_ARCACHE;
output  [2:0] m_axi_W2_ARPROT;
output  [3:0] m_axi_W2_ARQOS;
output  [3:0] m_axi_W2_ARREGION;
output  [0:0] m_axi_W2_ARUSER;
input   m_axi_W2_RVALID;
output   m_axi_W2_RREADY;
input  [15:0] m_axi_W2_RDATA;
input   m_axi_W2_RLAST;
input  [0:0] m_axi_W2_RID;
input  [10:0] m_axi_W2_RFIFONUM;
input  [0:0] m_axi_W2_RUSER;
input  [1:0] m_axi_W2_RRESP;
input   m_axi_W2_BVALID;
output   m_axi_W2_BREADY;
input  [1:0] m_axi_W2_BRESP;
input  [0:0] m_axi_W2_BID;
input  [0:0] m_axi_W2_BUSER;
input  [63:0] Weight2;
output   m_axi_W3_AWVALID;
input   m_axi_W3_AWREADY;
output  [63:0] m_axi_W3_AWADDR;
output  [0:0] m_axi_W3_AWID;
output  [31:0] m_axi_W3_AWLEN;
output  [2:0] m_axi_W3_AWSIZE;
output  [1:0] m_axi_W3_AWBURST;
output  [1:0] m_axi_W3_AWLOCK;
output  [3:0] m_axi_W3_AWCACHE;
output  [2:0] m_axi_W3_AWPROT;
output  [3:0] m_axi_W3_AWQOS;
output  [3:0] m_axi_W3_AWREGION;
output  [0:0] m_axi_W3_AWUSER;
output   m_axi_W3_WVALID;
input   m_axi_W3_WREADY;
output  [15:0] m_axi_W3_WDATA;
output  [1:0] m_axi_W3_WSTRB;
output   m_axi_W3_WLAST;
output  [0:0] m_axi_W3_WID;
output  [0:0] m_axi_W3_WUSER;
output   m_axi_W3_ARVALID;
input   m_axi_W3_ARREADY;
output  [63:0] m_axi_W3_ARADDR;
output  [0:0] m_axi_W3_ARID;
output  [31:0] m_axi_W3_ARLEN;
output  [2:0] m_axi_W3_ARSIZE;
output  [1:0] m_axi_W3_ARBURST;
output  [1:0] m_axi_W3_ARLOCK;
output  [3:0] m_axi_W3_ARCACHE;
output  [2:0] m_axi_W3_ARPROT;
output  [3:0] m_axi_W3_ARQOS;
output  [3:0] m_axi_W3_ARREGION;
output  [0:0] m_axi_W3_ARUSER;
input   m_axi_W3_RVALID;
output   m_axi_W3_RREADY;
input  [15:0] m_axi_W3_RDATA;
input   m_axi_W3_RLAST;
input  [0:0] m_axi_W3_RID;
input  [10:0] m_axi_W3_RFIFONUM;
input  [0:0] m_axi_W3_RUSER;
input  [1:0] m_axi_W3_RRESP;
input   m_axi_W3_BVALID;
output   m_axi_W3_BREADY;
input  [1:0] m_axi_W3_BRESP;
input  [0:0] m_axi_W3_BID;
input  [0:0] m_axi_W3_BUSER;
input  [63:0] Weight3;
output   m_axi_W4_AWVALID;
input   m_axi_W4_AWREADY;
output  [63:0] m_axi_W4_AWADDR;
output  [0:0] m_axi_W4_AWID;
output  [31:0] m_axi_W4_AWLEN;
output  [2:0] m_axi_W4_AWSIZE;
output  [1:0] m_axi_W4_AWBURST;
output  [1:0] m_axi_W4_AWLOCK;
output  [3:0] m_axi_W4_AWCACHE;
output  [2:0] m_axi_W4_AWPROT;
output  [3:0] m_axi_W4_AWQOS;
output  [3:0] m_axi_W4_AWREGION;
output  [0:0] m_axi_W4_AWUSER;
output   m_axi_W4_WVALID;
input   m_axi_W4_WREADY;
output  [15:0] m_axi_W4_WDATA;
output  [1:0] m_axi_W4_WSTRB;
output   m_axi_W4_WLAST;
output  [0:0] m_axi_W4_WID;
output  [0:0] m_axi_W4_WUSER;
output   m_axi_W4_ARVALID;
input   m_axi_W4_ARREADY;
output  [63:0] m_axi_W4_ARADDR;
output  [0:0] m_axi_W4_ARID;
output  [31:0] m_axi_W4_ARLEN;
output  [2:0] m_axi_W4_ARSIZE;
output  [1:0] m_axi_W4_ARBURST;
output  [1:0] m_axi_W4_ARLOCK;
output  [3:0] m_axi_W4_ARCACHE;
output  [2:0] m_axi_W4_ARPROT;
output  [3:0] m_axi_W4_ARQOS;
output  [3:0] m_axi_W4_ARREGION;
output  [0:0] m_axi_W4_ARUSER;
input   m_axi_W4_RVALID;
output   m_axi_W4_RREADY;
input  [15:0] m_axi_W4_RDATA;
input   m_axi_W4_RLAST;
input  [0:0] m_axi_W4_RID;
input  [10:0] m_axi_W4_RFIFONUM;
input  [0:0] m_axi_W4_RUSER;
input  [1:0] m_axi_W4_RRESP;
input   m_axi_W4_BVALID;
output   m_axi_W4_BREADY;
input  [1:0] m_axi_W4_BRESP;
input  [0:0] m_axi_W4_BID;
input  [0:0] m_axi_W4_BUSER;
input  [63:0] Weight4;
output   m_axi_B1_AWVALID;
input   m_axi_B1_AWREADY;
output  [63:0] m_axi_B1_AWADDR;
output  [0:0] m_axi_B1_AWID;
output  [31:0] m_axi_B1_AWLEN;
output  [2:0] m_axi_B1_AWSIZE;
output  [1:0] m_axi_B1_AWBURST;
output  [1:0] m_axi_B1_AWLOCK;
output  [3:0] m_axi_B1_AWCACHE;
output  [2:0] m_axi_B1_AWPROT;
output  [3:0] m_axi_B1_AWQOS;
output  [3:0] m_axi_B1_AWREGION;
output  [0:0] m_axi_B1_AWUSER;
output   m_axi_B1_WVALID;
input   m_axi_B1_WREADY;
output  [15:0] m_axi_B1_WDATA;
output  [1:0] m_axi_B1_WSTRB;
output   m_axi_B1_WLAST;
output  [0:0] m_axi_B1_WID;
output  [0:0] m_axi_B1_WUSER;
output   m_axi_B1_ARVALID;
input   m_axi_B1_ARREADY;
output  [63:0] m_axi_B1_ARADDR;
output  [0:0] m_axi_B1_ARID;
output  [31:0] m_axi_B1_ARLEN;
output  [2:0] m_axi_B1_ARSIZE;
output  [1:0] m_axi_B1_ARBURST;
output  [1:0] m_axi_B1_ARLOCK;
output  [3:0] m_axi_B1_ARCACHE;
output  [2:0] m_axi_B1_ARPROT;
output  [3:0] m_axi_B1_ARQOS;
output  [3:0] m_axi_B1_ARREGION;
output  [0:0] m_axi_B1_ARUSER;
input   m_axi_B1_RVALID;
output   m_axi_B1_RREADY;
input  [15:0] m_axi_B1_RDATA;
input   m_axi_B1_RLAST;
input  [0:0] m_axi_B1_RID;
input  [10:0] m_axi_B1_RFIFONUM;
input  [0:0] m_axi_B1_RUSER;
input  [1:0] m_axi_B1_RRESP;
input   m_axi_B1_BVALID;
output   m_axi_B1_BREADY;
input  [1:0] m_axi_B1_BRESP;
input  [0:0] m_axi_B1_BID;
input  [0:0] m_axi_B1_BUSER;
input  [63:0] bias;
output  [4:0] output_buffer_address0;
output   output_buffer_ce0;
input  [15:0] output_buffer_q0;
output  [4:0] output_buffer_address1;
output   output_buffer_ce1;
output   output_buffer_we1;
output  [15:0] output_buffer_d1;
input  [26:0] Out_LP_now;
input  [31:0] Input_Loops;
input  [31:0] CHin;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_IN1_ARVALID;
reg m_axi_IN1_RREADY;
reg m_axi_W1_ARVALID;
reg m_axi_W1_RREADY;
reg m_axi_W2_ARVALID;
reg m_axi_W2_RREADY;
reg m_axi_W3_ARVALID;
reg m_axi_W3_RREADY;
reg m_axi_W4_ARVALID;
reg m_axi_W4_RREADY;
reg m_axi_B1_ARVALID;
reg m_axi_B1_RREADY;
reg output_buffer_ce0;
reg[4:0] output_buffer_address1;
reg output_buffer_ce1;
reg output_buffer_we1;
reg[15:0] output_buffer_d1;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] bias_buffer_V_address0;
reg    bias_buffer_V_ce0;
wire   [15:0] bias_buffer_V_q0;
wire   [4:0] bias_buffer_V_address1;
reg    bias_buffer_V_ce1;
reg    bias_buffer_V_we1;
reg    Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_ce0;
wire   [63:0] Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_q0;
reg   [4:0] Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_address1;
reg    Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_ce1;
reg   [7:0] Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_we1;
wire   [63:0] Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_q1;
reg    Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_ce0;
wire   [63:0] Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_q0;
reg   [9:0] Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_address1;
reg    Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_ce1;
reg    Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_we1;
wire   [63:0] Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_q1;
reg    Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_ce0;
wire   [63:0] Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_q0;
reg   [4:0] Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_address1;
reg    Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_ce1;
reg   [7:0] Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_we1;
wire   [63:0] Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_q1;
reg    Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_ce0;
wire   [63:0] Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_q0;
reg   [9:0] Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_address1;
reg    Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_ce1;
reg    Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_we1;
wire   [63:0] Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_q1;
reg    B1_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    B1_blk_n_R;
wire    ap_CS_fsm_state10;
reg   [63:0] B1_addr_reg_481;
wire   [63:0] loop_index_i_cast_fu_376_p1;
reg   [63:0] loop_index_i_cast_reg_523;
wire    ap_CS_fsm_state9;
reg   [15:0] B1_addr_read_reg_538;
wire   [63:0] loop_index_i4_cast_fu_405_p1;
reg   [63:0] loop_index_i4_cast_reg_543;
wire    ap_CS_fsm_state12;
wire   [0:0] exitcond93_fu_410_p2;
wire   [31:0] add_ln185_fu_432_p2;
reg   [31:0] add_ln185_reg_563;
wire    ap_CS_fsm_state15;
wire   [30:0] In_LP_now_2_fu_449_p2;
reg   [30:0] In_LP_now_2_reg_571;
wire    ap_CS_fsm_state16;
wire   [24:0] add_ln187_fu_459_p2;
reg   [24:0] add_ln187_reg_576;
wire   [0:0] icmp_ln185_fu_444_p2;
wire    grp_Load_Input_fu_282_ap_start;
wire    grp_Load_Input_fu_282_ap_done;
wire    grp_Load_Input_fu_282_ap_idle;
wire    grp_Load_Input_fu_282_ap_ready;
wire    grp_Load_Input_fu_282_m_axi_IN1_AWVALID;
wire   [63:0] grp_Load_Input_fu_282_m_axi_IN1_AWADDR;
wire   [0:0] grp_Load_Input_fu_282_m_axi_IN1_AWID;
wire   [31:0] grp_Load_Input_fu_282_m_axi_IN1_AWLEN;
wire   [2:0] grp_Load_Input_fu_282_m_axi_IN1_AWSIZE;
wire   [1:0] grp_Load_Input_fu_282_m_axi_IN1_AWBURST;
wire   [1:0] grp_Load_Input_fu_282_m_axi_IN1_AWLOCK;
wire   [3:0] grp_Load_Input_fu_282_m_axi_IN1_AWCACHE;
wire   [2:0] grp_Load_Input_fu_282_m_axi_IN1_AWPROT;
wire   [3:0] grp_Load_Input_fu_282_m_axi_IN1_AWQOS;
wire   [3:0] grp_Load_Input_fu_282_m_axi_IN1_AWREGION;
wire   [0:0] grp_Load_Input_fu_282_m_axi_IN1_AWUSER;
wire    grp_Load_Input_fu_282_m_axi_IN1_WVALID;
wire   [15:0] grp_Load_Input_fu_282_m_axi_IN1_WDATA;
wire   [1:0] grp_Load_Input_fu_282_m_axi_IN1_WSTRB;
wire    grp_Load_Input_fu_282_m_axi_IN1_WLAST;
wire   [0:0] grp_Load_Input_fu_282_m_axi_IN1_WID;
wire   [0:0] grp_Load_Input_fu_282_m_axi_IN1_WUSER;
wire    grp_Load_Input_fu_282_m_axi_IN1_ARVALID;
wire   [63:0] grp_Load_Input_fu_282_m_axi_IN1_ARADDR;
wire   [0:0] grp_Load_Input_fu_282_m_axi_IN1_ARID;
wire   [31:0] grp_Load_Input_fu_282_m_axi_IN1_ARLEN;
wire   [2:0] grp_Load_Input_fu_282_m_axi_IN1_ARSIZE;
wire   [1:0] grp_Load_Input_fu_282_m_axi_IN1_ARBURST;
wire   [1:0] grp_Load_Input_fu_282_m_axi_IN1_ARLOCK;
wire   [3:0] grp_Load_Input_fu_282_m_axi_IN1_ARCACHE;
wire   [2:0] grp_Load_Input_fu_282_m_axi_IN1_ARPROT;
wire   [3:0] grp_Load_Input_fu_282_m_axi_IN1_ARQOS;
wire   [3:0] grp_Load_Input_fu_282_m_axi_IN1_ARREGION;
wire   [0:0] grp_Load_Input_fu_282_m_axi_IN1_ARUSER;
wire    grp_Load_Input_fu_282_m_axi_IN1_RREADY;
wire    grp_Load_Input_fu_282_m_axi_IN1_BREADY;
wire   [4:0] grp_Load_Input_fu_282_input_buffer_address1;
wire    grp_Load_Input_fu_282_input_buffer_ce1;
wire   [7:0] grp_Load_Input_fu_282_input_buffer_we1;
wire   [63:0] grp_Load_Input_fu_282_input_buffer_d1;
reg   [24:0] grp_Load_Input_fu_282_In_LP_now;
wire    grp_Load_Weight_fu_295_ap_start;
wire    grp_Load_Weight_fu_295_ap_done;
wire    grp_Load_Weight_fu_295_ap_idle;
wire    grp_Load_Weight_fu_295_ap_ready;
wire    grp_Load_Weight_fu_295_m_axi_W1_AWVALID;
wire   [63:0] grp_Load_Weight_fu_295_m_axi_W1_AWADDR;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W1_AWID;
wire   [31:0] grp_Load_Weight_fu_295_m_axi_W1_AWLEN;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W1_AWSIZE;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W1_AWBURST;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W1_AWLOCK;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W1_AWCACHE;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W1_AWPROT;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W1_AWQOS;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W1_AWREGION;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W1_AWUSER;
wire    grp_Load_Weight_fu_295_m_axi_W1_WVALID;
wire   [15:0] grp_Load_Weight_fu_295_m_axi_W1_WDATA;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W1_WSTRB;
wire    grp_Load_Weight_fu_295_m_axi_W1_WLAST;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W1_WID;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W1_WUSER;
wire    grp_Load_Weight_fu_295_m_axi_W1_ARVALID;
wire   [63:0] grp_Load_Weight_fu_295_m_axi_W1_ARADDR;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W1_ARID;
wire   [31:0] grp_Load_Weight_fu_295_m_axi_W1_ARLEN;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W1_ARSIZE;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W1_ARBURST;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W1_ARLOCK;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W1_ARCACHE;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W1_ARPROT;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W1_ARQOS;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W1_ARREGION;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W1_ARUSER;
wire    grp_Load_Weight_fu_295_m_axi_W1_RREADY;
wire    grp_Load_Weight_fu_295_m_axi_W1_BREADY;
wire    grp_Load_Weight_fu_295_m_axi_W2_AWVALID;
wire   [63:0] grp_Load_Weight_fu_295_m_axi_W2_AWADDR;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W2_AWID;
wire   [31:0] grp_Load_Weight_fu_295_m_axi_W2_AWLEN;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W2_AWSIZE;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W2_AWBURST;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W2_AWLOCK;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W2_AWCACHE;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W2_AWPROT;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W2_AWQOS;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W2_AWREGION;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W2_AWUSER;
wire    grp_Load_Weight_fu_295_m_axi_W2_WVALID;
wire   [15:0] grp_Load_Weight_fu_295_m_axi_W2_WDATA;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W2_WSTRB;
wire    grp_Load_Weight_fu_295_m_axi_W2_WLAST;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W2_WID;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W2_WUSER;
wire    grp_Load_Weight_fu_295_m_axi_W2_ARVALID;
wire   [63:0] grp_Load_Weight_fu_295_m_axi_W2_ARADDR;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W2_ARID;
wire   [31:0] grp_Load_Weight_fu_295_m_axi_W2_ARLEN;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W2_ARSIZE;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W2_ARBURST;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W2_ARLOCK;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W2_ARCACHE;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W2_ARPROT;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W2_ARQOS;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W2_ARREGION;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W2_ARUSER;
wire    grp_Load_Weight_fu_295_m_axi_W2_RREADY;
wire    grp_Load_Weight_fu_295_m_axi_W2_BREADY;
wire    grp_Load_Weight_fu_295_m_axi_W3_AWVALID;
wire   [63:0] grp_Load_Weight_fu_295_m_axi_W3_AWADDR;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W3_AWID;
wire   [31:0] grp_Load_Weight_fu_295_m_axi_W3_AWLEN;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W3_AWSIZE;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W3_AWBURST;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W3_AWLOCK;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W3_AWCACHE;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W3_AWPROT;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W3_AWQOS;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W3_AWREGION;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W3_AWUSER;
wire    grp_Load_Weight_fu_295_m_axi_W3_WVALID;
wire   [15:0] grp_Load_Weight_fu_295_m_axi_W3_WDATA;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W3_WSTRB;
wire    grp_Load_Weight_fu_295_m_axi_W3_WLAST;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W3_WID;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W3_WUSER;
wire    grp_Load_Weight_fu_295_m_axi_W3_ARVALID;
wire   [63:0] grp_Load_Weight_fu_295_m_axi_W3_ARADDR;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W3_ARID;
wire   [31:0] grp_Load_Weight_fu_295_m_axi_W3_ARLEN;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W3_ARSIZE;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W3_ARBURST;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W3_ARLOCK;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W3_ARCACHE;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W3_ARPROT;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W3_ARQOS;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W3_ARREGION;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W3_ARUSER;
wire    grp_Load_Weight_fu_295_m_axi_W3_RREADY;
wire    grp_Load_Weight_fu_295_m_axi_W3_BREADY;
wire    grp_Load_Weight_fu_295_m_axi_W4_AWVALID;
wire   [63:0] grp_Load_Weight_fu_295_m_axi_W4_AWADDR;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W4_AWID;
wire   [31:0] grp_Load_Weight_fu_295_m_axi_W4_AWLEN;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W4_AWSIZE;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W4_AWBURST;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W4_AWLOCK;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W4_AWCACHE;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W4_AWPROT;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W4_AWQOS;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W4_AWREGION;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W4_AWUSER;
wire    grp_Load_Weight_fu_295_m_axi_W4_WVALID;
wire   [15:0] grp_Load_Weight_fu_295_m_axi_W4_WDATA;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W4_WSTRB;
wire    grp_Load_Weight_fu_295_m_axi_W4_WLAST;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W4_WID;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W4_WUSER;
wire    grp_Load_Weight_fu_295_m_axi_W4_ARVALID;
wire   [63:0] grp_Load_Weight_fu_295_m_axi_W4_ARADDR;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W4_ARID;
wire   [31:0] grp_Load_Weight_fu_295_m_axi_W4_ARLEN;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W4_ARSIZE;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W4_ARBURST;
wire   [1:0] grp_Load_Weight_fu_295_m_axi_W4_ARLOCK;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W4_ARCACHE;
wire   [2:0] grp_Load_Weight_fu_295_m_axi_W4_ARPROT;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W4_ARQOS;
wire   [3:0] grp_Load_Weight_fu_295_m_axi_W4_ARREGION;
wire   [0:0] grp_Load_Weight_fu_295_m_axi_W4_ARUSER;
wire    grp_Load_Weight_fu_295_m_axi_W4_RREADY;
wire    grp_Load_Weight_fu_295_m_axi_W4_BREADY;
wire   [9:0] grp_Load_Weight_fu_295_weight_buffer_address1;
wire    grp_Load_Weight_fu_295_weight_buffer_ce1;
wire    grp_Load_Weight_fu_295_weight_buffer_we1;
wire   [63:0] grp_Load_Weight_fu_295_weight_buffer_d1;
reg   [24:0] grp_Load_Weight_fu_295_In_LP_now;
wire    grp_Compute_fu_318_ap_start;
wire    grp_Compute_fu_318_ap_done;
wire    grp_Compute_fu_318_ap_idle;
wire    grp_Compute_fu_318_ap_ready;
wire   [4:0] grp_Compute_fu_318_input_buffer_address0;
wire    grp_Compute_fu_318_input_buffer_ce0;
reg   [63:0] grp_Compute_fu_318_input_buffer_q0;
wire   [4:0] grp_Compute_fu_318_input_buffer_address1;
wire    grp_Compute_fu_318_input_buffer_ce1;
reg   [63:0] grp_Compute_fu_318_input_buffer_q1;
wire   [9:0] grp_Compute_fu_318_weight_buffer_address0;
wire    grp_Compute_fu_318_weight_buffer_ce0;
reg   [63:0] grp_Compute_fu_318_weight_buffer_q0;
wire   [9:0] grp_Compute_fu_318_weight_buffer_address1;
wire    grp_Compute_fu_318_weight_buffer_ce1;
reg   [63:0] grp_Compute_fu_318_weight_buffer_q1;
wire   [4:0] grp_Compute_fu_318_output_buffer_address0;
wire    grp_Compute_fu_318_output_buffer_ce0;
wire   [4:0] grp_Compute_fu_318_output_buffer_address1;
wire    grp_Compute_fu_318_output_buffer_ce1;
wire    grp_Compute_fu_318_output_buffer_we1;
wire   [15:0] grp_Compute_fu_318_output_buffer_d1;
wire   [0:0] ap_phi_mux_pp_phi_fu_261_p4;
reg   [0:0] pp_reg_257;
reg    ap_block_state15_on_subcall_done;
reg   [0:0] ap_phi_mux_pp_1_phi_fu_273_p4;
wire    ap_CS_fsm_state18;
reg    ap_block_state18_on_subcall_done;
reg    grp_Load_Input_fu_282_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
reg    grp_Load_Weight_fu_295_ap_start_reg;
reg    grp_Compute_fu_318_ap_start_reg;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire  signed [63:0] sext_ln7_1_fu_358_p1;
reg   [5:0] loop_index_i_fu_136;
wire   [5:0] empty_215_fu_386_p2;
wire   [0:0] exitcond104_fu_380_p2;
reg   [5:0] loop_index_i4_fu_140;
wire   [5:0] empty_217_fu_416_p2;
reg   [30:0] In_LP_now_fu_144;
wire   [32:0] shl_ln7_fu_330_p3;
wire  signed [63:0] sext_ln7_fu_338_p1;
wire   [63:0] add_ln7_fu_342_p2;
wire   [62:0] trunc_ln7_fu_348_p4;
wire   [31:0] zext_ln185_fu_440_p1;
wire   [24:0] trunc_ln193_fu_455_p1;
reg    ap_block_state20_on_subcall_done;
reg   [19:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 grp_Load_Input_fu_282_ap_start_reg = 1'b0;
#0 grp_Load_Weight_fu_295_ap_start_reg = 1'b0;
#0 grp_Compute_fu_318_ap_start_reg = 1'b0;
end

Dense_Load_and_Compute_bias_buffer_V_RAM_2P_BRAM_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
bias_buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_buffer_V_address0),
    .ce0(bias_buffer_V_ce0),
    .q0(bias_buffer_V_q0),
    .address1(bias_buffer_V_address1),
    .ce1(bias_buffer_V_ce1),
    .we1(bias_buffer_V_we1),
    .d1(B1_addr_read_reg_538)
);

Dense_Load_and_Compute_Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixebkb #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_Compute_fu_318_input_buffer_address0),
    .ce0(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_ce0),
    .q0(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_q0),
    .address1(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_address1),
    .ce1(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_ce1),
    .we1(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_we1),
    .d1(grp_Load_Input_fu_282_input_buffer_d1),
    .q1(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_q1)
);

Dense_Load_and_Compute_Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixecud #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_Compute_fu_318_weight_buffer_address0),
    .ce0(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_ce0),
    .q0(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_q0),
    .address1(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_address1),
    .ce1(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_ce1),
    .we1(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_we1),
    .d1(grp_Load_Weight_fu_295_weight_buffer_d1),
    .q1(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_q1)
);

Dense_Load_and_Compute_Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixebkb #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_Compute_fu_318_input_buffer_address0),
    .ce0(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_ce0),
    .q0(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_q0),
    .address1(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_address1),
    .ce1(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_ce1),
    .we1(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_we1),
    .d1(grp_Load_Input_fu_282_input_buffer_d1),
    .q1(Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_q1)
);

Dense_Load_and_Compute_Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixecud #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_Compute_fu_318_weight_buffer_address0),
    .ce0(Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_ce0),
    .q0(Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_q0),
    .address1(Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_address1),
    .ce1(Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_ce1),
    .we1(Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_we1),
    .d1(grp_Load_Weight_fu_295_weight_buffer_d1),
    .q1(Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_q1)
);

Dense_Load_Input grp_Load_Input_fu_282(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Load_Input_fu_282_ap_start),
    .ap_done(grp_Load_Input_fu_282_ap_done),
    .ap_idle(grp_Load_Input_fu_282_ap_idle),
    .ap_ready(grp_Load_Input_fu_282_ap_ready),
    .m_axi_IN1_AWVALID(grp_Load_Input_fu_282_m_axi_IN1_AWVALID),
    .m_axi_IN1_AWREADY(1'b0),
    .m_axi_IN1_AWADDR(grp_Load_Input_fu_282_m_axi_IN1_AWADDR),
    .m_axi_IN1_AWID(grp_Load_Input_fu_282_m_axi_IN1_AWID),
    .m_axi_IN1_AWLEN(grp_Load_Input_fu_282_m_axi_IN1_AWLEN),
    .m_axi_IN1_AWSIZE(grp_Load_Input_fu_282_m_axi_IN1_AWSIZE),
    .m_axi_IN1_AWBURST(grp_Load_Input_fu_282_m_axi_IN1_AWBURST),
    .m_axi_IN1_AWLOCK(grp_Load_Input_fu_282_m_axi_IN1_AWLOCK),
    .m_axi_IN1_AWCACHE(grp_Load_Input_fu_282_m_axi_IN1_AWCACHE),
    .m_axi_IN1_AWPROT(grp_Load_Input_fu_282_m_axi_IN1_AWPROT),
    .m_axi_IN1_AWQOS(grp_Load_Input_fu_282_m_axi_IN1_AWQOS),
    .m_axi_IN1_AWREGION(grp_Load_Input_fu_282_m_axi_IN1_AWREGION),
    .m_axi_IN1_AWUSER(grp_Load_Input_fu_282_m_axi_IN1_AWUSER),
    .m_axi_IN1_WVALID(grp_Load_Input_fu_282_m_axi_IN1_WVALID),
    .m_axi_IN1_WREADY(1'b0),
    .m_axi_IN1_WDATA(grp_Load_Input_fu_282_m_axi_IN1_WDATA),
    .m_axi_IN1_WSTRB(grp_Load_Input_fu_282_m_axi_IN1_WSTRB),
    .m_axi_IN1_WLAST(grp_Load_Input_fu_282_m_axi_IN1_WLAST),
    .m_axi_IN1_WID(grp_Load_Input_fu_282_m_axi_IN1_WID),
    .m_axi_IN1_WUSER(grp_Load_Input_fu_282_m_axi_IN1_WUSER),
    .m_axi_IN1_ARVALID(grp_Load_Input_fu_282_m_axi_IN1_ARVALID),
    .m_axi_IN1_ARREADY(m_axi_IN1_ARREADY),
    .m_axi_IN1_ARADDR(grp_Load_Input_fu_282_m_axi_IN1_ARADDR),
    .m_axi_IN1_ARID(grp_Load_Input_fu_282_m_axi_IN1_ARID),
    .m_axi_IN1_ARLEN(grp_Load_Input_fu_282_m_axi_IN1_ARLEN),
    .m_axi_IN1_ARSIZE(grp_Load_Input_fu_282_m_axi_IN1_ARSIZE),
    .m_axi_IN1_ARBURST(grp_Load_Input_fu_282_m_axi_IN1_ARBURST),
    .m_axi_IN1_ARLOCK(grp_Load_Input_fu_282_m_axi_IN1_ARLOCK),
    .m_axi_IN1_ARCACHE(grp_Load_Input_fu_282_m_axi_IN1_ARCACHE),
    .m_axi_IN1_ARPROT(grp_Load_Input_fu_282_m_axi_IN1_ARPROT),
    .m_axi_IN1_ARQOS(grp_Load_Input_fu_282_m_axi_IN1_ARQOS),
    .m_axi_IN1_ARREGION(grp_Load_Input_fu_282_m_axi_IN1_ARREGION),
    .m_axi_IN1_ARUSER(grp_Load_Input_fu_282_m_axi_IN1_ARUSER),
    .m_axi_IN1_RVALID(m_axi_IN1_RVALID),
    .m_axi_IN1_RREADY(grp_Load_Input_fu_282_m_axi_IN1_RREADY),
    .m_axi_IN1_RDATA(m_axi_IN1_RDATA),
    .m_axi_IN1_RLAST(m_axi_IN1_RLAST),
    .m_axi_IN1_RID(m_axi_IN1_RID),
    .m_axi_IN1_RFIFONUM(m_axi_IN1_RFIFONUM),
    .m_axi_IN1_RUSER(m_axi_IN1_RUSER),
    .m_axi_IN1_RRESP(m_axi_IN1_RRESP),
    .m_axi_IN1_BVALID(1'b0),
    .m_axi_IN1_BREADY(grp_Load_Input_fu_282_m_axi_IN1_BREADY),
    .m_axi_IN1_BRESP(2'd0),
    .m_axi_IN1_BID(1'd0),
    .m_axi_IN1_BUSER(1'd0),
    .feature_in(feature_in),
    .input_buffer_address1(grp_Load_Input_fu_282_input_buffer_address1),
    .input_buffer_ce1(grp_Load_Input_fu_282_input_buffer_ce1),
    .input_buffer_we1(grp_Load_Input_fu_282_input_buffer_we1),
    .input_buffer_d1(grp_Load_Input_fu_282_input_buffer_d1),
    .In_LP_now(grp_Load_Input_fu_282_In_LP_now),
    .CHin(CHin)
);

Dense_Load_Weight grp_Load_Weight_fu_295(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Load_Weight_fu_295_ap_start),
    .ap_done(grp_Load_Weight_fu_295_ap_done),
    .ap_idle(grp_Load_Weight_fu_295_ap_idle),
    .ap_ready(grp_Load_Weight_fu_295_ap_ready),
    .m_axi_W1_AWVALID(grp_Load_Weight_fu_295_m_axi_W1_AWVALID),
    .m_axi_W1_AWREADY(1'b0),
    .m_axi_W1_AWADDR(grp_Load_Weight_fu_295_m_axi_W1_AWADDR),
    .m_axi_W1_AWID(grp_Load_Weight_fu_295_m_axi_W1_AWID),
    .m_axi_W1_AWLEN(grp_Load_Weight_fu_295_m_axi_W1_AWLEN),
    .m_axi_W1_AWSIZE(grp_Load_Weight_fu_295_m_axi_W1_AWSIZE),
    .m_axi_W1_AWBURST(grp_Load_Weight_fu_295_m_axi_W1_AWBURST),
    .m_axi_W1_AWLOCK(grp_Load_Weight_fu_295_m_axi_W1_AWLOCK),
    .m_axi_W1_AWCACHE(grp_Load_Weight_fu_295_m_axi_W1_AWCACHE),
    .m_axi_W1_AWPROT(grp_Load_Weight_fu_295_m_axi_W1_AWPROT),
    .m_axi_W1_AWQOS(grp_Load_Weight_fu_295_m_axi_W1_AWQOS),
    .m_axi_W1_AWREGION(grp_Load_Weight_fu_295_m_axi_W1_AWREGION),
    .m_axi_W1_AWUSER(grp_Load_Weight_fu_295_m_axi_W1_AWUSER),
    .m_axi_W1_WVALID(grp_Load_Weight_fu_295_m_axi_W1_WVALID),
    .m_axi_W1_WREADY(1'b0),
    .m_axi_W1_WDATA(grp_Load_Weight_fu_295_m_axi_W1_WDATA),
    .m_axi_W1_WSTRB(grp_Load_Weight_fu_295_m_axi_W1_WSTRB),
    .m_axi_W1_WLAST(grp_Load_Weight_fu_295_m_axi_W1_WLAST),
    .m_axi_W1_WID(grp_Load_Weight_fu_295_m_axi_W1_WID),
    .m_axi_W1_WUSER(grp_Load_Weight_fu_295_m_axi_W1_WUSER),
    .m_axi_W1_ARVALID(grp_Load_Weight_fu_295_m_axi_W1_ARVALID),
    .m_axi_W1_ARREADY(m_axi_W1_ARREADY),
    .m_axi_W1_ARADDR(grp_Load_Weight_fu_295_m_axi_W1_ARADDR),
    .m_axi_W1_ARID(grp_Load_Weight_fu_295_m_axi_W1_ARID),
    .m_axi_W1_ARLEN(grp_Load_Weight_fu_295_m_axi_W1_ARLEN),
    .m_axi_W1_ARSIZE(grp_Load_Weight_fu_295_m_axi_W1_ARSIZE),
    .m_axi_W1_ARBURST(grp_Load_Weight_fu_295_m_axi_W1_ARBURST),
    .m_axi_W1_ARLOCK(grp_Load_Weight_fu_295_m_axi_W1_ARLOCK),
    .m_axi_W1_ARCACHE(grp_Load_Weight_fu_295_m_axi_W1_ARCACHE),
    .m_axi_W1_ARPROT(grp_Load_Weight_fu_295_m_axi_W1_ARPROT),
    .m_axi_W1_ARQOS(grp_Load_Weight_fu_295_m_axi_W1_ARQOS),
    .m_axi_W1_ARREGION(grp_Load_Weight_fu_295_m_axi_W1_ARREGION),
    .m_axi_W1_ARUSER(grp_Load_Weight_fu_295_m_axi_W1_ARUSER),
    .m_axi_W1_RVALID(m_axi_W1_RVALID),
    .m_axi_W1_RREADY(grp_Load_Weight_fu_295_m_axi_W1_RREADY),
    .m_axi_W1_RDATA(m_axi_W1_RDATA),
    .m_axi_W1_RLAST(m_axi_W1_RLAST),
    .m_axi_W1_RID(m_axi_W1_RID),
    .m_axi_W1_RFIFONUM(m_axi_W1_RFIFONUM),
    .m_axi_W1_RUSER(m_axi_W1_RUSER),
    .m_axi_W1_RRESP(m_axi_W1_RRESP),
    .m_axi_W1_BVALID(1'b0),
    .m_axi_W1_BREADY(grp_Load_Weight_fu_295_m_axi_W1_BREADY),
    .m_axi_W1_BRESP(2'd0),
    .m_axi_W1_BID(1'd0),
    .m_axi_W1_BUSER(1'd0),
    .m_axi_W2_AWVALID(grp_Load_Weight_fu_295_m_axi_W2_AWVALID),
    .m_axi_W2_AWREADY(1'b0),
    .m_axi_W2_AWADDR(grp_Load_Weight_fu_295_m_axi_W2_AWADDR),
    .m_axi_W2_AWID(grp_Load_Weight_fu_295_m_axi_W2_AWID),
    .m_axi_W2_AWLEN(grp_Load_Weight_fu_295_m_axi_W2_AWLEN),
    .m_axi_W2_AWSIZE(grp_Load_Weight_fu_295_m_axi_W2_AWSIZE),
    .m_axi_W2_AWBURST(grp_Load_Weight_fu_295_m_axi_W2_AWBURST),
    .m_axi_W2_AWLOCK(grp_Load_Weight_fu_295_m_axi_W2_AWLOCK),
    .m_axi_W2_AWCACHE(grp_Load_Weight_fu_295_m_axi_W2_AWCACHE),
    .m_axi_W2_AWPROT(grp_Load_Weight_fu_295_m_axi_W2_AWPROT),
    .m_axi_W2_AWQOS(grp_Load_Weight_fu_295_m_axi_W2_AWQOS),
    .m_axi_W2_AWREGION(grp_Load_Weight_fu_295_m_axi_W2_AWREGION),
    .m_axi_W2_AWUSER(grp_Load_Weight_fu_295_m_axi_W2_AWUSER),
    .m_axi_W2_WVALID(grp_Load_Weight_fu_295_m_axi_W2_WVALID),
    .m_axi_W2_WREADY(1'b0),
    .m_axi_W2_WDATA(grp_Load_Weight_fu_295_m_axi_W2_WDATA),
    .m_axi_W2_WSTRB(grp_Load_Weight_fu_295_m_axi_W2_WSTRB),
    .m_axi_W2_WLAST(grp_Load_Weight_fu_295_m_axi_W2_WLAST),
    .m_axi_W2_WID(grp_Load_Weight_fu_295_m_axi_W2_WID),
    .m_axi_W2_WUSER(grp_Load_Weight_fu_295_m_axi_W2_WUSER),
    .m_axi_W2_ARVALID(grp_Load_Weight_fu_295_m_axi_W2_ARVALID),
    .m_axi_W2_ARREADY(m_axi_W2_ARREADY),
    .m_axi_W2_ARADDR(grp_Load_Weight_fu_295_m_axi_W2_ARADDR),
    .m_axi_W2_ARID(grp_Load_Weight_fu_295_m_axi_W2_ARID),
    .m_axi_W2_ARLEN(grp_Load_Weight_fu_295_m_axi_W2_ARLEN),
    .m_axi_W2_ARSIZE(grp_Load_Weight_fu_295_m_axi_W2_ARSIZE),
    .m_axi_W2_ARBURST(grp_Load_Weight_fu_295_m_axi_W2_ARBURST),
    .m_axi_W2_ARLOCK(grp_Load_Weight_fu_295_m_axi_W2_ARLOCK),
    .m_axi_W2_ARCACHE(grp_Load_Weight_fu_295_m_axi_W2_ARCACHE),
    .m_axi_W2_ARPROT(grp_Load_Weight_fu_295_m_axi_W2_ARPROT),
    .m_axi_W2_ARQOS(grp_Load_Weight_fu_295_m_axi_W2_ARQOS),
    .m_axi_W2_ARREGION(grp_Load_Weight_fu_295_m_axi_W2_ARREGION),
    .m_axi_W2_ARUSER(grp_Load_Weight_fu_295_m_axi_W2_ARUSER),
    .m_axi_W2_RVALID(m_axi_W2_RVALID),
    .m_axi_W2_RREADY(grp_Load_Weight_fu_295_m_axi_W2_RREADY),
    .m_axi_W2_RDATA(m_axi_W2_RDATA),
    .m_axi_W2_RLAST(m_axi_W2_RLAST),
    .m_axi_W2_RID(m_axi_W2_RID),
    .m_axi_W2_RFIFONUM(m_axi_W2_RFIFONUM),
    .m_axi_W2_RUSER(m_axi_W2_RUSER),
    .m_axi_W2_RRESP(m_axi_W2_RRESP),
    .m_axi_W2_BVALID(1'b0),
    .m_axi_W2_BREADY(grp_Load_Weight_fu_295_m_axi_W2_BREADY),
    .m_axi_W2_BRESP(2'd0),
    .m_axi_W2_BID(1'd0),
    .m_axi_W2_BUSER(1'd0),
    .m_axi_W3_AWVALID(grp_Load_Weight_fu_295_m_axi_W3_AWVALID),
    .m_axi_W3_AWREADY(1'b0),
    .m_axi_W3_AWADDR(grp_Load_Weight_fu_295_m_axi_W3_AWADDR),
    .m_axi_W3_AWID(grp_Load_Weight_fu_295_m_axi_W3_AWID),
    .m_axi_W3_AWLEN(grp_Load_Weight_fu_295_m_axi_W3_AWLEN),
    .m_axi_W3_AWSIZE(grp_Load_Weight_fu_295_m_axi_W3_AWSIZE),
    .m_axi_W3_AWBURST(grp_Load_Weight_fu_295_m_axi_W3_AWBURST),
    .m_axi_W3_AWLOCK(grp_Load_Weight_fu_295_m_axi_W3_AWLOCK),
    .m_axi_W3_AWCACHE(grp_Load_Weight_fu_295_m_axi_W3_AWCACHE),
    .m_axi_W3_AWPROT(grp_Load_Weight_fu_295_m_axi_W3_AWPROT),
    .m_axi_W3_AWQOS(grp_Load_Weight_fu_295_m_axi_W3_AWQOS),
    .m_axi_W3_AWREGION(grp_Load_Weight_fu_295_m_axi_W3_AWREGION),
    .m_axi_W3_AWUSER(grp_Load_Weight_fu_295_m_axi_W3_AWUSER),
    .m_axi_W3_WVALID(grp_Load_Weight_fu_295_m_axi_W3_WVALID),
    .m_axi_W3_WREADY(1'b0),
    .m_axi_W3_WDATA(grp_Load_Weight_fu_295_m_axi_W3_WDATA),
    .m_axi_W3_WSTRB(grp_Load_Weight_fu_295_m_axi_W3_WSTRB),
    .m_axi_W3_WLAST(grp_Load_Weight_fu_295_m_axi_W3_WLAST),
    .m_axi_W3_WID(grp_Load_Weight_fu_295_m_axi_W3_WID),
    .m_axi_W3_WUSER(grp_Load_Weight_fu_295_m_axi_W3_WUSER),
    .m_axi_W3_ARVALID(grp_Load_Weight_fu_295_m_axi_W3_ARVALID),
    .m_axi_W3_ARREADY(m_axi_W3_ARREADY),
    .m_axi_W3_ARADDR(grp_Load_Weight_fu_295_m_axi_W3_ARADDR),
    .m_axi_W3_ARID(grp_Load_Weight_fu_295_m_axi_W3_ARID),
    .m_axi_W3_ARLEN(grp_Load_Weight_fu_295_m_axi_W3_ARLEN),
    .m_axi_W3_ARSIZE(grp_Load_Weight_fu_295_m_axi_W3_ARSIZE),
    .m_axi_W3_ARBURST(grp_Load_Weight_fu_295_m_axi_W3_ARBURST),
    .m_axi_W3_ARLOCK(grp_Load_Weight_fu_295_m_axi_W3_ARLOCK),
    .m_axi_W3_ARCACHE(grp_Load_Weight_fu_295_m_axi_W3_ARCACHE),
    .m_axi_W3_ARPROT(grp_Load_Weight_fu_295_m_axi_W3_ARPROT),
    .m_axi_W3_ARQOS(grp_Load_Weight_fu_295_m_axi_W3_ARQOS),
    .m_axi_W3_ARREGION(grp_Load_Weight_fu_295_m_axi_W3_ARREGION),
    .m_axi_W3_ARUSER(grp_Load_Weight_fu_295_m_axi_W3_ARUSER),
    .m_axi_W3_RVALID(m_axi_W3_RVALID),
    .m_axi_W3_RREADY(grp_Load_Weight_fu_295_m_axi_W3_RREADY),
    .m_axi_W3_RDATA(m_axi_W3_RDATA),
    .m_axi_W3_RLAST(m_axi_W3_RLAST),
    .m_axi_W3_RID(m_axi_W3_RID),
    .m_axi_W3_RFIFONUM(m_axi_W3_RFIFONUM),
    .m_axi_W3_RUSER(m_axi_W3_RUSER),
    .m_axi_W3_RRESP(m_axi_W3_RRESP),
    .m_axi_W3_BVALID(1'b0),
    .m_axi_W3_BREADY(grp_Load_Weight_fu_295_m_axi_W3_BREADY),
    .m_axi_W3_BRESP(2'd0),
    .m_axi_W3_BID(1'd0),
    .m_axi_W3_BUSER(1'd0),
    .m_axi_W4_AWVALID(grp_Load_Weight_fu_295_m_axi_W4_AWVALID),
    .m_axi_W4_AWREADY(1'b0),
    .m_axi_W4_AWADDR(grp_Load_Weight_fu_295_m_axi_W4_AWADDR),
    .m_axi_W4_AWID(grp_Load_Weight_fu_295_m_axi_W4_AWID),
    .m_axi_W4_AWLEN(grp_Load_Weight_fu_295_m_axi_W4_AWLEN),
    .m_axi_W4_AWSIZE(grp_Load_Weight_fu_295_m_axi_W4_AWSIZE),
    .m_axi_W4_AWBURST(grp_Load_Weight_fu_295_m_axi_W4_AWBURST),
    .m_axi_W4_AWLOCK(grp_Load_Weight_fu_295_m_axi_W4_AWLOCK),
    .m_axi_W4_AWCACHE(grp_Load_Weight_fu_295_m_axi_W4_AWCACHE),
    .m_axi_W4_AWPROT(grp_Load_Weight_fu_295_m_axi_W4_AWPROT),
    .m_axi_W4_AWQOS(grp_Load_Weight_fu_295_m_axi_W4_AWQOS),
    .m_axi_W4_AWREGION(grp_Load_Weight_fu_295_m_axi_W4_AWREGION),
    .m_axi_W4_AWUSER(grp_Load_Weight_fu_295_m_axi_W4_AWUSER),
    .m_axi_W4_WVALID(grp_Load_Weight_fu_295_m_axi_W4_WVALID),
    .m_axi_W4_WREADY(1'b0),
    .m_axi_W4_WDATA(grp_Load_Weight_fu_295_m_axi_W4_WDATA),
    .m_axi_W4_WSTRB(grp_Load_Weight_fu_295_m_axi_W4_WSTRB),
    .m_axi_W4_WLAST(grp_Load_Weight_fu_295_m_axi_W4_WLAST),
    .m_axi_W4_WID(grp_Load_Weight_fu_295_m_axi_W4_WID),
    .m_axi_W4_WUSER(grp_Load_Weight_fu_295_m_axi_W4_WUSER),
    .m_axi_W4_ARVALID(grp_Load_Weight_fu_295_m_axi_W4_ARVALID),
    .m_axi_W4_ARREADY(m_axi_W4_ARREADY),
    .m_axi_W4_ARADDR(grp_Load_Weight_fu_295_m_axi_W4_ARADDR),
    .m_axi_W4_ARID(grp_Load_Weight_fu_295_m_axi_W4_ARID),
    .m_axi_W4_ARLEN(grp_Load_Weight_fu_295_m_axi_W4_ARLEN),
    .m_axi_W4_ARSIZE(grp_Load_Weight_fu_295_m_axi_W4_ARSIZE),
    .m_axi_W4_ARBURST(grp_Load_Weight_fu_295_m_axi_W4_ARBURST),
    .m_axi_W4_ARLOCK(grp_Load_Weight_fu_295_m_axi_W4_ARLOCK),
    .m_axi_W4_ARCACHE(grp_Load_Weight_fu_295_m_axi_W4_ARCACHE),
    .m_axi_W4_ARPROT(grp_Load_Weight_fu_295_m_axi_W4_ARPROT),
    .m_axi_W4_ARQOS(grp_Load_Weight_fu_295_m_axi_W4_ARQOS),
    .m_axi_W4_ARREGION(grp_Load_Weight_fu_295_m_axi_W4_ARREGION),
    .m_axi_W4_ARUSER(grp_Load_Weight_fu_295_m_axi_W4_ARUSER),
    .m_axi_W4_RVALID(m_axi_W4_RVALID),
    .m_axi_W4_RREADY(grp_Load_Weight_fu_295_m_axi_W4_RREADY),
    .m_axi_W4_RDATA(m_axi_W4_RDATA),
    .m_axi_W4_RLAST(m_axi_W4_RLAST),
    .m_axi_W4_RID(m_axi_W4_RID),
    .m_axi_W4_RFIFONUM(m_axi_W4_RFIFONUM),
    .m_axi_W4_RUSER(m_axi_W4_RUSER),
    .m_axi_W4_RRESP(m_axi_W4_RRESP),
    .m_axi_W4_BVALID(1'b0),
    .m_axi_W4_BREADY(grp_Load_Weight_fu_295_m_axi_W4_BREADY),
    .m_axi_W4_BRESP(2'd0),
    .m_axi_W4_BID(1'd0),
    .m_axi_W4_BUSER(1'd0),
    .Weight1(Weight1),
    .Weight2(Weight2),
    .Weight3(Weight3),
    .Weight4(Weight4),
    .weight_buffer_address1(grp_Load_Weight_fu_295_weight_buffer_address1),
    .weight_buffer_ce1(grp_Load_Weight_fu_295_weight_buffer_ce1),
    .weight_buffer_we1(grp_Load_Weight_fu_295_weight_buffer_we1),
    .weight_buffer_d1(grp_Load_Weight_fu_295_weight_buffer_d1),
    .Out_LP_now(Out_LP_now),
    .In_LP_now(grp_Load_Weight_fu_295_In_LP_now),
    .CHin(CHin)
);

Dense_Compute grp_Compute_fu_318(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Compute_fu_318_ap_start),
    .ap_done(grp_Compute_fu_318_ap_done),
    .ap_idle(grp_Compute_fu_318_ap_idle),
    .ap_ready(grp_Compute_fu_318_ap_ready),
    .input_buffer_address0(grp_Compute_fu_318_input_buffer_address0),
    .input_buffer_ce0(grp_Compute_fu_318_input_buffer_ce0),
    .input_buffer_q0(grp_Compute_fu_318_input_buffer_q0),
    .input_buffer_address1(grp_Compute_fu_318_input_buffer_address1),
    .input_buffer_ce1(grp_Compute_fu_318_input_buffer_ce1),
    .input_buffer_q1(grp_Compute_fu_318_input_buffer_q1),
    .weight_buffer_address0(grp_Compute_fu_318_weight_buffer_address0),
    .weight_buffer_ce0(grp_Compute_fu_318_weight_buffer_ce0),
    .weight_buffer_q0(grp_Compute_fu_318_weight_buffer_q0),
    .weight_buffer_address1(grp_Compute_fu_318_weight_buffer_address1),
    .weight_buffer_ce1(grp_Compute_fu_318_weight_buffer_ce1),
    .weight_buffer_q1(grp_Compute_fu_318_weight_buffer_q1),
    .output_buffer_address0(grp_Compute_fu_318_output_buffer_address0),
    .output_buffer_ce0(grp_Compute_fu_318_output_buffer_ce0),
    .output_buffer_q0(output_buffer_q0),
    .output_buffer_address1(grp_Compute_fu_318_output_buffer_address1),
    .output_buffer_ce1(grp_Compute_fu_318_output_buffer_ce1),
    .output_buffer_we1(grp_Compute_fu_318_output_buffer_we1),
    .output_buffer_d1(grp_Compute_fu_318_output_buffer_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Compute_fu_318_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | ((ap_phi_mux_pp_phi_fu_261_p4 == 1'd1) & (icmp_ln185_fu_444_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_phi_fu_261_p4 == 1'd0) & (icmp_ln185_fu_444_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16)))) begin
            grp_Compute_fu_318_ap_start_reg <= 1'b1;
        end else if ((grp_Compute_fu_318_ap_ready == 1'b1)) begin
            grp_Compute_fu_318_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Load_Input_fu_282_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14))) begin
            grp_Load_Input_fu_282_ap_start_reg <= 1'b1;
        end else if ((grp_Load_Input_fu_282_ap_ready == 1'b1)) begin
            grp_Load_Input_fu_282_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Load_Weight_fu_295_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14))) begin
            grp_Load_Weight_fu_295_ap_start_reg <= 1'b1;
        end else if ((grp_Load_Weight_fu_295_ap_ready == 1'b1)) begin
            grp_Load_Weight_fu_295_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        In_LP_now_fu_144 <= 31'd0;
    end else if (((1'b0 == ap_block_state18_on_subcall_done) & (1'b1 == ap_CS_fsm_state18))) begin
        In_LP_now_fu_144 <= In_LP_now_2_reg_571;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond104_fu_380_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        loop_index_i4_fu_140 <= 6'd0;
    end else if (((exitcond93_fu_410_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        loop_index_i4_fu_140 <= empty_217_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        loop_index_i_fu_136 <= 6'd0;
    end else if (((exitcond104_fu_380_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        loop_index_i_fu_136 <= empty_215_fu_386_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state18_on_subcall_done) & (1'b1 == ap_CS_fsm_state18))) begin
        pp_reg_257 <= ap_phi_mux_pp_1_phi_fu_273_p4;
    end else if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
        pp_reg_257 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        B1_addr_read_reg_538 <= m_axi_B1_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        B1_addr_reg_481 <= sext_ln7_1_fu_358_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        In_LP_now_2_reg_571 <= In_LP_now_2_fu_449_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln185_reg_563 <= add_ln185_fu_432_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln185_fu_444_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        add_ln187_reg_576 <= add_ln187_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        loop_index_i4_cast_reg_543[5 : 0] <= loop_index_i4_cast_fu_405_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        loop_index_i_cast_reg_523[5 : 0] <= loop_index_i_cast_fu_376_p1[5 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        B1_blk_n_AR = m_axi_B1_ARREADY;
    end else begin
        B1_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        B1_blk_n_R = m_axi_B1_RVALID;
    end else begin
        B1_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_address1 = grp_Compute_fu_318_weight_buffer_address1;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_address1 = grp_Load_Weight_fu_295_weight_buffer_address1;
    end else begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_ce0 = grp_Compute_fu_318_weight_buffer_ce0;
    end else begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_ce1 = grp_Compute_fu_318_weight_buffer_ce1;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_ce1 = grp_Load_Weight_fu_295_weight_buffer_ce1;
    end else begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_we1 = grp_Load_Weight_fu_295_weight_buffer_we1;
    end else begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_address1 = grp_Compute_fu_318_input_buffer_address1;
    end else if (((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_address1 = grp_Load_Input_fu_282_input_buffer_address1;
    end else begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_ce0 = grp_Compute_fu_318_input_buffer_ce0;
    end else begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_ce1 = grp_Compute_fu_318_input_buffer_ce1;
    end else if (((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_ce1 = grp_Load_Input_fu_282_input_buffer_ce1;
    end else begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_we1 = grp_Load_Input_fu_282_input_buffer_we1;
    end else begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_address1 = grp_Compute_fu_318_input_buffer_address1;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_address1 = grp_Load_Input_fu_282_input_buffer_address1;
    end else begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_ce0 = grp_Compute_fu_318_input_buffer_ce0;
    end else begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_ce1 = grp_Compute_fu_318_input_buffer_ce1;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_ce1 = grp_Load_Input_fu_282_input_buffer_ce1;
    end else begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_we1 = grp_Load_Input_fu_282_input_buffer_we1;
    end else begin
        Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_address1 = grp_Compute_fu_318_weight_buffer_address1;
    end else if (((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_address1 = grp_Load_Weight_fu_295_weight_buffer_address1;
    end else begin
        Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_ce0 = grp_Compute_fu_318_weight_buffer_ce0;
    end else begin
        Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_ce1 = grp_Compute_fu_318_weight_buffer_ce1;
    end else if (((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_ce1 = grp_Load_Weight_fu_295_weight_buffer_ce1;
    end else begin
        Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_we1 = grp_Load_Weight_fu_295_weight_buffer_we1;
    end else begin
        Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_B1_RVALID == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state15_on_subcall_done)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state18_on_subcall_done)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state20_on_subcall_done)) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_B1_ARREADY == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        if ((pp_reg_257 == 1'd1)) begin
            ap_phi_mux_pp_1_phi_fu_273_p4 = 1'd0;
        end else if ((pp_reg_257 == 1'd0)) begin
            ap_phi_mux_pp_1_phi_fu_273_p4 = 1'd1;
        end else begin
            ap_phi_mux_pp_1_phi_fu_273_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_pp_1_phi_fu_273_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bias_buffer_V_ce0 = 1'b1;
    end else begin
        bias_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        bias_buffer_V_ce1 = 1'b1;
    end else begin
        bias_buffer_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        bias_buffer_V_we1 = 1'b1;
    end else begin
        bias_buffer_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_Compute_fu_318_input_buffer_q0 = Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_q0;
    end else if ((((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_Compute_fu_318_input_buffer_q0 = Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_q0;
    end else begin
        grp_Compute_fu_318_input_buffer_q0 = 'bx;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_Compute_fu_318_input_buffer_q1 = Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_2_q1;
    end else if ((((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_Compute_fu_318_input_buffer_q1 = Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_3_q1;
    end else begin
        grp_Compute_fu_318_input_buffer_q1 = 'bx;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_Compute_fu_318_weight_buffer_q0 = Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_q0;
    end else if ((((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_Compute_fu_318_weight_buffer_q0 = Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_q0;
    end else begin
        grp_Compute_fu_318_weight_buffer_q0 = 'bx;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_Compute_fu_318_weight_buffer_q1 = Load_mulmulmulmulmulmuland_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_q1;
    end else if ((((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_Compute_fu_318_weight_buffer_q1 = Load_and_Compute_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_fixed_ap_1_q1;
    end else begin
        grp_Compute_fu_318_weight_buffer_q1 = 'bx;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_Load_Input_fu_282_In_LP_now = add_ln187_reg_576;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_Load_Input_fu_282_In_LP_now = 25'd0;
    end else begin
        grp_Load_Input_fu_282_In_LP_now = 'bx;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_Load_Weight_fu_295_In_LP_now = add_ln187_reg_576;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_Load_Weight_fu_295_In_LP_now = 25'd0;
    end else begin
        grp_Load_Weight_fu_295_In_LP_now = 'bx;
    end
end

always @ (*) begin
    if (((m_axi_B1_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_B1_ARVALID = 1'b1;
    end else begin
        m_axi_B1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_B1_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        m_axi_B1_RREADY = 1'b1;
    end else begin
        m_axi_B1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        m_axi_IN1_ARVALID = grp_Load_Input_fu_282_m_axi_IN1_ARVALID;
    end else begin
        m_axi_IN1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        m_axi_IN1_RREADY = grp_Load_Input_fu_282_m_axi_IN1_RREADY;
    end else begin
        m_axi_IN1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        m_axi_W1_ARVALID = grp_Load_Weight_fu_295_m_axi_W1_ARVALID;
    end else begin
        m_axi_W1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        m_axi_W1_RREADY = grp_Load_Weight_fu_295_m_axi_W1_RREADY;
    end else begin
        m_axi_W1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        m_axi_W2_ARVALID = grp_Load_Weight_fu_295_m_axi_W2_ARVALID;
    end else begin
        m_axi_W2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        m_axi_W2_RREADY = grp_Load_Weight_fu_295_m_axi_W2_RREADY;
    end else begin
        m_axi_W2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        m_axi_W3_ARVALID = grp_Load_Weight_fu_295_m_axi_W3_ARVALID;
    end else begin
        m_axi_W3_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        m_axi_W3_RREADY = grp_Load_Weight_fu_295_m_axi_W3_RREADY;
    end else begin
        m_axi_W3_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        m_axi_W4_ARVALID = grp_Load_Weight_fu_295_m_axi_W4_ARVALID;
    end else begin
        m_axi_W4_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        m_axi_W4_RREADY = grp_Load_Weight_fu_295_m_axi_W4_RREADY;
    end else begin
        m_axi_W4_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_buffer_address1 = loop_index_i4_cast_reg_543;
    end else if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        output_buffer_address1 = grp_Compute_fu_318_output_buffer_address1;
    end else begin
        output_buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        output_buffer_ce0 = grp_Compute_fu_318_output_buffer_ce0;
    end else begin
        output_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_buffer_ce1 = 1'b1;
    end else if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        output_buffer_ce1 = grp_Compute_fu_318_output_buffer_ce1;
    end else begin
        output_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_buffer_d1 = bias_buffer_V_q0;
    end else if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        output_buffer_d1 = grp_Compute_fu_318_output_buffer_d1;
    end else begin
        output_buffer_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        output_buffer_we1 = 1'b1;
    end else if ((((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd1) & (1'b1 == ap_CS_fsm_state18)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((pp_reg_257 == 1'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        output_buffer_we1 = grp_Compute_fu_318_output_buffer_we1;
    end else begin
        output_buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((m_axi_B1_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((exitcond104_fu_380_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((m_axi_B1_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state12 : begin
            if (((exitcond93_fu_410_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln185_fu_444_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if (((ap_phi_mux_pp_phi_fu_261_p4 == 1'd1) & (icmp_ln185_fu_444_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b0 == ap_block_state18_on_subcall_done) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign In_LP_now_2_fu_449_p2 = (In_LP_now_fu_144 + 31'd1);

assign add_ln185_fu_432_p2 = ($signed(Input_Loops) + $signed(32'd4294967295));

assign add_ln187_fu_459_p2 = (trunc_ln193_fu_455_p1 + 25'd1);

assign add_ln7_fu_342_p2 = ($signed(sext_ln7_fu_338_p1) + $signed(bias));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state15_on_subcall_done = ((grp_Load_Weight_fu_295_ap_done == 1'b0) | (grp_Load_Input_fu_282_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state18_on_subcall_done = (((pp_reg_257 == 1'd1) & (grp_Compute_fu_318_ap_done == 1'b0)) | ((pp_reg_257 == 1'd1) & (grp_Load_Weight_fu_295_ap_done == 1'b0)) | ((pp_reg_257 == 1'd1) & (grp_Load_Input_fu_282_ap_done == 1'b0)) | ((pp_reg_257 == 1'd0) & (grp_Compute_fu_318_ap_done == 1'b0)) | ((pp_reg_257 == 1'd0) & (grp_Load_Weight_fu_295_ap_done == 1'b0)) | ((pp_reg_257 == 1'd0) & (grp_Load_Input_fu_282_ap_done == 1'b0)));
end

always @ (*) begin
    ap_block_state20_on_subcall_done = (((pp_reg_257 == 1'd1) & (grp_Compute_fu_318_ap_done == 1'b0)) | ((pp_reg_257 == 1'd0) & (grp_Compute_fu_318_ap_done == 1'b0)));
end

assign ap_phi_mux_pp_phi_fu_261_p4 = pp_reg_257;

assign bias_buffer_V_address0 = loop_index_i4_cast_fu_405_p1;

assign bias_buffer_V_address1 = loop_index_i_cast_reg_523;

assign empty_215_fu_386_p2 = (loop_index_i_fu_136 + 6'd1);

assign empty_217_fu_416_p2 = (loop_index_i4_fu_140 + 6'd1);

assign exitcond104_fu_380_p2 = ((loop_index_i_fu_136 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond93_fu_410_p2 = ((loop_index_i4_fu_140 == 6'd32) ? 1'b1 : 1'b0);

assign grp_Compute_fu_318_ap_start = grp_Compute_fu_318_ap_start_reg;

assign grp_Load_Input_fu_282_ap_start = grp_Load_Input_fu_282_ap_start_reg;

assign grp_Load_Weight_fu_295_ap_start = grp_Load_Weight_fu_295_ap_start_reg;

assign icmp_ln185_fu_444_p2 = (($signed(zext_ln185_fu_440_p1) < $signed(add_ln185_reg_563)) ? 1'b1 : 1'b0);

assign loop_index_i4_cast_fu_405_p1 = loop_index_i4_fu_140;

assign loop_index_i_cast_fu_376_p1 = loop_index_i_fu_136;

assign m_axi_B1_ARADDR = B1_addr_reg_481;

assign m_axi_B1_ARBURST = 2'd0;

assign m_axi_B1_ARCACHE = 4'd0;

assign m_axi_B1_ARID = 1'd0;

assign m_axi_B1_ARLEN = 32'd32;

assign m_axi_B1_ARLOCK = 2'd0;

assign m_axi_B1_ARPROT = 3'd0;

assign m_axi_B1_ARQOS = 4'd0;

assign m_axi_B1_ARREGION = 4'd0;

assign m_axi_B1_ARSIZE = 3'd0;

assign m_axi_B1_ARUSER = 1'd0;

assign m_axi_B1_AWADDR = 64'd0;

assign m_axi_B1_AWBURST = 2'd0;

assign m_axi_B1_AWCACHE = 4'd0;

assign m_axi_B1_AWID = 1'd0;

assign m_axi_B1_AWLEN = 32'd0;

assign m_axi_B1_AWLOCK = 2'd0;

assign m_axi_B1_AWPROT = 3'd0;

assign m_axi_B1_AWQOS = 4'd0;

assign m_axi_B1_AWREGION = 4'd0;

assign m_axi_B1_AWSIZE = 3'd0;

assign m_axi_B1_AWUSER = 1'd0;

assign m_axi_B1_AWVALID = 1'b0;

assign m_axi_B1_BREADY = 1'b0;

assign m_axi_B1_WDATA = 16'd0;

assign m_axi_B1_WID = 1'd0;

assign m_axi_B1_WLAST = 1'b0;

assign m_axi_B1_WSTRB = 2'd0;

assign m_axi_B1_WUSER = 1'd0;

assign m_axi_B1_WVALID = 1'b0;

assign m_axi_IN1_ARADDR = grp_Load_Input_fu_282_m_axi_IN1_ARADDR;

assign m_axi_IN1_ARBURST = grp_Load_Input_fu_282_m_axi_IN1_ARBURST;

assign m_axi_IN1_ARCACHE = grp_Load_Input_fu_282_m_axi_IN1_ARCACHE;

assign m_axi_IN1_ARID = grp_Load_Input_fu_282_m_axi_IN1_ARID;

assign m_axi_IN1_ARLEN = grp_Load_Input_fu_282_m_axi_IN1_ARLEN;

assign m_axi_IN1_ARLOCK = grp_Load_Input_fu_282_m_axi_IN1_ARLOCK;

assign m_axi_IN1_ARPROT = grp_Load_Input_fu_282_m_axi_IN1_ARPROT;

assign m_axi_IN1_ARQOS = grp_Load_Input_fu_282_m_axi_IN1_ARQOS;

assign m_axi_IN1_ARREGION = grp_Load_Input_fu_282_m_axi_IN1_ARREGION;

assign m_axi_IN1_ARSIZE = grp_Load_Input_fu_282_m_axi_IN1_ARSIZE;

assign m_axi_IN1_ARUSER = grp_Load_Input_fu_282_m_axi_IN1_ARUSER;

assign m_axi_IN1_AWADDR = 64'd0;

assign m_axi_IN1_AWBURST = 2'd0;

assign m_axi_IN1_AWCACHE = 4'd0;

assign m_axi_IN1_AWID = 1'd0;

assign m_axi_IN1_AWLEN = 32'd0;

assign m_axi_IN1_AWLOCK = 2'd0;

assign m_axi_IN1_AWPROT = 3'd0;

assign m_axi_IN1_AWQOS = 4'd0;

assign m_axi_IN1_AWREGION = 4'd0;

assign m_axi_IN1_AWSIZE = 3'd0;

assign m_axi_IN1_AWUSER = 1'd0;

assign m_axi_IN1_AWVALID = 1'b0;

assign m_axi_IN1_BREADY = 1'b0;

assign m_axi_IN1_WDATA = 16'd0;

assign m_axi_IN1_WID = 1'd0;

assign m_axi_IN1_WLAST = 1'b0;

assign m_axi_IN1_WSTRB = 2'd0;

assign m_axi_IN1_WUSER = 1'd0;

assign m_axi_IN1_WVALID = 1'b0;

assign m_axi_W1_ARADDR = grp_Load_Weight_fu_295_m_axi_W1_ARADDR;

assign m_axi_W1_ARBURST = grp_Load_Weight_fu_295_m_axi_W1_ARBURST;

assign m_axi_W1_ARCACHE = grp_Load_Weight_fu_295_m_axi_W1_ARCACHE;

assign m_axi_W1_ARID = grp_Load_Weight_fu_295_m_axi_W1_ARID;

assign m_axi_W1_ARLEN = grp_Load_Weight_fu_295_m_axi_W1_ARLEN;

assign m_axi_W1_ARLOCK = grp_Load_Weight_fu_295_m_axi_W1_ARLOCK;

assign m_axi_W1_ARPROT = grp_Load_Weight_fu_295_m_axi_W1_ARPROT;

assign m_axi_W1_ARQOS = grp_Load_Weight_fu_295_m_axi_W1_ARQOS;

assign m_axi_W1_ARREGION = grp_Load_Weight_fu_295_m_axi_W1_ARREGION;

assign m_axi_W1_ARSIZE = grp_Load_Weight_fu_295_m_axi_W1_ARSIZE;

assign m_axi_W1_ARUSER = grp_Load_Weight_fu_295_m_axi_W1_ARUSER;

assign m_axi_W1_AWADDR = 64'd0;

assign m_axi_W1_AWBURST = 2'd0;

assign m_axi_W1_AWCACHE = 4'd0;

assign m_axi_W1_AWID = 1'd0;

assign m_axi_W1_AWLEN = 32'd0;

assign m_axi_W1_AWLOCK = 2'd0;

assign m_axi_W1_AWPROT = 3'd0;

assign m_axi_W1_AWQOS = 4'd0;

assign m_axi_W1_AWREGION = 4'd0;

assign m_axi_W1_AWSIZE = 3'd0;

assign m_axi_W1_AWUSER = 1'd0;

assign m_axi_W1_AWVALID = 1'b0;

assign m_axi_W1_BREADY = 1'b0;

assign m_axi_W1_WDATA = 16'd0;

assign m_axi_W1_WID = 1'd0;

assign m_axi_W1_WLAST = 1'b0;

assign m_axi_W1_WSTRB = 2'd0;

assign m_axi_W1_WUSER = 1'd0;

assign m_axi_W1_WVALID = 1'b0;

assign m_axi_W2_ARADDR = grp_Load_Weight_fu_295_m_axi_W2_ARADDR;

assign m_axi_W2_ARBURST = grp_Load_Weight_fu_295_m_axi_W2_ARBURST;

assign m_axi_W2_ARCACHE = grp_Load_Weight_fu_295_m_axi_W2_ARCACHE;

assign m_axi_W2_ARID = grp_Load_Weight_fu_295_m_axi_W2_ARID;

assign m_axi_W2_ARLEN = grp_Load_Weight_fu_295_m_axi_W2_ARLEN;

assign m_axi_W2_ARLOCK = grp_Load_Weight_fu_295_m_axi_W2_ARLOCK;

assign m_axi_W2_ARPROT = grp_Load_Weight_fu_295_m_axi_W2_ARPROT;

assign m_axi_W2_ARQOS = grp_Load_Weight_fu_295_m_axi_W2_ARQOS;

assign m_axi_W2_ARREGION = grp_Load_Weight_fu_295_m_axi_W2_ARREGION;

assign m_axi_W2_ARSIZE = grp_Load_Weight_fu_295_m_axi_W2_ARSIZE;

assign m_axi_W2_ARUSER = grp_Load_Weight_fu_295_m_axi_W2_ARUSER;

assign m_axi_W2_AWADDR = 64'd0;

assign m_axi_W2_AWBURST = 2'd0;

assign m_axi_W2_AWCACHE = 4'd0;

assign m_axi_W2_AWID = 1'd0;

assign m_axi_W2_AWLEN = 32'd0;

assign m_axi_W2_AWLOCK = 2'd0;

assign m_axi_W2_AWPROT = 3'd0;

assign m_axi_W2_AWQOS = 4'd0;

assign m_axi_W2_AWREGION = 4'd0;

assign m_axi_W2_AWSIZE = 3'd0;

assign m_axi_W2_AWUSER = 1'd0;

assign m_axi_W2_AWVALID = 1'b0;

assign m_axi_W2_BREADY = 1'b0;

assign m_axi_W2_WDATA = 16'd0;

assign m_axi_W2_WID = 1'd0;

assign m_axi_W2_WLAST = 1'b0;

assign m_axi_W2_WSTRB = 2'd0;

assign m_axi_W2_WUSER = 1'd0;

assign m_axi_W2_WVALID = 1'b0;

assign m_axi_W3_ARADDR = grp_Load_Weight_fu_295_m_axi_W3_ARADDR;

assign m_axi_W3_ARBURST = grp_Load_Weight_fu_295_m_axi_W3_ARBURST;

assign m_axi_W3_ARCACHE = grp_Load_Weight_fu_295_m_axi_W3_ARCACHE;

assign m_axi_W3_ARID = grp_Load_Weight_fu_295_m_axi_W3_ARID;

assign m_axi_W3_ARLEN = grp_Load_Weight_fu_295_m_axi_W3_ARLEN;

assign m_axi_W3_ARLOCK = grp_Load_Weight_fu_295_m_axi_W3_ARLOCK;

assign m_axi_W3_ARPROT = grp_Load_Weight_fu_295_m_axi_W3_ARPROT;

assign m_axi_W3_ARQOS = grp_Load_Weight_fu_295_m_axi_W3_ARQOS;

assign m_axi_W3_ARREGION = grp_Load_Weight_fu_295_m_axi_W3_ARREGION;

assign m_axi_W3_ARSIZE = grp_Load_Weight_fu_295_m_axi_W3_ARSIZE;

assign m_axi_W3_ARUSER = grp_Load_Weight_fu_295_m_axi_W3_ARUSER;

assign m_axi_W3_AWADDR = 64'd0;

assign m_axi_W3_AWBURST = 2'd0;

assign m_axi_W3_AWCACHE = 4'd0;

assign m_axi_W3_AWID = 1'd0;

assign m_axi_W3_AWLEN = 32'd0;

assign m_axi_W3_AWLOCK = 2'd0;

assign m_axi_W3_AWPROT = 3'd0;

assign m_axi_W3_AWQOS = 4'd0;

assign m_axi_W3_AWREGION = 4'd0;

assign m_axi_W3_AWSIZE = 3'd0;

assign m_axi_W3_AWUSER = 1'd0;

assign m_axi_W3_AWVALID = 1'b0;

assign m_axi_W3_BREADY = 1'b0;

assign m_axi_W3_WDATA = 16'd0;

assign m_axi_W3_WID = 1'd0;

assign m_axi_W3_WLAST = 1'b0;

assign m_axi_W3_WSTRB = 2'd0;

assign m_axi_W3_WUSER = 1'd0;

assign m_axi_W3_WVALID = 1'b0;

assign m_axi_W4_ARADDR = grp_Load_Weight_fu_295_m_axi_W4_ARADDR;

assign m_axi_W4_ARBURST = grp_Load_Weight_fu_295_m_axi_W4_ARBURST;

assign m_axi_W4_ARCACHE = grp_Load_Weight_fu_295_m_axi_W4_ARCACHE;

assign m_axi_W4_ARID = grp_Load_Weight_fu_295_m_axi_W4_ARID;

assign m_axi_W4_ARLEN = grp_Load_Weight_fu_295_m_axi_W4_ARLEN;

assign m_axi_W4_ARLOCK = grp_Load_Weight_fu_295_m_axi_W4_ARLOCK;

assign m_axi_W4_ARPROT = grp_Load_Weight_fu_295_m_axi_W4_ARPROT;

assign m_axi_W4_ARQOS = grp_Load_Weight_fu_295_m_axi_W4_ARQOS;

assign m_axi_W4_ARREGION = grp_Load_Weight_fu_295_m_axi_W4_ARREGION;

assign m_axi_W4_ARSIZE = grp_Load_Weight_fu_295_m_axi_W4_ARSIZE;

assign m_axi_W4_ARUSER = grp_Load_Weight_fu_295_m_axi_W4_ARUSER;

assign m_axi_W4_AWADDR = 64'd0;

assign m_axi_W4_AWBURST = 2'd0;

assign m_axi_W4_AWCACHE = 4'd0;

assign m_axi_W4_AWID = 1'd0;

assign m_axi_W4_AWLEN = 32'd0;

assign m_axi_W4_AWLOCK = 2'd0;

assign m_axi_W4_AWPROT = 3'd0;

assign m_axi_W4_AWQOS = 4'd0;

assign m_axi_W4_AWREGION = 4'd0;

assign m_axi_W4_AWSIZE = 3'd0;

assign m_axi_W4_AWUSER = 1'd0;

assign m_axi_W4_AWVALID = 1'b0;

assign m_axi_W4_BREADY = 1'b0;

assign m_axi_W4_WDATA = 16'd0;

assign m_axi_W4_WID = 1'd0;

assign m_axi_W4_WLAST = 1'b0;

assign m_axi_W4_WSTRB = 2'd0;

assign m_axi_W4_WUSER = 1'd0;

assign m_axi_W4_WVALID = 1'b0;

assign output_buffer_address0 = grp_Compute_fu_318_output_buffer_address0;

assign sext_ln7_1_fu_358_p1 = $signed(trunc_ln7_fu_348_p4);

assign sext_ln7_fu_338_p1 = $signed(shl_ln7_fu_330_p3);

assign shl_ln7_fu_330_p3 = {{Out_LP_now}, {6'd0}};

assign trunc_ln193_fu_455_p1 = In_LP_now_fu_144[24:0];

assign trunc_ln7_fu_348_p4 = {{add_ln7_fu_342_p2[63:1]}};

assign zext_ln185_fu_440_p1 = In_LP_now_fu_144;

always @ (posedge ap_clk) begin
    loop_index_i_cast_reg_523[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    loop_index_i4_cast_reg_543[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //Dense_Load_and_Compute
